{"mappings":"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","sources":["views/view-ui.js","inspector/UiObserver.js","elements/live-view.js"],"sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport { html, css, LitElement } from 'lit'\nimport { UIObserver } from '../inspector/UiObserver'\nimport '../elements/pill-toggle'\nimport '../elements/live-view'\n\nexport class ViewUi extends LitElement {\n  static styles = css`\n    :host{\n        background:white;\n        display:flex;\n        width:100%;\n        height:100%;\n        overflow-y:auto;\n        flex-direction: column;\n        padding: 20px;\n    }\n    main{\n        height: 100%;\n        overflow-y: auto;\n        flex-grow:1;\n        display:flex;\n    }\n    table{\n        width:100%;\n    }\n    aside{\n        height: 100%;\n        max-width: 50%;\n        flex-grow: 1;\n        display: flex;\n        flex-direction: column;\n        padding: 20px;\n        border-left: solid 1px var(--lt-color-gray-900);\n        background: white;\n        position: sticky;\n        top: 10px;\n        max-height: 92vh;\n        overflow-y: auto;\n    }\n    aside > *{\n        margin-top:5px;\n    \n    }\n    ul{\n        padding-left: 20px;\n        list-style:none;\n    }\n    li{\n        cursor: pointer;\n    }\n    li ul{\n        padding-left: 29px;\n    }\n    li.collapsed ul{\n        display:none;\n    }\n    li.active > span.name{\n        background:blue;\n        color:white;\n    }\n    li span.name{\n        border-radius:10px;\n        padding:3px;\n    }\n\n    tr{\n        cursor: pointer;\n    }\n    pre{\n        padding:0;\n        margin:0;\n    }\n    tr.active{\n      background: lightgray;\n    }  \n    #canvasHolder{\n        flex:1;\n        display:flex;\n        justify-content:center;\n        align-items:center;\n        position: sticky;\n        top: 20px;\n    }\n    `\n\n  constructor () {\n    super()\n    this.settings = {\n      'Hide Invisible Elements': false,\n      'Hide Null Size Elements': false,\n      'Show Rulers': false\n    }\n  }\n\n  connectedCallback () {\n    super.connectedCallback()\n    UIObserver.onAny(() => { this.onRequest() })\n    requestIdleCallback(() => {\n      UIObserver.refresh()\n    })\n  }\n\n  static get properties () {\n    return {\n      data: { attribute: false },\n      detail: { attribute: false },\n      settings: { attribute: false }\n    }\n  }\n\n  onRequest () {\n    this.data = UIObserver.tree\n    this.requestUpdate('data')\n  }\n\n  renderTree (rootObject) {\n    if (rootObject.subItems.length == 0) {\n      return ''\n    }\n    return html`\n            <ul>\n                ${rootObject.subItems.map(item => this.renderNode(item))}\n            </ul>\n        `\n  }\n\n  renderNode (node) {\n    // Check if the Node Matches the Filter:\n    if (this.settings['Hide Invisible Elements']) {\n      if (!node.visible) {\n        return html``\n      }\n    }\n    if (this.settings['Hide Null Size Elements']) {\n      if (node.width == 0 && node.height == 0) {\n        return html``\n      }\n    }\n\n    const cleanClassname = node.__class__.split('_QMLTYPE_')[0].split('_QML_')[0]\n\n    const text = (node.objectName != '') ? node.objectName : cleanClassname\n    const hasChilden = node.subItems.length > 0\n    const isDetail = this.detail == node\n    const isCollapsed = node.__collapsed__\n    return html`\n        <li class=\"view-element ${hasChilden ? 'hasChilden' : ''} ${isDetail ? 'active' : ''} ${isCollapsed ? 'collapsed' : ''}\">\n        ${hasChilden\n? html`\n            <span class=\"indicator\" @click=\"${(e) => { this.toggleCollapse(e, node) }}\">\n            ${isCollapsed ? '➡️' : '⬇️'}\n            </span>\n        `\n: ''}   \n            \n            <span class=\"name\" @click=\"${(e) => { this.openDetail(e, node) }}\" >${text}</span>  \n            ${this.renderTree(node)}\n        </li>\n        `\n  }\n\n  renderDetail (node) {\n    console.log(node)\n    return html`\n             <aside style=\"flex:1;\">\n                 <button @click=\"${() => this.closeDetail()}\">close</button>\n                 <hr>\n                <table>\n                    ${Object.entries(node).map(kv => {\n                        const [key, value] = kv\n                        return html`\n                            <tr>\n                                <td> ${key}</td>\n                                <td><pre>${value}</pre></td>\n                            </tr>\n                        `\n                    })}\n                </table>\n                <hr>\n             </aside>\n            `\n  }\n\n  openDetail (e, node) {\n    e.stopPropagation()\n    this.detail = node\n    this.requestUpdate('detail')\n  }\n\n  closeDetail () {\n    this.detail = undefined\n  }\n\n  quickFilterChange (id) {\n    this.settings[id] = !this.settings[id]\n    this.requestUpdate('settings')\n  }\n  saveImage(){\n    this.renderRoot.querySelector(\"live-view\").saveImage();\n  }\n\n  toggleCollapse (event, node) {\n    node.__collapsed__ = !node.__collapsed__\n    this.requestUpdate('data')\n  }\n\n  render () {\n    return html`\n         <nav>\n            <pill-toggle noActive=\"true\"  @click=${(e) => {this.saveImage()}}>Download Image</pill-toggle>\n            <span>Settings:</span>\n            ${Object.keys(this.settings).map(e => html` <pill-toggle id=\"${e}\" @click=${() => this.quickFilterChange(e)}>${e}</pill-toggle>`)}\n        </nav>\n        <main>\n          <live-view .qmlHighlight=${this.detail} .showRulers=${this.settings['Show Rulers']}></live-view>\n          <ul style=\"flex:1;\">\n            ${this.data ? this.renderNode(this.data[0]) : ''}\n          </ul>\n          ${this.detail ? this.renderDetail(this.detail) : ''}\n        </main>\n    `\n  }\n}\ncustomElements.define('view-ui', ViewUi)\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport { Client } from './client'\nimport { GenericDispatcher } from './genericdispatcher'\n\nclass _UIObserver extends GenericDispatcher {\n  constructor () {\n    super()\n    Client.on('qml_tree', (r) => this.onIncomingViewTree(r))\n    Client.on('view_tree', (r) => this.onIncomingViewTree(r))\n    Client.on('screen_capture', (r) => this.onIncomingScreen(r))\n\n    this.counter = 0\n    this.requests = []\n  }\n\n  // Adds \"parent field for each element to make stuff more ez\"\n  fixTree (uiTree) {\n    uiTree.map(element => this.fixElement(element))\n\n    return uiTree\n  }\n\n  fixElement (element, parent) {\n    element.parent = parent\n    element.__collapsed__ = false\n    // X,Y,Z are always relative to the parent element, so\n    // let's already note the totalX realative to display 0/0\n    // so drawing highlights is more ez\n    if (parent) {\n      element.totalX = element.x + parent.totalX\n      element.totalY = element.y + parent.totalY\n    } else {\n      element.totalX = element.x\n      element.totalY = element.y\n    }\n    if (element.subItems) {\n      element.subItems.forEach(i => this.fixElement(i, element))\n    }\n  }\n\n  onIncomingViewTree (message) {\n    this.tree = this.fixTree(message.tree)\n\n    this.emit({ type: 'tree', list: this.tree })\n  }\n\n  onIncomingScreen (screen) {\n    console.log('Incoming screenshot')\n    this.screen = screen.value\n    this.emit({ type: 'screenshot', screen })\n  }\n\n  refresh () {\n    Client.sendCommand('view_tree')\n    Client.sendCommand('screen_capture')\n  }\n\n  getScreen () {\n    Client.sendCommand('screen_capture')\n  }\n}\n\nexport const UIObserver = new _UIObserver()\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport { html, css, LitElement } from 'lit'\nimport { UIObserver } from '../inspector/UiObserver'\n\nexport class LiveView extends LitElement {\n  static styles = css`p { color: blue }`\n\n  static properties = {\n    // QML Element to Highlight\n    qmlHighlight: { attribute: false },\n    // Decoded Image\n    decodedImage: { attribute: false },\n    // 2nd QML Elment to highlight\n    qmlCompare: { attribute: false },\n    // shows rulers\n    showRulers: { attribute: false },\n    // Time to Refresh ScreenShot in ms\n    refreshTime: { attribute: false },\n    // QML Root Element\n    qmlRoot: { attribute: false }\n  }\n\n  constructor () {\n    super()\n    this.refreshTime = 1000\n    this.showRulers = false\n    this.qmlHighlight = null\n  }\n\n  saveImage(){\n    const canvas = this.renderRoot.querySelector('canvas')\n    var link = this.renderRoot.getElementById('link');\n    link.setAttribute('download', 'Screenshot.png');\n    link.setAttribute('href', canvas.toDataURL(\"image/png\").replace(\"image/png\", \"image/octet-stream\"));\n    link.click();\n  }\n\n  connectedCallback () {\n    super.connectedCallback()\n    UIObserver.on('screenshot', (evnt) => {\n      this.screen = evnt.screen.value\n      this.decodeImage()\n    })\n    UIObserver.on('tree', (evnt) => {\n      const tree = evnt.list\n      this.qmlRoot = tree[0]\n    })\n    this.timer = window.setInterval(() => {\n      UIObserver.getScreen()\n    }, this.refreshTime)\n  }\n\n  disconnectedCallback () {\n    super.disconnectedCallback()\n    window.clearInterval(this.timer)\n  }\n\n  decodeImage () {\n    const image = new Image()\n    image.onload = () => {\n      this.decodedImage = image\n    }\n    image.src = 'data:image/png;base64,' + this.screen\n  }\n\n  renderCanvas () {\n    if (!this.renderRoot) {\n      return\n    }\n    const canvas = this.renderRoot.querySelector('canvas')\n    const ctx = canvas.getContext('2d')\n    requestAnimationFrame(() => {\n      ctx.drawImage(this.decodedImage, 0, 0, canvas.width, canvas.height)\n      if (!this.qmlHighlight) {\n        return\n      }\n      const { totalX, totalY, width, height } = this.qmlHighlight\n\n      ctx.beginPath()\n      ctx.fillStyle = 'rgba(255,165,0,0.3)'\n      ctx.rect(totalX, totalY, width, height)\n      ctx.fill()\n      ctx.closePath()\n\n      if (this.showRulers) {\n        ctx.beginPath()\n        ctx.strokeStyle = 'rgba(255,165,0,0.3)'\n\n        ctx.moveTo(totalX, 0)\n        ctx.lineTo(totalX, this.qmlRoot.height)\n\n        ctx.moveTo(totalX + width, 0)\n        ctx.lineTo(totalX + width, this.qmlRoot.height)\n\n        ctx.moveTo(0, totalY)\n        ctx.lineTo(0, this.qmlRoot.width)\n\n        ctx.moveTo(0, totalY + height)\n        ctx.lineTo(0, totalY + height + this.qmlRoot.width)\n\n        ctx.stroke()\n        ctx.closePath()\n      }\n    })\n  }\n\n  requestUpdate (name, oldValue) {\n    if (name == 'qmlHighlight') {\n      this.renderCanvas()\n    }\n    if (name == 'decodedImage') {\n      this.renderCanvas()\n    }\n    if (name == 'showRulers') {\n      this.renderCanvas()\n    }\n    return super.requestUpdate(name, oldValue)\n  }\n\n  render () {\n    if (!this.qmlRoot) {\n      return html``\n    }\n    return html`\n       <div id=\"canvasHolder\">\n         <a id=\"link\" style=\"display:none\">downloadImage</a>\n        <canvas style=\"background:pink;\" width=${this.qmlRoot.width} height=${this.qmlRoot.height}></canvas>\n       </div>\n    `\n  }\n}\ncustomElements.define('live-view', LiveView)\n"],"names":["$225838103b3d9bc4$export$69166fc8e2f829d4","$aD10K","LitElement","css","super","this","settings","connectedCallback","$dONv4","UIObserver","onAny","onRequest","requestIdleCallback","refresh","properties","data","attribute","detail","tree","requestUpdate","renderTree","rootObject","subItems","length","html","map","item","renderNode","node","visible","width","height","cleanClassname","__class__","split","text","objectName","hasChilden","isDetail","isCollapsed","__collapsed__","e","toggleCollapse","openDetail","renderDetail","console","log","closeDetail","Object","entries","kv","key","value","stopPropagation","undefined","quickFilterChange","id","saveImage","renderRoot","querySelector","event","render","keys","customElements","define","$a0f6579836b306b8$var$_UIObserver","$vbrOd","GenericDispatcher","$cud2N","Client","on","r","onIncomingViewTree","onIncomingScreen","counter","requests","fixTree","uiTree","element","fixElement","parent","totalX","x","totalY","y","forEach","i","message","emit","type","list","screen","sendCommand","getScreen","$a0f6579836b306b8$export$f3ecd3d9cb84f039","$d76a165a88f619d6$export$ea74e969b6f8167d","qmlHighlight","decodedImage","qmlCompare","showRulers","refreshTime","qmlRoot","canvas","link","getElementById","setAttribute","toDataURL","replace","click","evnt","decodeImage","timer","window","setInterval","disconnectedCallback","clearInterval","image","Image","onload","src","renderCanvas","ctx","getContext","requestAnimationFrame","drawImage","beginPath","fillStyle","rect","fill","closePath","strokeStyle","moveTo","lineTo","stroke","name","oldValue"],"version":3,"file":"view-ui.4adc6734.js.map"}