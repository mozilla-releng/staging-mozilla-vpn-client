{"mappings":"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","sources":["views/view-shell.js","node_modules/xterm/lib/webpack:/xterm/webpack/universalModuleDefinition","node_modules/xterm/lib/webpack:/xterm/src/browser/AccessibilityManager.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/Clipboard.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/Color.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/ColorContrastCache.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/ColorManager.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/Dom.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/Lifecycle.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/Linkifier.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/Linkifier2.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/LocalizableStrings.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/MouseZoneManager.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/RenderDebouncer.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/ScreenDprMonitor.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/Terminal.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/TimeBasedDebouncer.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/Viewport.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/input/CompositionHelper.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/input/Mouse.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/input/MoveToCell.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/public/Terminal.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/BaseRenderLayer.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/CursorRenderLayer.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/CustomGlyphs.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/GridCache.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/LinkRenderLayer.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/Renderer.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/RendererUtils.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/SelectionRenderLayer.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/TextRenderLayer.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/atlas/BaseCharAtlas.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/atlas/CharAtlasCache.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/atlas/CharAtlasUtils.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/atlas/Constants.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/atlas/DynamicCharAtlas.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/atlas/LRUMap.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/dom/DomRenderer.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/dom/DomRendererRowFactory.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/selection/SelectionModel.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/services/CharSizeService.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/services/CharacterJoinerService.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/services/CoreBrowserService.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/services/DecorationService.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/services/MouseService.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/services/RenderService.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/services/SelectionService.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/services/Services.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/services/SoundService.ts","node_modules/xterm/lib/webpack:/xterm/src/common/CircularList.ts","node_modules/xterm/lib/webpack:/xterm/src/common/Clone.ts","node_modules/xterm/lib/webpack:/xterm/src/common/CoreTerminal.ts","node_modules/xterm/lib/webpack:/xterm/src/common/EventEmitter.ts","node_modules/xterm/lib/webpack:/xterm/src/common/InputHandler.ts","node_modules/xterm/lib/webpack:/xterm/src/common/Lifecycle.ts","node_modules/xterm/lib/webpack:/xterm/src/common/Platform.ts","node_modules/xterm/lib/webpack:/xterm/src/common/TypedArrayUtils.ts","node_modules/xterm/lib/webpack:/xterm/src/common/WindowsMode.ts","node_modules/xterm/lib/webpack:/xterm/src/common/buffer/AttributeData.ts","node_modules/xterm/lib/webpack:/xterm/src/common/buffer/Buffer.ts","node_modules/xterm/lib/webpack:/xterm/src/common/buffer/BufferLine.ts","node_modules/xterm/lib/webpack:/xterm/src/common/buffer/BufferRange.ts","node_modules/xterm/lib/webpack:/xterm/src/common/buffer/BufferReflow.ts","node_modules/xterm/lib/webpack:/xterm/src/common/buffer/BufferSet.ts","node_modules/xterm/lib/webpack:/xterm/src/common/buffer/CellData.ts","node_modules/xterm/lib/webpack:/xterm/src/common/buffer/Constants.ts","node_modules/xterm/lib/webpack:/xterm/src/common/buffer/Marker.ts","node_modules/xterm/lib/webpack:/xterm/src/common/data/Charsets.ts","node_modules/xterm/lib/webpack:/xterm/src/common/data/EscapeSequences.ts","node_modules/xterm/lib/webpack:/xterm/src/common/input/Keyboard.ts","node_modules/xterm/lib/webpack:/xterm/src/common/input/TextDecoder.ts","node_modules/xterm/lib/webpack:/xterm/src/common/input/UnicodeV6.ts","node_modules/xterm/lib/webpack:/xterm/src/common/input/WriteBuffer.ts","node_modules/xterm/lib/webpack:/xterm/src/common/input/XParseColor.ts","node_modules/xterm/lib/webpack:/xterm/src/common/parser/Constants.ts","node_modules/xterm/lib/webpack:/xterm/src/common/parser/DcsParser.ts","node_modules/xterm/lib/webpack:/xterm/src/common/parser/EscapeSequenceParser.ts","node_modules/xterm/lib/webpack:/xterm/src/common/parser/OscParser.ts","node_modules/xterm/lib/webpack:/xterm/src/common/parser/Params.ts","node_modules/xterm/lib/webpack:/xterm/src/common/public/AddonManager.ts","node_modules/xterm/lib/webpack:/xterm/src/common/public/BufferApiView.ts","node_modules/xterm/lib/webpack:/xterm/src/common/public/BufferLineApiView.ts","node_modules/xterm/lib/webpack:/xterm/src/common/public/BufferNamespaceApi.ts","node_modules/xterm/lib/webpack:/xterm/src/common/public/ParserApi.ts","node_modules/xterm/lib/webpack:/xterm/src/common/public/UnicodeApi.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/BufferService.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/CharsetService.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/CoreMouseService.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/CoreService.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/DirtyRowService.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/InstantiationService.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/LogService.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/OptionsService.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/ServiceRegistry.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/Services.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/UnicodeService.ts","node_modules/xterm/lib/webpack:/xterm/webpack/bootstrap","node_modules/xterm/lib/webpack:/xterm/webpack/startup","node_modules/xterm-addon-fit/lib/webpack:/FitAddon/webpack/universalModuleDefinition","node_modules/xterm-addon-fit/lib/webpack:/FitAddon/src/FitAddon.ts","node_modules/xterm-addon-fit/lib/webpack:/FitAddon/webpack/bootstrap","node_modules/xterm-addon-fit/lib/webpack:/FitAddon/webpack/startup"],"sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport { Terminal } from 'xterm'\nimport { FitAddon } from 'xterm-addon-fit'\nimport { html, css, LitElement } from 'lit'\nimport { Client } from '../inspector/client'\nimport { CommandObserver } from '../inspector/CommandObserver'\n\nconst RED_ESCAPE = '\\x1B[0;31m'\nconst NO_COLOR_ESCAPE = '\\x1B[0m'\nconst NEWLINE = '\\r\\n'\n\nconst baseTheme = {\n  foreground: '#F8F8F8',\n  background: '#2D2E2C',\n  selection: '#5DA5D533',\n  black: '#1E1E1D',\n  brightBlack: '#262625',\n  red: '#CE5C5C',\n  brightRed: '#FF7272',\n  green: '#5BCC5B',\n  brightGreen: '#72FF72',\n  yellow: '#CCCC5B',\n  brightYellow: '#FFFF72',\n  blue: '#5D5DD3',\n  brightBlue: '#7279FF',\n  magenta: '#BC5ED1',\n  brightMagenta: '#E572FF',\n  cyan: '#5DA5D5',\n  brightCyan: '#72F0FF',\n  white: '#F8F8F8',\n  brightWhite: '#FFFFFF'\n}\n\nexport class ViewShell extends LitElement {\n  createRenderRoot () {\n    return this\n  }\n\n  connectedCallback () {\n    super.connectedCallback()\n    const terminal = new Terminal({\n      fontFamily: '\"Cascadia Code\", Menlo, monospace',\n      fontSize: '14',\n      lineHeight: 1,\n      theme: baseTheme,\n      cursorBlink: true,\n      rendererType: 'dom'\n    })\n    const fitAddon = new FitAddon()\n    this.terminal = terminal\n    this.fitAddon = fitAddon\n\n    terminal.loadAddon(fitAddon)\n    // Let Term Match Size\n    window.addEventListener('resize', () => {\n      this.fitAddon.fit()\n    })\n    terminal.open(this.term)\n    fitAddon.fit()\n\n    Client.connect().then((url) => {\n      this.terminal.writeln(`\\n\\rConnected to mozillaVPN@${url}`)\n      this.runCommand('help')\n      this.prompt()\n    })\n    Client.onAny((res) => this.processEvents(res))\n\n    CommandObserver.onAny(() => {\n      this.commandList = CommandObserver.commands\n    })\n\n    let command = ''\n    terminal.onData(e => {\n      switch (e) {\n        case '\\u0003': // Ctrl+C\n          console.log(terminal.getSelection())\n\n          break\n        case '\\r': // Enter\n          this.runCommand(command)\n          command = ''\n          break\n        case '\\u007F': // Backspace (DEL)\n          // Do not delete the prompt\n          if (terminal._core.buffer.x > 2) {\n            terminal.write('\\b \\b')\n            if (command.length > 0) {\n              command = command.substr(0, command.length - 1)\n            }\n          }\n          break\n        default: // Print all other characters for demo\n          if (e >= String.fromCharCode(0x20) && e <= String.fromCharCode(0x7B)) {\n            command += e\n            terminal.write(e)\n          }\n      }\n    })\n    terminal.onKey((key, event) => {\n      if (key.key === '\\u001b[A') {\n        // UP key ->\n        if (this.lastCommand != '') {\n          command = this.lastCommand\n          this.clearLine()\n          terminal.write(this.lastCommand)\n        }\n        return\n      }\n      if (key.key === '\\t') {\n        // Tab Pressed!\n        if (command === '') {\n          // No Command here!\n          terminal.writeln('')\n          terminal.write(this.commandList.join('  '))\n          this.prompt()\n          return\n        }\n        const closestCommands = this.commandList.filter(c => c.startsWith(command))\n        if (closestCommands.length > 1) {\n          terminal.writeln('')\n          terminal.write(closestCommands.join('  '))\n          this.prompt()\n          terminal.write(command)\n        } else if (closestCommands.length == 1) {\n          const newCommand = closestCommands.shift()\n          this.clearLine()\n          terminal.write(newCommand)\n          command = newCommand\n        }\n      }\n    })\n  }\n\n  runCommand (command) {\n    if (command === '') {\n      this.prompt()\n      return\n    }\n    if (command === 'clear') {\n      this.terminal.write('\\u001Bc')\n      this.prompt()\n      return\n    }\n    this.lastCommand = command\n    Client.sendCommand(command)\n    this.prompt()\n  }\n\n  prompt () {\n    this.terminal.write('\\n\\r$ ')\n  }\n\n  clearLine () {\n    this.terminal.write('\\x1b[2K\\r')\n    this.terminal.write('$ ')\n  }\n\n  processEvents (message) {\n    if (['screen_capture', 'log', 'network'].includes(message.type)) {\n      return\n    }\n    if (message.type == 'help') {\n      message.value = message.value.replaceAll('\\t', '\\n\\t')\n    }\n    this.writeResponse(message)\n  }\n\n  writeResponse (message) {\n    const type = message.type\n    let text = message.value\n    if (typeof text === 'object') {\n      text = JSON.stringify(text)\n    }\n\n    const error = message.error\n    if (!text && !error) {\n      return\n    }\n    this.terminal.write(NEWLINE + `client:(${type})` + NEWLINE)\n\n    if (error) {\n      this.terminal.write(`${NEWLINE}${RED_ESCAPE}${error}${NO_COLOR_ESCAPE}`)\n    } else {\n      this.terminal.write(text.replaceAll('\\n', '\\r\\n'))\n    }\n    this.terminal.write(NEWLINE)\n    this.prompt()\n  }\n\n  render () {\n    return html``\n  }\n\n  static styles = css`\n  :host{\n    display: none;\n  }\n\n  .terminal{\n    overflow:hidden;\n  }\n  `\n\n  get term () {\n    return this.parentElement\n  }\n}\ncustomElements.define('view-shell', ViewShell)\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, function() {\nreturn ","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from 'browser/LocalizableStrings';\nimport { ITerminal, IRenderDebouncer } from 'browser/Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { isMac } from 'common/Platform';\nimport { TimeBasedDebouncer } from 'browser/TimeBasedDebouncer';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { Disposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { IRenderService } from 'browser/services/Services';\nimport { removeElementFromParent } from 'browser/Dom';\n\nconst MAX_ROWS_TO_READ = 20;\n\nconst enum BoundaryPosition {\n  TOP,\n  BOTTOM\n}\n\nexport class AccessibilityManager extends Disposable {\n  private _accessibilityTreeRoot: HTMLElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[];\n  private _liveRegion: HTMLElement;\n  private _liveRegionLineCount: number = 0;\n\n  private _renderRowsDebouncer: IRenderDebouncer;\n  private _screenDprMonitor: ScreenDprMonitor;\n\n  private _topBoundaryFocusListener: (e: FocusEvent) => void;\n  private _bottomBoundaryFocusListener: (e: FocusEvent) => void;\n\n  /**\n   * This queue has a character pushed to it for keys that are pressed, if the\n   * next character added to the terminal is equal to the key char then it is\n   * not announced (added to live region) because it has already been announced\n   * by the textarea event (which cannot be canceled). There are some race\n   * condition cases if there is typing while data is streaming, but this covers\n   * the main case of typing into the prompt and inputting the answer to a\n   * question (Y/N, etc.).\n   */\n  private _charsToConsume: string[] = [];\n\n  private _charsToAnnounce: string = '';\n\n  constructor(\n    private readonly _terminal: ITerminal,\n    private readonly _renderService: IRenderService\n  ) {\n    super();\n    this._accessibilityTreeRoot = document.createElement('div');\n    this._accessibilityTreeRoot.classList.add('xterm-accessibility');\n    this._accessibilityTreeRoot.tabIndex = 0;\n\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.setAttribute('role', 'list');\n    this._rowContainer.classList.add('xterm-accessibility-tree');\n    this._rowElements = [];\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n\n    this._topBoundaryFocusListener = e => this._onBoundaryFocus(e, BoundaryPosition.TOP);\n    this._bottomBoundaryFocusListener = e => this._onBoundaryFocus(e, BoundaryPosition.BOTTOM);\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n    this._accessibilityTreeRoot.appendChild(this._rowContainer);\n\n    this._renderRowsDebouncer = new TimeBasedDebouncer(this._renderRows.bind(this));\n    this._refreshRows();\n\n    this._liveRegion = document.createElement('div');\n    this._liveRegion.classList.add('live-region');\n    this._liveRegion.setAttribute('aria-live', 'assertive');\n    this._accessibilityTreeRoot.appendChild(this._liveRegion);\n\n    if (!this._terminal.element) {\n      throw new Error('Cannot enable accessibility before Terminal.open');\n    }\n    this._terminal.element.insertAdjacentElement('afterbegin', this._accessibilityTreeRoot);\n\n    this.register(this._renderRowsDebouncer);\n    this.register(this._terminal.onResize(e => this._onResize(e.rows)));\n    this.register(this._terminal.onRender(e => this._refreshRows(e.start, e.end)));\n    this.register(this._terminal.onScroll(() => this._refreshRows()));\n    // Line feed is an issue as the prompt won't be read out after a command is run\n    this.register(this._terminal.onA11yChar(char => this._onChar(char)));\n    this.register(this._terminal.onLineFeed(() => this._onChar('\\n')));\n    this.register(this._terminal.onA11yTab(spaceCount => this._onTab(spaceCount)));\n    this.register(this._terminal.onKey(e => this._onKey(e.key)));\n    this.register(this._terminal.onBlur(() => this._clearLiveRegion()));\n    this.register(this._renderService.onDimensionsChange(() => this._refreshRowsDimensions()));\n\n    this._screenDprMonitor = new ScreenDprMonitor();\n    this.register(this._screenDprMonitor);\n    this._screenDprMonitor.setListener(() => this._refreshRowsDimensions());\n    // This shouldn't be needed on modern browsers but is present in case the\n    // media query that drives the ScreenDprMonitor isn't supported\n    this.register(addDisposableDomListener(window, 'resize', () => this._refreshRowsDimensions()));\n  }\n\n  public dispose(): void {\n    super.dispose();\n    removeElementFromParent(this._accessibilityTreeRoot);\n    this._rowElements.length = 0;\n  }\n\n  private _onBoundaryFocus(e: FocusEvent, position: BoundaryPosition): void {\n    const boundaryElement = e.target as HTMLElement;\n    const beforeBoundaryElement = this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2];\n\n    // Don't scroll if the buffer top has reached the end in that direction\n    const posInSet = boundaryElement.getAttribute('aria-posinset');\n    const lastRowPos = position === BoundaryPosition.TOP ? '1' : `${this._terminal.buffer.lines.length}`;\n    if (posInSet === lastRowPos) {\n      return;\n    }\n\n    // Don't scroll when the last focused item was not the second row (focus is going the other\n    // direction)\n    if (e.relatedTarget !== beforeBoundaryElement) {\n      return;\n    }\n\n    // Remove old boundary element from array\n    let topBoundaryElement: HTMLElement;\n    let bottomBoundaryElement: HTMLElement;\n    if (position === BoundaryPosition.TOP) {\n      topBoundaryElement = boundaryElement;\n      bottomBoundaryElement = this._rowElements.pop()!;\n      this._rowContainer.removeChild(bottomBoundaryElement);\n    } else {\n      topBoundaryElement = this._rowElements.shift()!;\n      bottomBoundaryElement = boundaryElement;\n      this._rowContainer.removeChild(topBoundaryElement);\n    }\n\n    // Remove listeners from old boundary elements\n    topBoundaryElement.removeEventListener('focus', this._topBoundaryFocusListener);\n    bottomBoundaryElement.removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Add new element to array/DOM\n    if (position === BoundaryPosition.TOP) {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.unshift(newElement);\n      this._rowContainer.insertAdjacentElement('afterbegin', newElement);\n    } else {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.push(newElement);\n      this._rowContainer.appendChild(newElement);\n    }\n\n    // Add listeners to new boundary elements\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Scroll up\n    this._terminal.scrollLines(position === BoundaryPosition.TOP ? -1 : 1);\n\n    // Focus new boundary before element\n    this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2].focus();\n\n    // Prevent the standard behavior\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  private _onResize(rows: number): void {\n    // Remove bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Grow rows as required\n    for (let i = this._rowContainer.children.length; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n    // Shrink rows as required\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n\n    // Add bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n  }\n\n  private _createAccessibilityTreeNode(): HTMLElement {\n    const element = document.createElement('div');\n    element.setAttribute('role', 'listitem');\n    element.tabIndex = -1;\n    this._refreshRowDimensions(element);\n    return element;\n  }\n\n  private _onTab(spaceCount: number): void {\n    for (let i = 0; i < spaceCount; i++) {\n      this._onChar(' ');\n    }\n  }\n\n  private _onChar(char: string): void {\n    if (this._liveRegionLineCount < MAX_ROWS_TO_READ + 1) {\n      if (this._charsToConsume.length > 0) {\n        // Have the screen reader ignore the char if it was just input\n        const shiftedChar = this._charsToConsume.shift();\n        if (shiftedChar !== char) {\n          this._charsToAnnounce += char;\n        }\n      } else {\n        this._charsToAnnounce += char;\n      }\n\n      if (char === '\\n') {\n        this._liveRegionLineCount++;\n        if (this._liveRegionLineCount === MAX_ROWS_TO_READ + 1) {\n          this._liveRegion.textContent += Strings.tooMuchOutput;\n        }\n      }\n\n      // Only detach/attach on mac as otherwise messages can go unaccounced\n      if (isMac) {\n        if (this._liveRegion.textContent && this._liveRegion.textContent.length > 0 && !this._liveRegion.parentNode) {\n          setTimeout(() => {\n            this._accessibilityTreeRoot.appendChild(this._liveRegion);\n          }, 0);\n        }\n      }\n    }\n  }\n\n  private _clearLiveRegion(): void {\n    this._liveRegion.textContent = '';\n    this._liveRegionLineCount = 0;\n\n    // Only detach/attach on mac as otherwise messages can go unaccounced\n    if (isMac) {\n      removeElementFromParent(this._liveRegion);\n    }\n  }\n\n  private _onKey(keyChar: string): void {\n    this._clearLiveRegion();\n    this._charsToConsume.push(keyChar);\n  }\n\n  private _refreshRows(start?: number, end?: number): void {\n    this._renderRowsDebouncer.refresh(start, end, this._terminal.rows);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    const buffer: IBuffer = this._terminal.buffer;\n    const setSize = buffer.lines.length.toString();\n    for (let i = start; i <= end; i++) {\n      const lineData = buffer.translateBufferLineToString(buffer.ydisp + i, true);\n      const posInSet = (buffer.ydisp + i + 1).toString();\n      const element = this._rowElements[i];\n      if (element) {\n        if (lineData.length === 0) {\n          element.innerText = '\\u00a0';\n        } else {\n          element.textContent = lineData;\n        }\n        element.setAttribute('aria-posinset', posInSet);\n        element.setAttribute('aria-setsize', setSize);\n      }\n    }\n    this._announceCharacters();\n  }\n\n  private _refreshRowsDimensions(): void {\n    if (!this._renderService.dimensions.actualCellHeight) {\n      return;\n    }\n    if (this._rowElements.length !== this._terminal.rows) {\n      this._onResize(this._terminal.rows);\n    }\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._refreshRowDimensions(this._rowElements[i]);\n    }\n  }\n\n  private _refreshRowDimensions(element: HTMLElement): void {\n    element.style.height = `${this._renderService.dimensions.actualCellHeight}px`;\n  }\n\n  private _announceCharacters(): void {\n    if (this._charsToAnnounce.length === 0) {\n      return;\n    }\n    this._liveRegion.textContent += this._charsToAnnounce;\n    this._charsToAnnounce = '';\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionService } from 'browser/services/Services';\nimport { ICoreService } from 'common/services/Services';\n\n/**\n * Prepares text to be pasted into the terminal by normalizing the line endings\n * @param text The pasted text that needs processing before inserting into the terminal\n */\nexport function prepareTextForTerminal(text: string): string {\n  return text.replace(/\\r?\\n/g, '\\r');\n}\n\n/**\n * Bracket text for paste, if necessary, as per https://cirw.in/blog/bracketed-paste\n * @param text The pasted text to bracket\n */\nexport function bracketTextForPaste(text: string, bracketedPasteMode: boolean): string {\n  if (bracketedPasteMode) {\n    return '\\x1b[200~' + text + '\\x1b[201~';\n  }\n  return text;\n}\n\n/**\n * Binds copy functionality to the given terminal.\n * @param ev The original copy event to be handled\n */\nexport function copyHandler(ev: ClipboardEvent, selectionService: ISelectionService): void {\n  if (ev.clipboardData) {\n    ev.clipboardData.setData('text/plain', selectionService.selectionText);\n  }\n  // Prevent or the original text will be copied.\n  ev.preventDefault();\n}\n\n/**\n * Redirect the clipboard's data to the terminal's input handler.\n * @param ev The original paste event to be handled\n * @param term The terminal on which to apply the handled paste event\n */\nexport function handlePasteEvent(ev: ClipboardEvent, textarea: HTMLTextAreaElement, coreService: ICoreService): void {\n  ev.stopPropagation();\n  if (ev.clipboardData) {\n    const text = ev.clipboardData.getData('text/plain');\n    paste(text, textarea, coreService);\n  }\n}\n\nexport function paste(text: string, textarea: HTMLTextAreaElement, coreService: ICoreService): void {\n  text = prepareTextForTerminal(text);\n  text = bracketTextForPaste(text, coreService.decPrivateModes.bracketedPasteMode);\n  coreService.triggerDataEvent(text, true);\n  textarea.value = '';\n}\n\n/**\n * Moves the textarea under the mouse cursor and focuses it.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n */\nexport function moveTextAreaUnderMouseCursor(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement): void {\n\n  // Calculate textarea position relative to the screen element\n  const pos = screenElement.getBoundingClientRect();\n  const left = ev.clientX - pos.left - 10;\n  const top = ev.clientY - pos.top - 10;\n\n  // Bring textarea at the cursor position\n  textarea.style.width = '20px';\n  textarea.style.height = '20px';\n  textarea.style.left = `${left}px`;\n  textarea.style.top = `${top}px`;\n  textarea.style.zIndex = '1000';\n\n  textarea.focus();\n}\n\n/**\n * Bind to right-click event and allow right-click copy and paste.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n * @param selectionService The terminal's selection manager.\n * @param shouldSelectWord If true and there is no selection the current word will be selected\n */\nexport function rightClickHandler(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement, selectionService: ISelectionService, shouldSelectWord: boolean): void {\n  moveTextAreaUnderMouseCursor(ev, textarea, screenElement);\n\n  if (shouldSelectWord) {\n    selectionService.rightClickSelect(ev);\n  }\n\n  // Get textarea ready to copy from the context menu\n  textarea.value = selectionService.selectionText;\n  textarea.select();\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColor } from 'browser/Types';\nimport { IColorRGB } from 'common/Types';\n\n/**\n * Helper functions where the source type is \"channels\" (individual color channels as numbers).\n */\nexport namespace channels {\n  export function toCss(r: number, g: number, b: number, a?: number): string {\n    if (a !== undefined) {\n      return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}${toPaddedHex(a)}`;\n    }\n    return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}`;\n  }\n\n  export function toRgba(r: number, g: number, b: number, a: number = 0xFF): number {\n    // Note: The aggregated number is RGBA32 (BE), thus needs to be converted to ABGR32\n    // on LE systems, before it can be used for direct 32-bit buffer writes.\n    // >>> 0 forces an unsigned int\n    return (r << 24 | g << 16 | b << 8 | a) >>> 0;\n  }\n}\n\n/**\n * Helper functions where the source type is `IColor`.\n */\nexport namespace color {\n  export function blend(bg: IColor, fg: IColor): IColor {\n    const a = (fg.rgba & 0xFF) / 255;\n    if (a === 1) {\n      return {\n        css: fg.css,\n        rgba: fg.rgba\n      };\n    }\n    const fgR = (fg.rgba >> 24) & 0xFF;\n    const fgG = (fg.rgba >> 16) & 0xFF;\n    const fgB = (fg.rgba >> 8) & 0xFF;\n    const bgR = (bg.rgba >> 24) & 0xFF;\n    const bgG = (bg.rgba >> 16) & 0xFF;\n    const bgB = (bg.rgba >> 8) & 0xFF;\n    const r = bgR + Math.round((fgR - bgR) * a);\n    const g = bgG + Math.round((fgG - bgG) * a);\n    const b = bgB + Math.round((fgB - bgB) * a);\n    const css = channels.toCss(r, g, b);\n    const rgba = channels.toRgba(r, g, b);\n    return { css, rgba };\n  }\n\n  export function isOpaque(color: IColor): boolean {\n    return (color.rgba & 0xFF) === 0xFF;\n  }\n\n  export function ensureContrastRatio(bg: IColor, fg: IColor, ratio: number): IColor | undefined {\n    const result = rgba.ensureContrastRatio(bg.rgba, fg.rgba, ratio);\n    if (!result) {\n      return undefined;\n    }\n    return rgba.toColor(\n      (result >> 24 & 0xFF),\n      (result >> 16 & 0xFF),\n      (result >> 8  & 0xFF)\n    );\n  }\n\n  export function opaque(color: IColor): IColor {\n    const rgbaColor = (color.rgba | 0xFF) >>> 0;\n    const [r, g, b] = rgba.toChannels(rgbaColor);\n    return {\n      css: channels.toCss(r, g, b),\n      rgba: rgbaColor\n    };\n  }\n\n  export function opacity(color: IColor, opacity: number): IColor {\n    const a = Math.round(opacity * 0xFF);\n    const [r, g, b] = rgba.toChannels(color.rgba);\n    return {\n      css: channels.toCss(r, g, b, a),\n      rgba: channels.toRgba(r, g, b, a)\n    };\n  }\n\n  export function toColorRGB(color: IColor): IColorRGB {\n    return [(color.rgba >> 24) & 0xFF, (color.rgba >> 16) & 0xFF, (color.rgba >> 8) & 0xFF];\n  }\n}\n\n/**\n * Helper functions where the source type is \"css\" (string: '#rgb', '#rgba', '#rrggbb', '#rrggbbaa').\n */\nexport namespace css {\n  export function toColor(css: string): IColor {\n    switch (css.length) {\n      case 7: // #rrggbb\n        return {\n          css,\n          rgba: (parseInt(css.slice(1), 16) << 8 | 0xFF) >>> 0\n        };\n      case 9: // #rrggbbaa\n        return {\n          css,\n          rgba: parseInt(css.slice(1), 16) >>> 0\n        };\n    }\n    throw new Error('css.toColor: Unsupported css format');\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgb\" (number: 0xrrggbb).\n */\nexport namespace rgb {\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param rgb The color to use.\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance(rgb: number): number {\n    return relativeLuminance2(\n      (rgb >> 16) & 0xFF,\n      (rgb >> 8 ) & 0xFF,\n      (rgb      ) & 0xFF);\n  }\n\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param r The red channel (0x00 to 0xFF).\n   * @param g The green channel (0x00 to 0xFF).\n   * @param b The blue channel (0x00 to 0xFF).\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance2(r: number, g: number, b: number): number {\n    const rs = r / 255;\n    const gs = g / 255;\n    const bs = b / 255;\n    const rr = rs <= 0.03928 ? rs / 12.92 : Math.pow((rs + 0.055) / 1.055, 2.4);\n    const rg = gs <= 0.03928 ? gs / 12.92 : Math.pow((gs + 0.055) / 1.055, 2.4);\n    const rb = bs <= 0.03928 ? bs / 12.92 : Math.pow((bs + 0.055) / 1.055, 2.4);\n    return rr * 0.2126 + rg * 0.7152 + rb * 0.0722;\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgba\" (number: 0xrrggbbaa).\n */\nexport namespace rgba {\n  export function ensureContrastRatio(bgRgba: number, fgRgba: number, ratio: number): number | undefined {\n    const bgL = rgb.relativeLuminance(bgRgba >> 8);\n    const fgL = rgb.relativeLuminance(fgRgba >> 8);\n    const cr = contrastRatio(bgL, fgL);\n    if (cr < ratio) {\n      if (fgL < bgL) {\n        return reduceLuminance(bgRgba, fgRgba, ratio);\n      }\n      return increaseLuminance(bgRgba, fgRgba, ratio);\n    }\n    return undefined;\n  }\n\n  export function reduceLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to reducing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgB, fgG), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR > 0 || fgG > 0 || fgB > 0)) {\n      // Reduce by 10% until the ratio is hit\n      fgR -= Math.max(0, Math.ceil(fgR * 0.1));\n      fgG -= Math.max(0, Math.ceil(fgG * 0.1));\n      fgB -= Math.max(0, Math.ceil(fgB * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgB, fgG), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function increaseLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to increasing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgB, fgG), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR < 0xFF || fgG < 0xFF || fgB < 0xFF)) {\n      // Increase by 10% until the ratio is hit\n      fgR = Math.min(0xFF, fgR + Math.ceil((255 - fgR) * 0.1));\n      fgG = Math.min(0xFF, fgG + Math.ceil((255 - fgG) * 0.1));\n      fgB = Math.min(0xFF, fgB + Math.ceil((255 - fgB) * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgB, fgG), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  // FIXME: Move this to channels NS?\n  export function toChannels(value: number): [number, number, number, number] {\n    return [(value >> 24) & 0xFF, (value >> 16) & 0xFF, (value >> 8) & 0xFF, value & 0xFF];\n  }\n\n  export function toColor(r: number, g: number, b: number): IColor {\n    return {\n      css: channels.toCss(r, g, b),\n      rgba: channels.toRgba(r, g, b)\n    };\n  }\n}\n\nexport function toPaddedHex(c: number): string {\n  const s = c.toString(16);\n  return s.length < 2 ? '0' + s : s;\n}\n\n/**\n * Gets the contrast ratio between two relative luminance values.\n * @param l1 The first relative luminance.\n * @param l2 The first relative luminance.\n * @see https://www.w3.org/TR/WCAG20/#contrast-ratiodef\n */\nexport function contrastRatio(l1: number, l2: number): number {\n  if (l1 < l2) {\n    return (l2 + 0.05) / (l1 + 0.05);\n  }\n  return (l1 + 0.05) / (l2 + 0.05);\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColor, IColorContrastCache } from 'browser/Types';\n\nexport class ColorContrastCache implements IColorContrastCache {\n  private _color: { [bg: number]: { [fg: number]: IColor | null | undefined } | undefined } = {};\n  private _rgba: { [bg: number]: { [fg: number]: string | null | undefined } | undefined } = {};\n\n  public clear(): void {\n    this._color = {};\n    this._rgba = {};\n  }\n\n  public setCss(bg: number, fg: number, value: string | null): void {\n    if (!this._rgba[bg]) {\n      this._rgba[bg] = {};\n    }\n    this._rgba[bg]![fg] = value;\n  }\n\n  public getCss(bg: number, fg: number): string | null | undefined {\n    return this._rgba[bg] ? this._rgba[bg]![fg] : undefined;\n  }\n\n  public setColor(bg: number, fg: number, value: IColor | null): void {\n    if (!this._color[bg]) {\n      this._color[bg] = {};\n    }\n    this._color[bg]![fg] = value;\n  }\n\n  public getColor(bg: number, fg: number): IColor | null | undefined {\n    return this._color[bg] ? this._color[bg]![fg] : undefined;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColorManager, IColor, IColorSet, IColorContrastCache } from 'browser/Types';\nimport { ITheme } from 'common/services/Services';\nimport { channels, color, css } from 'browser/Color';\nimport { ColorContrastCache } from 'browser/ColorContrastCache';\nimport { ColorIndex } from 'common/Types';\n\n\ninterface IRestoreColorSet {\n  foreground: IColor;\n  background: IColor;\n  cursor: IColor;\n  ansi: IColor[];\n}\n\n\nconst DEFAULT_FOREGROUND = css.toColor('#ffffff');\nconst DEFAULT_BACKGROUND = css.toColor('#000000');\nconst DEFAULT_CURSOR = css.toColor('#ffffff');\nconst DEFAULT_CURSOR_ACCENT = css.toColor('#000000');\nconst DEFAULT_SELECTION = {\n  css: 'rgba(255, 255, 255, 0.3)',\n  rgba: 0xFFFFFF4D\n};\n\n// An IIFE to generate DEFAULT_ANSI_COLORS.\nexport const DEFAULT_ANSI_COLORS = Object.freeze((() => {\n  const colors = [\n    // dark:\n    css.toColor('#2e3436'),\n    css.toColor('#cc0000'),\n    css.toColor('#4e9a06'),\n    css.toColor('#c4a000'),\n    css.toColor('#3465a4'),\n    css.toColor('#75507b'),\n    css.toColor('#06989a'),\n    css.toColor('#d3d7cf'),\n    // bright:\n    css.toColor('#555753'),\n    css.toColor('#ef2929'),\n    css.toColor('#8ae234'),\n    css.toColor('#fce94f'),\n    css.toColor('#729fcf'),\n    css.toColor('#ad7fa8'),\n    css.toColor('#34e2e2'),\n    css.toColor('#eeeeec')\n  ];\n\n  // Fill in the remaining 240 ANSI colors.\n  // Generate colors (16-231)\n  const v = [0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff];\n  for (let i = 0; i < 216; i++) {\n    const r = v[(i / 36) % 6 | 0];\n    const g = v[(i / 6) % 6 | 0];\n    const b = v[i % 6];\n    colors.push({\n      css: channels.toCss(r, g, b),\n      rgba: channels.toRgba(r, g, b)\n    });\n  }\n\n  // Generate greys (232-255)\n  for (let i = 0; i < 24; i++) {\n    const c = 8 + i * 10;\n    colors.push({\n      css: channels.toCss(c, c, c),\n      rgba: channels.toRgba(c, c, c)\n    });\n  }\n\n  return colors;\n})());\n\n/**\n * Manages the source of truth for a terminal's colors.\n */\nexport class ColorManager implements IColorManager {\n  public colors: IColorSet;\n  private _ctx: CanvasRenderingContext2D;\n  private _litmusColor: CanvasGradient;\n  private _contrastCache: IColorContrastCache;\n  private _restoreColors!: IRestoreColorSet;\n\n  constructor(document: Document, public allowTransparency: boolean) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) {\n      throw new Error('Could not get rendering context');\n    }\n    this._ctx = ctx;\n    this._ctx.globalCompositeOperation = 'copy';\n    this._litmusColor = this._ctx.createLinearGradient(0, 0, 1, 1);\n    this._contrastCache = new ColorContrastCache();\n    this.colors = {\n      foreground: DEFAULT_FOREGROUND,\n      background: DEFAULT_BACKGROUND,\n      cursor: DEFAULT_CURSOR,\n      cursorAccent: DEFAULT_CURSOR_ACCENT,\n      selectionTransparent: DEFAULT_SELECTION,\n      selectionOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      ansi: DEFAULT_ANSI_COLORS.slice(),\n      contrastCache: this._contrastCache\n    };\n    this._updateRestoreColors();\n  }\n\n  public onOptionsChange(key: string): void {\n    if (key === 'minimumContrastRatio') {\n      this._contrastCache.clear();\n    }\n  }\n\n  /**\n   * Sets the terminal's theme.\n   * @param theme The  theme to use. If a partial theme is provided then default\n   * colors will be used where colors are not defined.\n   */\n  public setTheme(theme: ITheme = {}): void {\n    this.colors.foreground = this._parseColor(theme.foreground, DEFAULT_FOREGROUND);\n    this.colors.background = this._parseColor(theme.background, DEFAULT_BACKGROUND);\n    this.colors.cursor = this._parseColor(theme.cursor, DEFAULT_CURSOR, true);\n    this.colors.cursorAccent = this._parseColor(theme.cursorAccent, DEFAULT_CURSOR_ACCENT, true);\n    this.colors.selectionTransparent = this._parseColor(theme.selection, DEFAULT_SELECTION, true);\n    this.colors.selectionOpaque = color.blend(this.colors.background, this.colors.selectionTransparent);\n    /**\n     * If selection color is opaque, blend it with background with 0.3 opacity\n     * Issue #2737\n     */\n    if (color.isOpaque(this.colors.selectionTransparent)) {\n      const opacity = 0.3;\n      this.colors.selectionTransparent = color.opacity(this.colors.selectionTransparent, opacity);\n    }\n    this.colors.ansi[0] = this._parseColor(theme.black, DEFAULT_ANSI_COLORS[0]);\n    this.colors.ansi[1] = this._parseColor(theme.red, DEFAULT_ANSI_COLORS[1]);\n    this.colors.ansi[2] = this._parseColor(theme.green, DEFAULT_ANSI_COLORS[2]);\n    this.colors.ansi[3] = this._parseColor(theme.yellow, DEFAULT_ANSI_COLORS[3]);\n    this.colors.ansi[4] = this._parseColor(theme.blue, DEFAULT_ANSI_COLORS[4]);\n    this.colors.ansi[5] = this._parseColor(theme.magenta, DEFAULT_ANSI_COLORS[5]);\n    this.colors.ansi[6] = this._parseColor(theme.cyan, DEFAULT_ANSI_COLORS[6]);\n    this.colors.ansi[7] = this._parseColor(theme.white, DEFAULT_ANSI_COLORS[7]);\n    this.colors.ansi[8] = this._parseColor(theme.brightBlack, DEFAULT_ANSI_COLORS[8]);\n    this.colors.ansi[9] = this._parseColor(theme.brightRed, DEFAULT_ANSI_COLORS[9]);\n    this.colors.ansi[10] = this._parseColor(theme.brightGreen, DEFAULT_ANSI_COLORS[10]);\n    this.colors.ansi[11] = this._parseColor(theme.brightYellow, DEFAULT_ANSI_COLORS[11]);\n    this.colors.ansi[12] = this._parseColor(theme.brightBlue, DEFAULT_ANSI_COLORS[12]);\n    this.colors.ansi[13] = this._parseColor(theme.brightMagenta, DEFAULT_ANSI_COLORS[13]);\n    this.colors.ansi[14] = this._parseColor(theme.brightCyan, DEFAULT_ANSI_COLORS[14]);\n    this.colors.ansi[15] = this._parseColor(theme.brightWhite, DEFAULT_ANSI_COLORS[15]);\n    // Clear our the cache\n    this._contrastCache.clear();\n    this._updateRestoreColors();\n  }\n\n  public restoreColor(slot?: ColorIndex): void {\n    // unset slot restores all ansi colors\n    if (slot === undefined) {\n      for (let i = 0; i < this._restoreColors.ansi.length; ++i) {\n        this.colors.ansi[i] = this._restoreColors.ansi[i];\n      }\n      return;\n    }\n    switch (slot) {\n      case ColorIndex.FOREGROUND:\n        this.colors.foreground = this._restoreColors.foreground;\n        break;\n      case ColorIndex.BACKGROUND:\n        this.colors.background = this._restoreColors.background;\n        break;\n      case ColorIndex.CURSOR:\n        this.colors.cursor = this._restoreColors.cursor;\n        break;\n      default:\n        this.colors.ansi[slot] = this._restoreColors.ansi[slot];\n    }\n  }\n\n  private _updateRestoreColors(): void {\n    this._restoreColors = {\n      foreground: this.colors.foreground,\n      background: this.colors.background,\n      cursor: this.colors.cursor,\n      ansi: [...this.colors.ansi]\n    };\n  }\n\n  private _parseColor(\n    css: string | undefined,\n    fallback: IColor,\n    allowTransparency: boolean = this.allowTransparency\n  ): IColor {\n    if (css === undefined) {\n      return fallback;\n    }\n\n    // If parsing the value results in failure, then it must be ignored, and the attribute must\n    // retain its previous value.\n    // -- https://html.spec.whatwg.org/multipage/canvas.html#fill-and-stroke-styles\n    this._ctx.fillStyle = this._litmusColor;\n    this._ctx.fillStyle = css;\n    if (typeof this._ctx.fillStyle !== 'string') {\n      console.warn(`Color: ${css} is invalid using fallback ${fallback.css}`);\n      return fallback;\n    }\n\n    this._ctx.fillRect(0, 0, 1, 1);\n    const data = this._ctx.getImageData(0, 0, 1, 1).data;\n\n    // Check if the printed color was transparent\n    if (data[3] !== 0xFF) {\n      if (!allowTransparency) {\n        // Ideally we'd just ignore the alpha channel, but...\n        //\n        // Browsers may not give back exactly the same RGB values we put in, because most/all\n        // convert the color to a pre-multiplied representation. getImageData converts that back to\n        // a un-premultipled representation, but the precision loss may make the RGB channels unuable\n        // on their own.\n        //\n        // E.g. In Chrome #12345610 turns into #10305010, and in the extreme case, 0xFFFFFF00 turns\n        // into 0x00000000.\n        //\n        // \"Note: Due to the lossy nature of converting to and from premultiplied alpha color values,\n        // pixels that have just been set using putImageData() might be returned to an equivalent\n        // getImageData() as different values.\"\n        // -- https://html.spec.whatwg.org/multipage/canvas.html#pixel-manipulation\n        //\n        // So let's just use the fallback color in this case instead.\n        console.warn(\n          `Color: ${css} is using transparency, but allowTransparency is false. ` +\n          `Using fallback ${fallback.css}.`\n        );\n        return fallback;\n      }\n\n      // https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n      // the color value has alpha less than 1.0, and the string is the color value in the CSS rgba()\n      const [r, g, b, a] = this._ctx.fillStyle.substring(5, this._ctx.fillStyle.length - 1).split(',').map(component => Number(component));\n      const alpha = Math.round(a * 255);\n      const rgba: number = channels.toRgba(r, g, b, alpha);\n      return {\n        rgba,\n        css\n      };\n    }\n\n    return {\n      // https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n      // if it has alpha equal to 1.0, then the string is a lowercase six-digit hex value, prefixed with a \"#\" character\n      css: this._ctx.fillStyle,\n      rgba: channels.toRgba(data[0], data[1], data[2], data[3])\n    };\n  }\n}\n","/**\n * Copyright (c) 2020 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function removeElementFromParent(...elements: (HTMLElement | undefined)[]): void {\n  for (const e of elements) {\n    e?.parentElement?.removeChild(e);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Adds a disposable listener to a node in the DOM, returning the disposable.\n * @param type The event type.\n * @param handler The handler for the listener.\n */\nexport function addDisposableDomListener(\n  node: Element | Window | Document,\n  type: string,\n  handler: (e: any) => void,\n  options?: boolean | AddEventListenerOptions\n): IDisposable {\n  node.addEventListener(type, handler, options);\n  let disposed = false;\n  return {\n    dispose: () => {\n      if (disposed) {\n        return;\n      }\n      disposed = true;\n      node.removeEventListener(type, handler, options);\n    }\n  };\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILinkifierEvent, ILinkMatcher, LinkMatcherHandler, ILinkMatcherOptions, ILinkifier, IMouseZoneManager, IMouseZone, IRegisteredLinkMatcher } from 'browser/Types';\nimport { IBufferStringIteratorResult } from 'common/buffer/Types';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { ILogService, IBufferService, IOptionsService, IUnicodeService } from 'common/services/Services';\n\n/**\n * Limit of the unwrapping line expansion (overscan) at the top and bottom\n * of the actual viewport in ASCII characters.\n * A limit of 2000 should match most sane urls.\n */\nconst OVERSCAN_CHAR_LIMIT = 2000;\n\n/**\n * The Linkifier applies links to rows shortly after they have been refreshed.\n */\nexport class Linkifier implements ILinkifier {\n  /**\n   * The time to wait after a row is changed before it is linkified. This prevents\n   * the costly operation of searching every row multiple times, potentially a\n   * huge amount of times.\n   */\n  protected static _timeBeforeLatency = 200;\n\n  protected _linkMatchers: IRegisteredLinkMatcher[] = [];\n\n  private _mouseZoneManager: IMouseZoneManager | undefined;\n  private _element: HTMLElement | undefined;\n\n  private _rowsTimeoutId: number | undefined;\n  private _nextLinkMatcherId = 0;\n  private _rowsToLinkify: { start: number | undefined, end: number | undefined };\n\n  private _onShowLinkUnderline = new EventEmitter<ILinkifierEvent>();\n  public get onShowLinkUnderline(): IEvent<ILinkifierEvent> { return this._onShowLinkUnderline.event; }\n  private _onHideLinkUnderline = new EventEmitter<ILinkifierEvent>();\n  public get onHideLinkUnderline(): IEvent<ILinkifierEvent> { return this._onHideLinkUnderline.event; }\n  private _onLinkTooltip = new EventEmitter<ILinkifierEvent>();\n  public get onLinkTooltip(): IEvent<ILinkifierEvent> { return this._onLinkTooltip.event; }\n\n  constructor(\n    @IBufferService protected readonly _bufferService: IBufferService,\n    @ILogService private readonly _logService: ILogService,\n    @IUnicodeService private readonly _unicodeService: IUnicodeService\n  ) {\n    this._rowsToLinkify = {\n      start: undefined,\n      end: undefined\n    };\n  }\n\n  /**\n   * Attaches the linkifier to the DOM, enabling linkification.\n   * @param mouseZoneManager The mouse zone manager to register link zones with.\n   */\n  public attachToDom(element: HTMLElement, mouseZoneManager: IMouseZoneManager): void {\n    this._element = element;\n    this._mouseZoneManager = mouseZoneManager;\n  }\n\n  /**\n   * Queue linkification on a set of rows.\n   * @param start The row to linkify from (inclusive).\n   * @param end The row to linkify to (inclusive).\n   */\n  public linkifyRows(start: number, end: number): void {\n    // Don't attempt linkify if not yet attached to DOM\n    if (!this._mouseZoneManager) {\n      return;\n    }\n\n    // Increase range to linkify\n    if (this._rowsToLinkify.start === undefined || this._rowsToLinkify.end === undefined) {\n      this._rowsToLinkify.start = start;\n      this._rowsToLinkify.end = end;\n    } else {\n      this._rowsToLinkify.start = Math.min(this._rowsToLinkify.start, start);\n      this._rowsToLinkify.end = Math.max(this._rowsToLinkify.end, end);\n    }\n\n    // Clear out any existing links on this row range\n    this._mouseZoneManager.clearAll(start, end);\n\n    // Restart timer\n    if (this._rowsTimeoutId) {\n      clearTimeout(this._rowsTimeoutId);\n    }\n\n    // Cannot use window.setTimeout since tests need to run in node\n    this._rowsTimeoutId = setTimeout(() => this._linkifyRows(), Linkifier._timeBeforeLatency) as any as number;\n  }\n\n  /**\n   * Linkifies the rows requested.\n   */\n  private _linkifyRows(): void {\n    this._rowsTimeoutId = undefined;\n    const buffer = this._bufferService.buffer;\n\n    if (this._rowsToLinkify.start === undefined || this._rowsToLinkify.end === undefined) {\n      this._logService.debug('_rowToLinkify was unset before _linkifyRows was called');\n      return;\n    }\n\n    // Ensure the start row exists\n    const absoluteRowIndexStart = buffer.ydisp + this._rowsToLinkify.start;\n    if (absoluteRowIndexStart >= buffer.lines.length) {\n      return;\n    }\n\n    // Invalidate bad end row values (if a resize happened)\n    const absoluteRowIndexEnd = buffer.ydisp + Math.min(this._rowsToLinkify.end, this._bufferService.rows) + 1;\n\n    // Iterate over the range of unwrapped content strings within start..end\n    // (excluding).\n    // _doLinkifyRow gets full unwrapped lines with the start row as buffer offset\n    // for every matcher.\n    // The unwrapping is needed to also match content that got wrapped across\n    // several buffer lines. To avoid a worst case scenario where the whole buffer\n    // contains just a single unwrapped string we limit this line expansion beyond\n    // the viewport to +OVERSCAN_CHAR_LIMIT chars (overscan) at top and bottom.\n    // This comes with the tradeoff that matches longer than OVERSCAN_CHAR_LIMIT\n    // chars will not match anymore at the viewport borders.\n    const overscanLineLimit = Math.ceil(OVERSCAN_CHAR_LIMIT / this._bufferService.cols);\n    const iterator = this._bufferService.buffer.iterator(\n      false, absoluteRowIndexStart, absoluteRowIndexEnd, overscanLineLimit, overscanLineLimit);\n    while (iterator.hasNext()) {\n      const lineData: IBufferStringIteratorResult = iterator.next();\n      for (let i = 0; i < this._linkMatchers.length; i++) {\n        this._doLinkifyRow(lineData.range.first, lineData.content, this._linkMatchers[i]);\n      }\n    }\n\n    this._rowsToLinkify.start = undefined;\n    this._rowsToLinkify.end = undefined;\n  }\n\n  /**\n   * Registers a link matcher, allowing custom link patterns to be matched and\n   * handled.\n   * @param regex The regular expression to search for. Specifically, this\n   * searches the textContent of the rows. You will want to use \\s to match a\n   * space ' ' character for example.\n   * @param handler The callback when the link is called.\n   * @param options Options for the link matcher.\n   * @return The ID of the new matcher, this can be used to deregister.\n   */\n  public registerLinkMatcher(regex: RegExp, handler: LinkMatcherHandler, options: ILinkMatcherOptions = {}): number {\n    if (!handler) {\n      throw new Error('handler must be defined');\n    }\n    const matcher: IRegisteredLinkMatcher = {\n      id: this._nextLinkMatcherId++,\n      regex,\n      handler,\n      matchIndex: options.matchIndex,\n      validationCallback: options.validationCallback,\n      hoverTooltipCallback: options.tooltipCallback,\n      hoverLeaveCallback: options.leaveCallback,\n      willLinkActivate: options.willLinkActivate,\n      priority: options.priority || 0\n    };\n    this._addLinkMatcherToList(matcher);\n    return matcher.id;\n  }\n\n  /**\n   * Inserts a link matcher to the list in the correct position based on the\n   * priority of each link matcher. New link matchers of equal priority are\n   * considered after older link matchers.\n   * @param matcher The link matcher to be added.\n   */\n  private _addLinkMatcherToList(matcher: IRegisteredLinkMatcher): void {\n    if (this._linkMatchers.length === 0) {\n      this._linkMatchers.push(matcher);\n      return;\n    }\n\n    for (let i = this._linkMatchers.length - 1; i >= 0; i--) {\n      if (matcher.priority <= this._linkMatchers[i].priority) {\n        this._linkMatchers.splice(i + 1, 0, matcher);\n        return;\n      }\n    }\n\n    this._linkMatchers.splice(0, 0, matcher);\n  }\n\n  /**\n   * Deregisters a link matcher if it has been registered.\n   * @param matcherId The link matcher's ID (returned after register)\n   * @return Whether a link matcher was found and deregistered.\n   */\n  public deregisterLinkMatcher(matcherId: number): boolean {\n    for (let i = 0; i < this._linkMatchers.length; i++) {\n      if (this._linkMatchers[i].id === matcherId) {\n        this._linkMatchers.splice(i, 1);\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Linkifies a row given a specific handler.\n   * @param rowIndex The row index to linkify (absolute index).\n   * @param text string content of the unwrapped row.\n   * @param matcher The link matcher for this line.\n   */\n  private _doLinkifyRow(rowIndex: number, text: string, matcher: ILinkMatcher): void {\n    // clone regex to do a global search on text\n    const rex = new RegExp(matcher.regex.source, (matcher.regex.flags || '') + 'g');\n    let match;\n    let stringIndex = -1;\n    while ((match = rex.exec(text)) !== null) {\n      const uri = match[typeof matcher.matchIndex !== 'number' ? 0 : matcher.matchIndex];\n      if (!uri) {\n        // something matched but does not comply with the given matchIndex\n        // since this is most likely a bug the regex itself we simply do nothing here\n        this._logService.debug('match found without corresponding matchIndex', match, matcher);\n        break;\n      }\n\n      // Get index, match.index is for the outer match which includes negated chars\n      // therefore we cannot use match.index directly, instead we search the position\n      // of the match group in text again\n      // also correct regex and string search offsets for the next loop run\n      stringIndex = text.indexOf(uri, stringIndex + 1);\n      rex.lastIndex = stringIndex + uri.length;\n      if (stringIndex < 0) {\n        // invalid stringIndex (should not have happened)\n        break;\n      }\n\n      // get the buffer index as [absolute row, col] for the match\n      const bufferIndex = this._bufferService.buffer.stringIndexToBufferIndex(rowIndex, stringIndex);\n      if (bufferIndex[0] < 0) {\n        // invalid bufferIndex (should not have happened)\n        break;\n      }\n\n      const line = this._bufferService.buffer.lines.get(bufferIndex[0]);\n      if (!line) {\n        break;\n      }\n\n      const attr = line.getFg(bufferIndex[1]);\n      const fg = attr ? (attr >> 9) & 0x1ff : undefined;\n\n      if (matcher.validationCallback) {\n        matcher.validationCallback(uri, isValid => {\n          // Discard link if the line has already changed\n          if (this._rowsTimeoutId) {\n            return;\n          }\n          if (isValid) {\n            this._addLink(bufferIndex[1], bufferIndex[0] - this._bufferService.buffer.ydisp, uri, matcher, fg);\n          }\n        });\n      } else {\n        this._addLink(bufferIndex[1], bufferIndex[0] - this._bufferService.buffer.ydisp, uri, matcher, fg);\n      }\n    }\n  }\n\n  /**\n   * Registers a link to the mouse zone manager.\n   * @param x The column the link starts.\n   * @param y The row the link is on.\n   * @param uri The URI of the link.\n   * @param matcher The link matcher for the link.\n   * @param fg The link color for hover event.\n   */\n  private _addLink(x: number, y: number, uri: string, matcher: ILinkMatcher, fg: number | undefined): void {\n    if (!this._mouseZoneManager || !this._element) {\n      return;\n    }\n    // FIXME: get cell length from buffer to avoid mismatch after Unicode version change\n    const width = this._unicodeService.getStringCellWidth(uri);\n    const x1 = x % this._bufferService.cols;\n    const y1 = y + Math.floor(x / this._bufferService.cols);\n    let x2 = (x1 + width) % this._bufferService.cols;\n    let y2 = y1 + Math.floor((x1 + width) / this._bufferService.cols);\n    if (x2 === 0) {\n      x2 = this._bufferService.cols;\n      y2--;\n    }\n\n    this._mouseZoneManager.add(new MouseZone(\n      x1 + 1,\n      y1 + 1,\n      x2 + 1,\n      y2 + 1,\n      e => {\n        if (matcher.handler) {\n          return matcher.handler(e, uri);\n        }\n        const newWindow = window.open();\n        if (newWindow) {\n          newWindow.opener = null;\n          newWindow.location.href = uri;\n        } else {\n          console.warn('Opening link blocked as opener could not be cleared');\n        }\n      },\n      () => {\n        this._onShowLinkUnderline.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        this._element!.classList.add('xterm-cursor-pointer');\n      },\n      e => {\n        this._onLinkTooltip.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        if (matcher.hoverTooltipCallback) {\n          // Note that IViewportRange use 1-based coordinates to align with escape sequences such\n          // as CUP which use 1,1 as the default for row/col\n          matcher.hoverTooltipCallback(e, uri, { start: { x: x1, y: y1 }, end: { x: x2, y: y2 } });\n        }\n      },\n      () => {\n        this._onHideLinkUnderline.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        this._element!.classList.remove('xterm-cursor-pointer');\n        if (matcher.hoverLeaveCallback) {\n          matcher.hoverLeaveCallback();\n        }\n      },\n      e => {\n        if (matcher.willLinkActivate) {\n          return matcher.willLinkActivate(e, uri);\n        }\n        return true;\n      }\n    ));\n  }\n\n  private _createLinkHoverEvent(x1: number, y1: number, x2: number, y2: number, fg: number | undefined): ILinkifierEvent {\n    return { x1, y1, x2, y2, cols: this._bufferService.cols, fg };\n  }\n}\n\nexport class MouseZone implements IMouseZone {\n  constructor(\n    public x1: number,\n    public y1: number,\n    public x2: number,\n    public y2: number,\n    public clickCallback: (e: MouseEvent) => any,\n    public hoverCallback: (e: MouseEvent) => any,\n    public tooltipCallback: (e: MouseEvent) => any,\n    public leaveCallback: () => void,\n    public willLinkActivate: (e: MouseEvent) => boolean\n  ) {\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILinkifier2, ILinkProvider, IBufferCellPosition, ILink, ILinkifierEvent, ILinkDecorations, ILinkWithState } from 'browser/Types';\nimport { IDisposable } from 'common/Types';\nimport { IMouseService, IRenderService } from './services/Services';\nimport { IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable, getDisposeArrayDisposable, disposeArray } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\n\nexport class Linkifier2 extends Disposable implements ILinkifier2 {\n  private _element: HTMLElement | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _linkProviders: ILinkProvider[] = [];\n  public get currentLink(): ILinkWithState | undefined { return this._currentLink; }\n  protected _currentLink: ILinkWithState | undefined;\n  private _lastMouseEvent: MouseEvent | undefined;\n  private _linkCacheDisposables: IDisposable[] = [];\n  private _lastBufferCell: IBufferCellPosition | undefined;\n  private _isMouseOut: boolean = true;\n  private _activeProviderReplies: Map<Number, ILinkWithState[] | undefined> | undefined;\n  private _activeLine: number = -1;\n\n  private _onShowLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public get onShowLinkUnderline(): IEvent<ILinkifierEvent> { return this._onShowLinkUnderline.event; }\n  private _onHideLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public get onHideLinkUnderline(): IEvent<ILinkifierEvent> { return this._onHideLinkUnderline.event; }\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.register(getDisposeArrayDisposable(this._linkCacheDisposables));\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    this._linkProviders.push(linkProvider);\n    return {\n      dispose: () => {\n        // Remove the link provider from the list\n        const providerIndex = this._linkProviders.indexOf(linkProvider);\n\n        if (providerIndex !== -1) {\n          this._linkProviders.splice(providerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public attachToDom(element: HTMLElement, mouseService: IMouseService, renderService: IRenderService): void {\n    this._element = element;\n    this._mouseService = mouseService;\n    this._renderService = renderService;\n\n    this.register(addDisposableDomListener(this._element, 'mouseleave', () => {\n      this._isMouseOut = true;\n      this._clearCurrentLink();\n    }));\n    this.register(addDisposableDomListener(this._element, 'mousemove', this._onMouseMove.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'click', this._onClick.bind(this)));\n  }\n\n  private _onMouseMove(event: MouseEvent): void {\n    this._lastMouseEvent = event;\n\n    if (!this._element || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n    this._isMouseOut = false;\n\n    // Ignore the event if it's an embedder created hover widget\n    const composedPath = event.composedPath() as HTMLElement[];\n    for (let i = 0; i < composedPath.length; i++) {\n      const target = composedPath[i];\n      // Hit Terminal.element, break and continue\n      if (target.classList.contains('xterm')) {\n        break;\n      }\n      // It's a hover, don't respect hover event\n      if (target.classList.contains('xterm-hover')) {\n        return;\n      }\n    }\n\n    if (!this._lastBufferCell || (position.x !== this._lastBufferCell.x || position.y !== this._lastBufferCell.y)) {\n      this._onHover(position);\n      this._lastBufferCell = position;\n    }\n  }\n\n  private _onHover(position: IBufferCellPosition): void {\n    // TODO: This currently does not cache link provider results across wrapped lines, activeLine should be something like `activeRange: {startY, endY}`\n    // Check if we need to clear the link\n    if (this._activeLine !== position.y) {\n      this._clearCurrentLink();\n      this._askForLink(position, false);\n      return;\n    }\n\n    // Check the if the link is in the mouse position\n    const isCurrentLinkInPosition = this._currentLink && this._linkAtPosition(this._currentLink.link, position);\n    if (!isCurrentLinkInPosition) {\n      this._clearCurrentLink();\n      this._askForLink(position, true);\n    }\n  }\n\n  private _askForLink(position: IBufferCellPosition, useLineCache: boolean): void {\n    if (!this._activeProviderReplies || !useLineCache) {\n      this._activeProviderReplies?.forEach(reply => {\n        reply?.forEach(linkWithState => {\n          if (linkWithState.link.dispose) {\n            linkWithState.link.dispose();\n          }\n        });\n      });\n      this._activeProviderReplies = new Map();\n      this._activeLine = position.y;\n    }\n    let linkProvided = false;\n\n    // There is no link cached, so ask for one\n    this._linkProviders.forEach((linkProvider, i) => {\n      if (useLineCache) {\n        const existingReply = this._activeProviderReplies?.get(i);\n        // If there isn't a reply, the provider hasn't responded yet.\n\n        // TODO: If there isn't a reply yet it means that the provider is still resolving. Ensuring\n        // provideLinks isn't triggered again saves ILink.hover firing twice though. This probably\n        // needs promises to get fixed\n        if (existingReply) {\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n        }\n      } else {\n        linkProvider.provideLinks(position.y, (links: ILink[] | undefined) => {\n          if (this._isMouseOut) {\n            return;\n          }\n          const linksWithState: ILinkWithState[] | undefined = links?.map(link  => ({ link }));\n          this._activeProviderReplies?.set(i, linksWithState);\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n\n          // If all providers have responded, remove lower priority links that intersect ranges of\n          // higher priority links\n          if (this._activeProviderReplies?.size === this._linkProviders.length) {\n            this._removeIntersectingLinks(position.y, this._activeProviderReplies);\n          }\n        });\n      }\n    });\n  }\n\n  private _removeIntersectingLinks(y: number, replies: Map<Number, ILinkWithState[] | undefined>): void {\n    const occupiedCells = new Set<number>();\n    for (let i = 0; i < replies.size; i++) {\n      const providerReply = replies.get(i);\n      if (!providerReply) {\n        continue;\n      }\n      for (let i = 0; i < providerReply.length; i++) {\n        const linkWithState = providerReply[i];\n        const startX = linkWithState.link.range.start.y < y ? 0 : linkWithState.link.range.start.x;\n        const endX = linkWithState.link.range.end.y > y ? this._bufferService.cols : linkWithState.link.range.end.x;\n        for (let x = startX; x <= endX; x++) {\n          if (occupiedCells.has(x)) {\n            providerReply.splice(i--, 1);\n            break;\n          }\n          occupiedCells.add(x);\n        }\n      }\n    }\n  }\n\n  private _checkLinkProviderResult(index: number, position: IBufferCellPosition, linkProvided: boolean): boolean {\n    if (!this._activeProviderReplies) {\n      return linkProvided;\n    }\n\n    const links = this._activeProviderReplies.get(index);\n\n    // Check if every provider before this one has come back undefined\n    let hasLinkBefore = false;\n    for (let j = 0; j < index; j++) {\n      if (!this._activeProviderReplies.has(j) || this._activeProviderReplies.get(j)) {\n        hasLinkBefore = true;\n      }\n    }\n\n    // If all providers with higher priority came back undefined, then this provider's link for\n    // the position should be used\n    if (!hasLinkBefore && links) {\n      const linkAtPosition = links.find(link => this._linkAtPosition(link.link, position));\n      if (linkAtPosition) {\n        linkProvided = true;\n        this._handleNewLink(linkAtPosition);\n      }\n    }\n\n    // Check if all the providers have responded\n    if (this._activeProviderReplies.size === this._linkProviders.length && !linkProvided) {\n      // Respect the order of the link providers\n      for (let j = 0; j < this._activeProviderReplies.size; j++) {\n        const currentLink = this._activeProviderReplies.get(j)?.find(link => this._linkAtPosition(link.link, position));\n        if (currentLink) {\n          linkProvided = true;\n          this._handleNewLink(currentLink);\n          break;\n        }\n      }\n    }\n\n    return linkProvided;\n  }\n\n  private _onClick(event: MouseEvent): void {\n    if (!this._element || !this._mouseService || !this._currentLink) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n\n    if (!position) {\n      return;\n    }\n\n    if (this._linkAtPosition(this._currentLink.link, position)) {\n      this._currentLink.link.activate(event, this._currentLink.link.text);\n    }\n  }\n\n  private _clearCurrentLink(startRow?: number, endRow?: number): void {\n    if (!this._element || !this._currentLink || !this._lastMouseEvent) {\n      return;\n    }\n\n    // If we have a start and end row, check that the link is within it\n    if (!startRow || !endRow || (this._currentLink.link.range.start.y >= startRow && this._currentLink.link.range.end.y <= endRow)) {\n      this._linkLeave(this._element, this._currentLink.link, this._lastMouseEvent);\n      this._currentLink = undefined;\n      disposeArray(this._linkCacheDisposables);\n    }\n  }\n\n  private _handleNewLink(linkWithState: ILinkWithState): void {\n    if (!this._element || !this._lastMouseEvent || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(this._lastMouseEvent, this._element, this._mouseService);\n\n    if (!position) {\n      return;\n    }\n\n    // Trigger hover if the we have a link at the position\n    if (this._linkAtPosition(linkWithState.link, position)) {\n      this._currentLink = linkWithState;\n      this._currentLink.state = {\n        decorations: {\n          underline: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.underline,\n          pointerCursor: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.pointerCursor\n        },\n        isHovered: true\n      };\n      this._linkHover(this._element, linkWithState.link, this._lastMouseEvent);\n\n      // Add listener for tracking decorations changes\n      linkWithState.link.decorations = {} as ILinkDecorations;\n      Object.defineProperties(linkWithState.link.decorations, {\n        pointerCursor: {\n          get: () => this._currentLink?.state?.decorations.pointerCursor,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink.state.decorations.pointerCursor !== v) {\n              this._currentLink.state.decorations.pointerCursor = v;\n              if (this._currentLink.state.isHovered) {\n                this._element?.classList.toggle('xterm-cursor-pointer', v);\n              }\n            }\n          }\n        },\n        underline: {\n          get: () => this._currentLink?.state?.decorations.underline,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink?.state?.decorations.underline !== v) {\n              this._currentLink.state.decorations.underline = v;\n              if (this._currentLink.state.isHovered) {\n                this._fireUnderlineEvent(linkWithState.link, v);\n              }\n            }\n          }\n        }\n      });\n\n      // Add listener for rerendering\n      if (this._renderService) {\n        this._linkCacheDisposables.push(this._renderService.onRenderedBufferChange(e => {\n          // When start is 0 a scroll most likely occurred, make sure links above the fold also get\n          // cleared.\n          const start = e.start === 0 ? 0 : e.start + 1 + this._bufferService.buffer.ydisp;\n          this._clearCurrentLink(start, e.end + 1 + this._bufferService.buffer.ydisp);\n        }));\n      }\n    }\n  }\n\n  protected _linkHover(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = true;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, true);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.add('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.hover) {\n      link.hover(event, link.text);\n    }\n  }\n\n  private _fireUnderlineEvent(link: ILink, showEvent: boolean): void {\n    const range = link.range;\n    const scrollOffset = this._bufferService.buffer.ydisp;\n    const event = this._createLinkUnderlineEvent(range.start.x - 1, range.start.y - scrollOffset - 1, range.end.x, range.end.y - scrollOffset - 1, undefined);\n    const emitter = showEvent ? this._onShowLinkUnderline : this._onHideLinkUnderline;\n    emitter.fire(event);\n  }\n\n  protected _linkLeave(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = false;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, false);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.remove('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.leave) {\n      link.leave(event, link.text);\n    }\n  }\n\n  /**\n   * Check if the buffer position is within the link\n   * @param link\n   * @param position\n   */\n  private _linkAtPosition(link: ILink, position: IBufferCellPosition): boolean {\n    const sameLine = link.range.start.y === link.range.end.y;\n    const wrappedFromLeft = link.range.start.y < position.y;\n    const wrappedToRight = link.range.end.y > position.y;\n\n    // If the start and end have the same y, then the position must be between start and end x\n    // If not, then handle each case seperately, depending on which way it wraps\n    return ((sameLine && link.range.start.x <= position.x && link.range.end.x >= position.x) ||\n      (wrappedFromLeft && link.range.end.x >= position.x) ||\n      (wrappedToRight && link.range.start.x <= position.x) ||\n      (wrappedFromLeft && wrappedToRight)) &&\n      link.range.start.y <= position.y &&\n      link.range.end.y >= position.y;\n  }\n\n  /**\n   * Get the buffer position from a mouse event\n   * @param event\n   */\n  private _positionFromMouseEvent(event: MouseEvent, element: HTMLElement, mouseService: IMouseService): IBufferCellPosition | undefined {\n    const coords = mouseService.getCoords(event, element, this._bufferService.cols, this._bufferService.rows);\n    if (!coords) {\n      return;\n    }\n\n    return { x: coords[0], y: coords[1] + this._bufferService.buffer.ydisp };\n  }\n\n  private _createLinkUnderlineEvent(x1: number, y1: number, x2: number, y2: number, fg: number | undefined): ILinkifierEvent {\n    return { x1, y1, x2, y2, cols: this._bufferService.cols, fg };\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// eslint-disable-next-line prefer-const\nexport let promptLabel = 'Terminal input';\n\n// eslint-disable-next-line prefer-const\nexport let tooMuchOutput = 'Too much output to announce, navigate to rows manually to read';\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IMouseService, ISelectionService } from 'browser/services/Services';\nimport { IMouseZoneManager, IMouseZone } from 'browser/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\n/**\n * The MouseZoneManager allows components to register zones within the terminal\n * that trigger hover and click callbacks.\n *\n * This class was intentionally made not so robust initially as the only case it\n * needed to support was single-line links which never overlap. Improvements can\n * be made in the future.\n */\nexport class MouseZoneManager extends Disposable implements IMouseZoneManager {\n  private _zones: IMouseZone[] = [];\n\n  private _areZonesActive: boolean = false;\n  private _mouseMoveListener: (e: MouseEvent) => any;\n  private _mouseLeaveListener: (e: MouseEvent) => any;\n  private _clickListener: (e: MouseEvent) => any;\n\n  private _tooltipTimeout: number | undefined;\n  private _currentZone: IMouseZone | undefined;\n  private _lastHoverCoords: [number | undefined, number | undefined] = [undefined, undefined];\n  private _initialSelectionLength: number = 0;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @ISelectionService private readonly _selectionService: ISelectionService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n\n    this.register(addDisposableDomListener(this._element, 'mousedown', e => this._onMouseDown(e)));\n\n    // These events are expensive, only listen to it when mouse zones are active\n    this._mouseMoveListener = e => this._onMouseMove(e);\n    this._mouseLeaveListener = e => this._onMouseLeave(e);\n    this._clickListener = e => this._onClick(e);\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this._deactivate();\n  }\n\n  public add(zone: IMouseZone): void {\n    this._zones.push(zone);\n    if (this._zones.length === 1) {\n      this._activate();\n    }\n  }\n\n  public clearAll(start?: number, end?: number): void {\n    // Exit if there's nothing to clear\n    if (this._zones.length === 0) {\n      return;\n    }\n\n    // Clear all if start/end weren't set\n    if (!start || !end) {\n      start = 0;\n      end = this._bufferService.rows - 1;\n    }\n\n    // Iterate through zones and clear them out if they're within the range\n    for (let i = 0; i < this._zones.length; i++) {\n      const zone = this._zones[i];\n      if ((zone.y1 > start && zone.y1 <= end + 1) ||\n          (zone.y2 > start && zone.y2 <= end + 1) ||\n          (zone.y1 < start && zone.y2 > end + 1)) {\n        if (this._currentZone && this._currentZone === zone) {\n          this._currentZone.leaveCallback();\n          this._currentZone = undefined;\n        }\n        this._zones.splice(i--, 1);\n      }\n    }\n\n    // Deactivate the mouse zone manager if all the zones have been removed\n    if (this._zones.length === 0) {\n      this._deactivate();\n    }\n  }\n\n  private _activate(): void {\n    if (!this._areZonesActive) {\n      this._areZonesActive = true;\n      this._element.addEventListener('mousemove', this._mouseMoveListener);\n      this._element.addEventListener('mouseleave', this._mouseLeaveListener);\n      this._element.addEventListener('click', this._clickListener);\n    }\n  }\n\n  private _deactivate(): void {\n    if (this._areZonesActive) {\n      this._areZonesActive = false;\n      this._element.removeEventListener('mousemove', this._mouseMoveListener);\n      this._element.removeEventListener('mouseleave', this._mouseLeaveListener);\n      this._element.removeEventListener('click', this._clickListener);\n    }\n  }\n\n  private _onMouseMove(e: MouseEvent): void {\n    // TODO: Ideally this would only clear the hover state when the mouse moves\n    // outside of the mouse zone\n    if (this._lastHoverCoords[0] !== e.pageX || this._lastHoverCoords[1] !== e.pageY) {\n      this._onHover(e);\n      // Record the current coordinates\n      this._lastHoverCoords = [e.pageX, e.pageY];\n    }\n  }\n\n  private _onHover(e: MouseEvent): void {\n    const zone = this._findZoneEventAt(e);\n\n    // Do nothing if the zone is the same\n    if (zone === this._currentZone) {\n      return;\n    }\n\n    // Fire the hover end callback and cancel any existing timer if a new zone\n    // is being hovered\n    if (this._currentZone) {\n      this._currentZone.leaveCallback();\n      this._currentZone = undefined;\n      if (this._tooltipTimeout) {\n        clearTimeout(this._tooltipTimeout);\n      }\n    }\n\n    // Exit if there is not zone\n    if (!zone) {\n      return;\n    }\n    this._currentZone = zone;\n\n    // Trigger the hover callback\n    if (zone.hoverCallback) {\n      zone.hoverCallback(e);\n    }\n\n    // Restart the tooltip timeout\n    this._tooltipTimeout = window.setTimeout(() => this._onTooltip(e), this._optionsService.rawOptions.linkTooltipHoverDuration);\n  }\n\n  private _onTooltip(e: MouseEvent): void {\n    this._tooltipTimeout = undefined;\n    const zone = this._findZoneEventAt(e);\n    zone?.tooltipCallback(e);\n  }\n\n  private _onMouseDown(e: MouseEvent): void {\n    // Store current terminal selection length, to check if we're performing\n    // a selection operation\n    this._initialSelectionLength = this._getSelectionLength();\n\n    // Ignore the event if there are no zones active\n    if (!this._areZonesActive) {\n      return;\n    }\n\n    // Find the active zone, prevent event propagation if found to prevent other\n    // components from handling the mouse event.\n    const zone = this._findZoneEventAt(e);\n    if (zone?.willLinkActivate(e)) {\n      e.preventDefault();\n      e.stopImmediatePropagation();\n    }\n  }\n\n  private _onMouseLeave(e: MouseEvent): void {\n    // Fire the hover end callback and cancel any existing timer if the mouse\n    // leaves the terminal element\n    if (this._currentZone) {\n      this._currentZone.leaveCallback();\n      this._currentZone = undefined;\n      if (this._tooltipTimeout) {\n        clearTimeout(this._tooltipTimeout);\n      }\n    }\n  }\n\n  private _onClick(e: MouseEvent): void {\n    // Find the active zone and click it if found and no selection was\n    // being performed\n    const zone = this._findZoneEventAt(e);\n    const currentSelectionLength = this._getSelectionLength();\n\n    if (zone && currentSelectionLength === this._initialSelectionLength) {\n      zone.clickCallback(e);\n      e.preventDefault();\n      e.stopImmediatePropagation();\n    }\n  }\n\n  private _getSelectionLength(): number {\n    const selectionText = this._selectionService.selectionText;\n    return selectionText ? selectionText.length : 0;\n  }\n\n  private _findZoneEventAt(e: MouseEvent): IMouseZone | undefined {\n    const coords = this._mouseService.getCoords(e, this._screenElement, this._bufferService.cols, this._bufferService.rows);\n    if (!coords) {\n      return undefined;\n    }\n    const x = coords[0];\n    const y = coords[1];\n    for (let i = 0; i < this._zones.length; i++) {\n      const zone = this._zones[i];\n      if (zone.y1 === zone.y2) {\n        // Single line link\n        if (y === zone.y1 && x >= zone.x1 && x < zone.x2) {\n          return zone;\n        }\n      } else {\n        // Multi-line link\n        if ((y === zone.y1 && x >= zone.x1) ||\n            (y === zone.y2 && x < zone.x2) ||\n            (y > zone.y1 && y < zone.y2)) {\n          return zone;\n        }\n      }\n    }\n    return undefined;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDebouncer } from 'browser/Types';\n\n/**\n * Debounces calls to render terminal rows using animation frames.\n */\nexport class RenderDebouncer implements IRenderDebouncer {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n  private _animationFrame: number | undefined;\n\n  constructor(\n    private _renderCallback: (start: number, end: number) => void\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    if (this._animationFrame) {\n      return;\n    }\n\n    this._animationFrame = window.requestAnimationFrame(() => this._innerRefresh());\n  }\n\n  private _innerRefresh(): void {\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n    this._animationFrame = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\n\nexport type ScreenDprListener = (newDevicePixelRatio?: number, oldDevicePixelRatio?: number) => void;\n\n/**\n * The screen device pixel ratio monitor allows listening for when the\n * window.devicePixelRatio value changes. This is done not with polling but with\n * the use of window.matchMedia to watch media queries. When the event fires,\n * the listener will be reattached using a different media query to ensure that\n * any further changes will register.\n *\n * The listener should fire on both window zoom changes and switching to a\n * monitor with a different DPI.\n */\nexport class ScreenDprMonitor extends Disposable {\n  private _currentDevicePixelRatio: number = window.devicePixelRatio;\n  private _outerListener: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | undefined;\n  private _listener: ScreenDprListener | undefined;\n  private _resolutionMediaMatchList: MediaQueryList | undefined;\n\n  public setListener(listener: ScreenDprListener): void {\n    if (this._listener) {\n      this.clearListener();\n    }\n    this._listener = listener;\n    this._outerListener = () => {\n      if (!this._listener) {\n        return;\n      }\n      this._listener(window.devicePixelRatio, this._currentDevicePixelRatio);\n      this._updateDpr();\n    };\n    this._updateDpr();\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this.clearListener();\n  }\n\n  private _updateDpr(): void {\n    if (!this._outerListener) {\n      return;\n    }\n\n    // Clear listeners for old DPR\n    this._resolutionMediaMatchList?.removeListener(this._outerListener);\n\n    // Add listeners for new DPR\n    this._currentDevicePixelRatio = window.devicePixelRatio;\n    this._resolutionMediaMatchList = window.matchMedia(`screen and (resolution: ${window.devicePixelRatio}dppx)`);\n    this._resolutionMediaMatchList.addListener(this._outerListener);\n  }\n\n  public clearListener(): void {\n    if (!this._resolutionMediaMatchList || !this._listener || !this._outerListener) {\n      return;\n    }\n    this._resolutionMediaMatchList.removeListener(this._outerListener);\n    this._resolutionMediaMatchList = undefined;\n    this._listener = undefined;\n    this._outerListener = undefined;\n  }\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { ICompositionHelper, ITerminal, IBrowser, CustomKeyEventHandler, ILinkifier, IMouseZoneManager, LinkMatcherHandler, ILinkMatcherOptions, IViewport, ILinkifier2, CharacterJoinerHandler } from 'browser/Types';\nimport { IRenderer } from 'browser/renderer/Types';\nimport { CompositionHelper } from 'browser/input/CompositionHelper';\nimport { Viewport } from 'browser/Viewport';\nimport { rightClickHandler, moveTextAreaUnderMouseCursor, handlePasteEvent, copyHandler, paste } from 'browser/Clipboard';\nimport { C0 } from 'common/data/EscapeSequences';\nimport { WindowsOptionsReportType } from '../common/InputHandler';\nimport { Renderer } from 'browser/renderer/Renderer';\nimport { Linkifier } from 'browser/Linkifier';\nimport { SelectionService } from 'browser/services/SelectionService';\nimport * as Browser from 'common/Platform';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { SoundService } from 'browser/services/SoundService';\nimport { MouseZoneManager } from 'browser/MouseZoneManager';\nimport { AccessibilityManager } from './AccessibilityManager';\nimport { ITheme, IMarker, IDisposable, ISelectionPosition, ILinkProvider, IDecorationOptions, IDecoration } from 'xterm';\nimport { DomRenderer } from 'browser/renderer/dom/DomRenderer';\nimport { KeyboardResultType, CoreMouseEventType, CoreMouseButton, CoreMouseAction, ITerminalOptions, ScrollSource, IColorEvent, ColorIndex, ColorRequestType } from 'common/Types';\nimport { evaluateKeyboardEvent } from 'common/input/Keyboard';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { ColorManager } from 'browser/ColorManager';\nimport { RenderService } from 'browser/services/RenderService';\nimport { ICharSizeService, IRenderService, IMouseService, ISelectionService, ISoundService, ICoreBrowserService, ICharacterJoinerService, IDecorationService } from 'browser/services/Services';\nimport { CharSizeService } from 'browser/services/CharSizeService';\nimport { IBuffer } from 'common/buffer/Types';\nimport { MouseService } from 'browser/services/MouseService';\nimport { Linkifier2 } from 'browser/Linkifier2';\nimport { CoreBrowserService } from 'browser/services/CoreBrowserService';\nimport { CoreTerminal } from 'common/CoreTerminal';\nimport { color, rgba } from 'browser/Color';\nimport { CharacterJoinerService } from 'browser/services/CharacterJoinerService';\nimport { toRgbString } from 'common/input/XParseColor';\nimport { DecorationService } from 'browser/services/DecorationService';\n\n// Let it work inside Node.js for automated testing purposes.\nconst document: Document = (typeof window !== 'undefined') ? window.document : null as any;\n\nexport class Terminal extends CoreTerminal implements ITerminal {\n  public textarea: HTMLTextAreaElement | undefined;\n  public element: HTMLElement | undefined;\n  public screenElement: HTMLElement | undefined;\n\n  private _document: Document | undefined;\n  private _viewportScrollArea: HTMLElement | undefined;\n  private _viewportElement: HTMLElement | undefined;\n  private _helperContainer: HTMLElement | undefined;\n  private _compositionView: HTMLElement | undefined;\n\n  // private _visualBellTimer: number;\n\n  public browser: IBrowser = Browser as any;\n\n  private _customKeyEventHandler: CustomKeyEventHandler | undefined;\n\n  // browser services\n  private _charSizeService: ICharSizeService | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _characterJoinerService: ICharacterJoinerService | undefined;\n  private _selectionService: ISelectionService | undefined;\n  private _soundService: ISoundService | undefined;\n\n  /**\n   * Records whether the keydown event has already been handled and triggered a data event, if so\n   * the keypress event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyDownHandled: boolean = false;\n\n  /**\n   * Records whether the keypress event has already been handled and triggered a data event, if so\n   * the input event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyPressHandled: boolean = false;\n\n  /**\n   * Records whether there has been a keydown event for a dead key without a corresponding keydown\n   * event for the composed/alternative character. If we cancel the keydown event for the dead key,\n   * no events will be emitted for the final character.\n   */\n  private _unprocessedDeadKey: boolean = false;\n\n  public linkifier: ILinkifier;\n  public linkifier2: ILinkifier2;\n  public viewport: IViewport | undefined;\n  public decorationService: IDecorationService;\n  private _compositionHelper: ICompositionHelper | undefined;\n  private _mouseZoneManager: IMouseZoneManager | undefined;\n  private _accessibilityManager: AccessibilityManager | undefined;\n  private _colorManager: ColorManager | undefined;\n  private _theme: ITheme | undefined;\n\n  private _onCursorMove = new EventEmitter<void>();\n  public get onCursorMove(): IEvent<void> { return this._onCursorMove.event; }\n  private _onKey = new EventEmitter<{ key: string, domEvent: KeyboardEvent }>();\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._onKey.event; }\n  private _onRender = new EventEmitter<{ start: number, end: number }>();\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._onRender.event; }\n  private _onSelectionChange = new EventEmitter<void>();\n  public get onSelectionChange(): IEvent<void> { return this._onSelectionChange.event; }\n  private _onTitleChange = new EventEmitter<string>();\n  public get onTitleChange(): IEvent<string> { return this._onTitleChange.event; }\n  private _onBell = new EventEmitter<void>();\n  public get onBell(): IEvent<void> { return this._onBell.event; }\n\n  private _onFocus = new EventEmitter<void>();\n  public get onFocus(): IEvent<void> { return this._onFocus.event; }\n  private _onBlur = new EventEmitter<void>();\n  public get onBlur(): IEvent<void> { return this._onBlur.event; }\n  private _onA11yCharEmitter = new EventEmitter<string>();\n  public get onA11yChar(): IEvent<string> { return this._onA11yCharEmitter.event; }\n  private _onA11yTabEmitter = new EventEmitter<number>();\n  public get onA11yTab(): IEvent<number> { return this._onA11yTabEmitter.event; }\n\n  /**\n   * Creates a new `Terminal` object.\n   *\n   * @param options An object containing a set of options, the available options are:\n   *   - `cursorBlink` (boolean): Whether the terminal cursor blinks\n   *   - `cols` (number): The number of columns of the terminal (horizontal size)\n   *   - `rows` (number): The number of rows of the terminal (vertical size)\n   *\n   * @public\n   * @class Xterm Xterm\n   * @alias module:xterm/src/xterm\n   */\n  constructor(\n    options: Partial<ITerminalOptions> = {}\n  ) {\n    super(options);\n\n    this._setup();\n\n    this.linkifier = this._instantiationService.createInstance(Linkifier);\n    this.linkifier2 = this.register(this._instantiationService.createInstance(Linkifier2));\n    this.decorationService = this.register(this._instantiationService.createInstance(DecorationService));\n\n    // Setup InputHandler listeners\n    this.register(this._inputHandler.onRequestBell(() => this.bell()));\n    this.register(this._inputHandler.onRequestRefreshRows((start, end) => this.refresh(start, end)));\n    this.register(this._inputHandler.onRequestSendFocus(() => this._reportFocus()));\n    this.register(this._inputHandler.onRequestReset(() => this.reset()));\n    this.register(this._inputHandler.onRequestWindowsOptionsReport(type => this._reportWindowsOptions(type)));\n    this.register(this._inputHandler.onColor((event) => this._handleColorEvent(event)));\n    this.register(forwardEvent(this._inputHandler.onCursorMove, this._onCursorMove));\n    this.register(forwardEvent(this._inputHandler.onTitleChange, this._onTitleChange));\n    this.register(forwardEvent(this._inputHandler.onA11yChar, this._onA11yCharEmitter));\n    this.register(forwardEvent(this._inputHandler.onA11yTab, this._onA11yTabEmitter));\n\n    // Setup listeners\n    this.register(this._bufferService.onResize(e => this._afterResize(e.cols, e.rows)));\n  }\n\n  /**\n   * Handle color event from inputhandler for OSC 4|104 | 10|110 | 11|111 | 12|112.\n   * An event from OSC 4|104 may contain multiple set or report requests, and multiple\n   * or none restore requests (resetting all),\n   * while an event from OSC 10|110 | 11|111 | 12|112 always contains a single request.\n   */\n  private _handleColorEvent(event: IColorEvent): void {\n    if (!this._colorManager) return;\n    for (const req of event) {\n      let acc: 'foreground' | 'background' | 'cursor' | 'ansi' | undefined = undefined;\n      let ident = '';\n      switch (req.index) {\n        case ColorIndex.FOREGROUND: // OSC 10 | 110\n          acc = 'foreground';\n          ident = '10';\n          break;\n        case ColorIndex.BACKGROUND: // OSC 11 | 111\n          acc = 'background';\n          ident = '11';\n          break;\n        case ColorIndex.CURSOR: // OSC 12 | 112\n          acc = 'cursor';\n          ident = '12';\n          break;\n        default: // OSC 4 | 104\n          // we can skip the [0..255] range check here (already done in inputhandler)\n          acc = 'ansi';\n          ident = '4;' + req.index;\n      }\n      if (acc) {\n        switch (req.type) {\n          case ColorRequestType.REPORT:\n            const channels = color.toColorRGB(acc === 'ansi'\n              ? this._colorManager.colors.ansi[req.index]\n              : this._colorManager.colors[acc]);\n            this.coreService.triggerDataEvent(`${C0.ESC}]${ident};${toRgbString(channels)}${C0.BEL}`);\n            break;\n          case ColorRequestType.SET:\n            if (acc === 'ansi') this._colorManager.colors.ansi[req.index] = rgba.toColor(...req.color);\n            else this._colorManager.colors[acc] = rgba.toColor(...req.color);\n            break;\n          case ColorRequestType.RESTORE:\n            this._colorManager.restoreColor(req.index);\n            break;\n        }\n      }\n    }\n    this._renderService?.setColors(this._colorManager.colors);\n    this.viewport?.onThemeChange(this._colorManager.colors);\n  }\n\n  public dispose(): void {\n    if (this._isDisposed) {\n      return;\n    }\n    super.dispose();\n    this._renderService?.dispose();\n    this._customKeyEventHandler = undefined;\n    this.write = () => { };\n    this.element?.parentNode?.removeChild(this.element);\n  }\n\n  protected _setup(): void {\n    super._setup();\n\n    this._customKeyEventHandler = undefined;\n  }\n\n  /**\n   * Convenience property to active buffer.\n   */\n  public get buffer(): IBuffer {\n    return this.buffers.active;\n  }\n\n  /**\n   * Focus the terminal. Delegates focus handling to the terminal's DOM element.\n   */\n  public focus(): void {\n    if (this.textarea) {\n      this.textarea.focus({ preventScroll: true });\n    }\n  }\n\n  protected _updateOptions(key: string): void {\n    super._updateOptions(key);\n\n    // TODO: These listeners should be owned by individual components\n    switch (key) {\n      case 'fontFamily':\n      case 'fontSize':\n        // When the font changes the size of the cells may change which requires a renderer clear\n        this._renderService?.clear();\n        this._charSizeService?.measure();\n        break;\n      case 'cursorBlink':\n      case 'cursorStyle':\n        // The DOM renderer needs a row refresh to update the cursor styles\n        this.refresh(this.buffer.y, this.buffer.y);\n        break;\n      case 'customGlyphs':\n      case 'drawBoldTextInBrightColors':\n      case 'letterSpacing':\n      case 'lineHeight':\n      case 'fontWeight':\n      case 'fontWeightBold':\n      case 'minimumContrastRatio':\n        // When the font changes the size of the cells may change which requires a renderer clear\n        if (this._renderService) {\n          this._renderService.clear();\n          this._renderService.onResize(this.cols, this.rows);\n          this.refresh(0, this.rows - 1);\n        }\n        break;\n      case 'rendererType':\n        if (this._renderService) {\n          this._renderService.setRenderer(this._createRenderer());\n          this._renderService.onResize(this.cols, this.rows);\n        }\n        break;\n      case 'scrollback':\n        this.viewport?.syncScrollArea();\n        break;\n      case 'screenReaderMode':\n        if (this.optionsService.rawOptions.screenReaderMode) {\n          if (!this._accessibilityManager && this._renderService) {\n            this._accessibilityManager = new AccessibilityManager(this, this._renderService);\n          }\n        } else {\n          this._accessibilityManager?.dispose();\n          this._accessibilityManager = undefined;\n        }\n        break;\n      case 'tabStopWidth': this.buffers.setupTabStops(); break;\n      case 'theme':\n        this._setTheme(this.optionsService.rawOptions.theme);\n        break;\n    }\n  }\n\n  /**\n   * Binds the desired focus behavior on a given terminal object.\n   */\n  private _onTextAreaFocus(ev: KeyboardEvent): void {\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    }\n    this.updateCursorStyle(ev);\n    this.element!.classList.add('focus');\n    this._showCursor();\n    this._onFocus.fire();\n  }\n\n  /**\n   * Blur the terminal, calling the blur function on the terminal's underlying\n   * textarea.\n   */\n  public blur(): void {\n    return this.textarea?.blur();\n  }\n\n  /**\n   * Binds the desired blur behavior on a given terminal object.\n   */\n  private _onTextAreaBlur(): void {\n    // Text can safely be removed on blur. Doing it earlier could interfere with\n    // screen readers reading it out.\n    this.textarea!.value = '';\n    this.refresh(this.buffer.y, this.buffer.y);\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n    this.element!.classList.remove('focus');\n    this._onBlur.fire();\n  }\n\n  private _syncTextArea(): void {\n    if (!this.textarea || !this.buffer.isCursorInViewport || this._compositionHelper!.isComposing || !this._renderService) {\n      return;\n    }\n    const cursorY = this.buffer.ybase + this.buffer.y;\n    const bufferLine = this.buffer.lines.get(cursorY);\n    if (!bufferLine) {\n      return;\n    }\n    const cursorX = Math.min(this.buffer.x, this.cols - 1);\n    const cellHeight = this._renderService.dimensions.actualCellHeight;\n    const width = bufferLine.getWidth(cursorX);\n    const cellWidth = this._renderService.dimensions.actualCellWidth * width;\n    const cursorTop = this.buffer.y * this._renderService.dimensions.actualCellHeight;\n    const cursorLeft = cursorX * this._renderService.dimensions.actualCellWidth;\n\n    // Sync the textarea to the exact position of the composition view so the IME knows where the\n    // text is.\n    this.textarea.style.left = cursorLeft + 'px';\n    this.textarea.style.top = cursorTop + 'px';\n    this.textarea.style.width = cellWidth + 'px';\n    this.textarea.style.height = cellHeight + 'px';\n    this.textarea.style.lineHeight = cellHeight + 'px';\n    this.textarea.style.zIndex = '-5';\n  }\n\n  /**\n   * Initialize default behavior\n   */\n  private _initGlobal(): void {\n    this._bindKeys();\n\n    // Bind clipboard functionality\n    this.register(addDisposableDomListener(this.element!, 'copy', (event: ClipboardEvent) => {\n      // If mouse events are active it means the selection manager is disabled and\n      // copy should be handled by the host program.\n      if (!this.hasSelection()) {\n        return;\n      }\n      copyHandler(event, this._selectionService!);\n    }));\n    const pasteHandlerWrapper = (event: ClipboardEvent): void => handlePasteEvent(event, this.textarea!, this.coreService);\n    this.register(addDisposableDomListener(this.textarea!, 'paste', pasteHandlerWrapper));\n    this.register(addDisposableDomListener(this.element!, 'paste', pasteHandlerWrapper));\n\n    // Handle right click context menus\n    if (Browser.isFirefox) {\n      // Firefox doesn't appear to fire the contextmenu event on right click\n      this.register(addDisposableDomListener(this.element!, 'mousedown', (event: MouseEvent) => {\n        if (event.button === 2) {\n          rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n        }\n      }));\n    } else {\n      this.register(addDisposableDomListener(this.element!, 'contextmenu', (event: MouseEvent) => {\n        rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n      }));\n    }\n\n    // Move the textarea under the cursor when middle clicking on Linux to ensure\n    // middle click to paste selection works. This only appears to work in Chrome\n    // at the time is writing.\n    if (Browser.isLinux) {\n      // Use auxclick event over mousedown the latter doesn't seem to work. Note\n      // that the regular click event doesn't fire for the middle mouse button.\n      this.register(addDisposableDomListener(this.element!, 'auxclick', (event: MouseEvent) => {\n        if (event.button === 1) {\n          moveTextAreaUnderMouseCursor(event, this.textarea!, this.screenElement!);\n        }\n      }));\n    }\n  }\n\n  /**\n   * Apply key handling to the terminal\n   */\n  private _bindKeys(): void {\n    this.register(addDisposableDomListener(this.textarea!, 'keyup', (ev: KeyboardEvent) => this._keyUp(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keydown', (ev: KeyboardEvent) => this._keyDown(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keypress', (ev: KeyboardEvent) => this._keyPress(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionstart', () => this._compositionHelper!.compositionstart()));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionupdate', (e: CompositionEvent) => this._compositionHelper!.compositionupdate(e)));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionend', () => this._compositionHelper!.compositionend()));\n    this.register(addDisposableDomListener(this.textarea!, 'input', (ev: InputEvent) => this._inputEvent(ev), true));\n    this.register(this.onRender(() => this._compositionHelper!.updateCompositionElements()));\n    this.register(this.onRender(e => this._queueLinkification(e.start, e.end)));\n  }\n\n  /**\n   * Opens the terminal within an element.\n   *\n   * @param parent The element to create the terminal within.\n   */\n  public open(parent: HTMLElement): void {\n    if (!parent) {\n      throw new Error('Terminal requires a parent element.');\n    }\n\n    if (!parent.isConnected) {\n      this._logService.debug('Terminal.open was called on an element that was not attached to the DOM');\n    }\n\n    this._document = parent.ownerDocument!;\n\n    // Create main element container\n    this.element = this._document.createElement('div');\n    this.element.dir = 'ltr';   // xterm.css assumes LTR\n    this.element.classList.add('terminal');\n    this.element.classList.add('xterm');\n    this.element.setAttribute('tabindex', '0');\n    parent.appendChild(this.element);\n\n    // Performance: Use a document fragment to build the terminal\n    // viewport and helper elements detached from the DOM\n    const fragment = document.createDocumentFragment();\n    this._viewportElement = document.createElement('div');\n    this._viewportElement.classList.add('xterm-viewport');\n    fragment.appendChild(this._viewportElement);\n    this._viewportScrollArea = document.createElement('div');\n    this._viewportScrollArea.classList.add('xterm-scroll-area');\n    this._viewportElement.appendChild(this._viewportScrollArea);\n\n    this.screenElement = document.createElement('div');\n    this.screenElement.classList.add('xterm-screen');\n    // Create the container that will hold helpers like the textarea for\n    // capturing DOM Events. Then produce the helpers.\n    this._helperContainer = document.createElement('div');\n    this._helperContainer.classList.add('xterm-helpers');\n    this.screenElement.appendChild(this._helperContainer);\n    fragment.appendChild(this.screenElement);\n\n    this.textarea = document.createElement('textarea');\n    this.textarea.classList.add('xterm-helper-textarea');\n    this.textarea.setAttribute('aria-label', Strings.promptLabel);\n    this.textarea.setAttribute('aria-multiline', 'false');\n    this.textarea.setAttribute('autocorrect', 'off');\n    this.textarea.setAttribute('autocapitalize', 'off');\n    this.textarea.setAttribute('spellcheck', 'false');\n    this.textarea.tabIndex = 0;\n    this.register(addDisposableDomListener(this.textarea, 'focus', (ev: KeyboardEvent) => this._onTextAreaFocus(ev)));\n    this.register(addDisposableDomListener(this.textarea, 'blur', () => this._onTextAreaBlur()));\n    this._helperContainer.appendChild(this.textarea);\n\n    const coreBrowserService = this._instantiationService.createInstance(CoreBrowserService, this.textarea);\n    this._instantiationService.setService(ICoreBrowserService, coreBrowserService);\n\n    this._charSizeService = this._instantiationService.createInstance(CharSizeService, this._document, this._helperContainer);\n    this._instantiationService.setService(ICharSizeService, this._charSizeService);\n\n    this._theme = this.options.theme || this._theme;\n    this._colorManager = new ColorManager(document, this.options.allowTransparency);\n    this.register(this.optionsService.onOptionChange(e => this._colorManager!.onOptionsChange(e)));\n    this._colorManager.setTheme(this._theme);\n\n    this._characterJoinerService = this._instantiationService.createInstance(CharacterJoinerService);\n    this._instantiationService.setService(ICharacterJoinerService, this._characterJoinerService);\n\n    const renderer = this._createRenderer();\n    this._renderService = this.register(this._instantiationService.createInstance(RenderService, renderer, this.rows, this.screenElement));\n    this._instantiationService.setService(IRenderService, this._renderService);\n    this.register(this._renderService.onRenderedBufferChange(e => this._onRender.fire(e)));\n    this.onResize(e => this._renderService!.resize(e.cols, e.rows));\n\n    this._compositionView = document.createElement('div');\n    this._compositionView.classList.add('composition-view');\n    this._compositionHelper = this._instantiationService.createInstance(CompositionHelper, this.textarea, this._compositionView);\n    this._helperContainer.appendChild(this._compositionView);\n\n    // Performance: Add viewport and helper elements from the fragment\n    this.element.appendChild(fragment);\n\n    this._soundService = this._instantiationService.createInstance(SoundService);\n    this._instantiationService.setService(ISoundService, this._soundService);\n    this._mouseService = this._instantiationService.createInstance(MouseService);\n    this._instantiationService.setService(IMouseService, this._mouseService);\n\n    this.viewport = this._instantiationService.createInstance(Viewport,\n      (amount: number) => this.scrollLines(amount, true, ScrollSource.VIEWPORT),\n      this._viewportElement,\n      this._viewportScrollArea,\n      this.element\n    );\n    this.viewport.onThemeChange(this._colorManager.colors);\n    this.register(this._inputHandler.onRequestSyncScrollBar(() => this.viewport!.syncScrollArea()));\n    this.register(this.viewport);\n\n    this.register(this.onCursorMove(() => {\n      this._renderService!.onCursorMove();\n      this._syncTextArea();\n    }));\n    this.register(this.onResize(() => this._renderService!.onResize(this.cols, this.rows)));\n    this.register(this.onBlur(() => this._renderService!.onBlur()));\n    this.register(this.onFocus(() => this._renderService!.onFocus()));\n    this.register(this._renderService.onDimensionsChange(() => this.viewport!.syncScrollArea()));\n\n    this._selectionService = this.register(this._instantiationService.createInstance(SelectionService,\n      this.element,\n      this.screenElement,\n      this.linkifier2\n    ));\n    this._instantiationService.setService(ISelectionService, this._selectionService);\n    this.register(this._selectionService.onRequestScrollLines(e => this.scrollLines(e.amount, e.suppressScrollEvent)));\n    this.register(this._selectionService.onSelectionChange(() => this._onSelectionChange.fire()));\n    this.register(this._selectionService.onRequestRedraw(e => this._renderService!.onSelectionChanged(e.start, e.end, e.columnSelectMode)));\n    this.register(this._selectionService.onLinuxMouseSelection(text => {\n      // If there's a new selection, put it into the textarea, focus and select it\n      // in order to register it as a selection on the OS. This event is fired\n      // only on Linux to enable middle click to paste selection.\n      this.textarea!.value = text;\n      this.textarea!.focus();\n      this.textarea!.select();\n    }));\n    this.register(this._onScroll.event(ev => {\n      this.viewport!.syncScrollArea();\n      this._selectionService!.refresh();\n    }));\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', () => this._selectionService!.refresh()));\n\n    this._mouseZoneManager = this._instantiationService.createInstance(MouseZoneManager, this.element, this.screenElement);\n    this.register(this._mouseZoneManager);\n    this.register(this.onScroll(() => this._mouseZoneManager!.clearAll()));\n    this.linkifier.attachToDom(this.element, this._mouseZoneManager);\n    this.linkifier2.attachToDom(this.screenElement, this._mouseService, this._renderService);\n\n    this.decorationService.attachToDom(this.screenElement, this._renderService, this._bufferService);\n    // This event listener must be registered aftre MouseZoneManager is created\n    this.register(addDisposableDomListener(this.element, 'mousedown', (e: MouseEvent) => this._selectionService!.onMouseDown(e)));\n\n    // apply mouse event classes set by escape codes before terminal was attached\n    if (this.coreMouseService.areMouseEventsActive) {\n      this._selectionService.disable();\n      this.element.classList.add('enable-mouse-events');\n    } else {\n      this._selectionService.enable();\n    }\n\n    if (this.options.screenReaderMode) {\n      // Note that this must be done *after* the renderer is created in order to\n      // ensure the correct order of the dprchange event\n      this._accessibilityManager = new AccessibilityManager(this, this._renderService);\n    }\n\n    // Measure the character size\n    this._charSizeService.measure();\n\n    // Setup loop that draws to screen\n    this.refresh(0, this.rows - 1);\n\n    // Initialize global actions that need to be taken on the document.\n    this._initGlobal();\n\n    // Listen for mouse events and translate\n    // them into terminal mouse protocols.\n    this.bindMouse();\n  }\n\n  private _createRenderer(): IRenderer {\n    switch (this.options.rendererType) {\n      case 'canvas': return this._instantiationService.createInstance(Renderer, this._colorManager!.colors, this.screenElement!, this.linkifier, this.linkifier2);\n      case 'dom': return this._instantiationService.createInstance(DomRenderer, this._colorManager!.colors, this.element!, this.screenElement!, this._viewportElement!, this.linkifier, this.linkifier2);\n      default: throw new Error(`Unrecognized rendererType \"${this.options.rendererType}\"`);\n    }\n  }\n\n  /**\n   * Sets the theme on the renderer. The renderer must have been initialized.\n   * @param theme The theme to set.\n   */\n  private _setTheme(theme: ITheme): void {\n    this._theme = theme;\n    this._colorManager?.setTheme(theme);\n    this._renderService?.setColors(this._colorManager!.colors);\n    this.viewport?.onThemeChange(this._colorManager!.colors);\n  }\n\n  /**\n   * Bind certain mouse events to the terminal.\n   * By default only 3 button + wheel up/down is ativated. For higher buttons\n   * no mouse report will be created. Typically the standard actions will be active.\n   *\n   * There are several reasons not to enable support for higher buttons/wheel:\n   * - Button 4 and 5 are typically used for history back and forward navigation,\n   *   there is no straight forward way to supress/intercept those standard actions.\n   * - Support for higher buttons does not work in some platform/browser combinations.\n   * - Left/right wheel was not tested.\n   * - Emulators vary in mouse button support, typically only 3 buttons and\n   *   wheel up/down work reliable.\n   *\n   * TODO: Move mouse event code into its own file.\n   */\n  public bindMouse(): void {\n    const self = this;\n    const el = this.element!;\n\n    // send event to CoreMouseService\n    function sendEvent(ev: MouseEvent | WheelEvent): boolean {\n      // get mouse coordinates\n      const pos = self._mouseService!.getRawByteCoords(ev, self.screenElement!, self.cols, self.rows);\n      if (!pos) {\n        return false;\n      }\n\n      let but: CoreMouseButton;\n      let action: CoreMouseAction | undefined;\n      switch ((ev as any).overrideType || ev.type) {\n        case 'mousemove':\n          action = CoreMouseAction.MOVE;\n          if (ev.buttons === undefined) {\n            // buttons is not supported on macOS, try to get a value from button instead\n            but = CoreMouseButton.NONE;\n            if (ev.button !== undefined) {\n              but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n            }\n          } else {\n            // according to MDN buttons only reports up to button 5 (AUX2)\n            but = ev.buttons & 1 ? CoreMouseButton.LEFT :\n              ev.buttons & 4 ? CoreMouseButton.MIDDLE :\n                ev.buttons & 2 ? CoreMouseButton.RIGHT :\n                  CoreMouseButton.NONE; // fallback to NONE\n          }\n          break;\n        case 'mouseup':\n          action = CoreMouseAction.UP;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'mousedown':\n          action = CoreMouseAction.DOWN;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'wheel':\n          // only UP/DOWN wheel events are respected\n          if ((ev as WheelEvent).deltaY !== 0) {\n            action = (ev as WheelEvent).deltaY < 0 ? CoreMouseAction.UP : CoreMouseAction.DOWN;\n          }\n          but = CoreMouseButton.WHEEL;\n          break;\n        default:\n          // dont handle other event types by accident\n          return false;\n      }\n\n      // exit if we cannot determine valid button/action values\n      // do nothing for higher buttons than wheel\n      if (action === undefined || but === undefined || but > CoreMouseButton.WHEEL) {\n        return false;\n      }\n\n      return self.coreMouseService.triggerMouseEvent({\n        col: pos.x - 33, // FIXME: why -33 here?\n        row: pos.y - 33,\n        button: but,\n        action,\n        ctrl: ev.ctrlKey,\n        alt: ev.altKey,\n        shift: ev.shiftKey\n      });\n    }\n\n    /**\n     * Event listener state handling.\n     * We listen to the onProtocolChange event of CoreMouseService and put\n     * requested listeners in `requestedEvents`. With this the listeners\n     * have all bits to do the event listener juggling.\n     * Note: 'mousedown' currently is \"always on\" and not managed\n     * by onProtocolChange.\n     */\n    const requestedEvents: { [key: string]: ((ev: Event) => void) | null } = {\n      mouseup: null,\n      wheel: null,\n      mousedrag: null,\n      mousemove: null\n    };\n    const eventListeners: { [key: string]: (ev: any) => void | boolean } = {\n      mouseup: (ev: MouseEvent) => {\n        sendEvent(ev);\n        if (!ev.buttons) {\n          // if no other button is held remove global handlers\n          this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n          if (requestedEvents.mousedrag) {\n            this._document!.removeEventListener('mousemove', requestedEvents.mousedrag);\n          }\n        }\n        return this.cancel(ev);\n      },\n      wheel: (ev: WheelEvent) => {\n        sendEvent(ev);\n        return this.cancel(ev, true);\n      },\n      mousedrag: (ev: MouseEvent) => {\n        // deal only with move while a button is held\n        if (ev.buttons) {\n          sendEvent(ev);\n        }\n      },\n      mousemove: (ev: MouseEvent) => {\n        // deal only with move without any button\n        if (!ev.buttons) {\n          sendEvent(ev);\n        }\n      }\n    };\n    this.register(this.coreMouseService.onProtocolChange(events => {\n      // apply global changes on events\n      if (events) {\n        if (this.optionsService.rawOptions.logLevel === 'debug') {\n          this._logService.debug('Binding to mouse events:', this.coreMouseService.explainEvents(events));\n        }\n        this.element!.classList.add('enable-mouse-events');\n        this._selectionService!.disable();\n      } else {\n        this._logService.debug('Unbinding from mouse events.');\n        this.element!.classList.remove('enable-mouse-events');\n        this._selectionService!.enable();\n      }\n\n      // add/remove handlers from requestedEvents\n\n      if (!(events & CoreMouseEventType.MOVE)) {\n        el.removeEventListener('mousemove', requestedEvents.mousemove!);\n        requestedEvents.mousemove = null;\n      } else if (!requestedEvents.mousemove) {\n        el.addEventListener('mousemove', eventListeners.mousemove);\n        requestedEvents.mousemove = eventListeners.mousemove;\n      }\n\n      if (!(events & CoreMouseEventType.WHEEL)) {\n        el.removeEventListener('wheel', requestedEvents.wheel!);\n        requestedEvents.wheel = null;\n      } else if (!requestedEvents.wheel) {\n        el.addEventListener('wheel', eventListeners.wheel, { passive: false });\n        requestedEvents.wheel = eventListeners.wheel;\n      }\n\n      if (!(events & CoreMouseEventType.UP)) {\n        this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n        requestedEvents.mouseup = null;\n      } else if (!requestedEvents.mouseup) {\n        requestedEvents.mouseup = eventListeners.mouseup;\n      }\n\n      if (!(events & CoreMouseEventType.DRAG)) {\n        this._document!.removeEventListener('mousemove', requestedEvents.mousedrag!);\n        requestedEvents.mousedrag = null;\n      } else if (!requestedEvents.mousedrag) {\n        requestedEvents.mousedrag = eventListeners.mousedrag;\n      }\n    }));\n    // force initial onProtocolChange so we dont miss early mouse requests\n    this.coreMouseService.activeProtocol = this.coreMouseService.activeProtocol;\n\n    /**\n     * \"Always on\" event listeners.\n     */\n    this.register(addDisposableDomListener(el, 'mousedown', (ev: MouseEvent) => {\n      ev.preventDefault();\n      this.focus();\n\n      // Don't send the mouse button to the pty if mouse events are disabled or\n      // if the selection manager is having selection forced (ie. a modifier is\n      // held).\n      if (!this.coreMouseService.areMouseEventsActive || this._selectionService!.shouldForceSelection(ev)) {\n        return;\n      }\n\n      sendEvent(ev);\n\n      // Register additional global handlers which should keep reporting outside\n      // of the terminal element.\n      // Note: Other emulators also do this for 'mousedown' while a button\n      // is held, we currently limit 'mousedown' to the terminal only.\n      if (requestedEvents.mouseup) {\n        this._document!.addEventListener('mouseup', requestedEvents.mouseup);\n      }\n      if (requestedEvents.mousedrag) {\n        this._document!.addEventListener('mousemove', requestedEvents.mousedrag);\n      }\n\n      return this.cancel(ev);\n    }));\n\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      // do nothing, if app side handles wheel itself\n      if (requestedEvents.wheel) return;\n\n      if (!this.buffer.hasScrollback) {\n        // Convert wheel events into up/down events when the buffer does not have scrollback, this\n        // enables scrolling in apps hosted in the alt buffer such as vim or tmux.\n        const amount = this.viewport!.getLinesScrolled(ev);\n\n        // Do nothing if there's no vertical scroll\n        if (amount === 0) {\n          return;\n        }\n\n        // Construct and send sequences\n        const sequence = C0.ESC + (this.coreService.decPrivateModes.applicationCursorKeys ? 'O' : '[') + (ev.deltaY < 0 ? 'A' : 'B');\n        let data = '';\n        for (let i = 0; i < Math.abs(amount); i++) {\n          data += sequence;\n        }\n        this.coreService.triggerDataEvent(data, true);\n        return this.cancel(ev, true);\n      }\n\n      // normal viewport scrolling\n      // conditionally stop event, if the viewport still had rows to scroll within\n      if (this.viewport!.onWheel(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n\n    this.register(addDisposableDomListener(el, 'touchstart', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      this.viewport!.onTouchStart(ev);\n      return this.cancel(ev);\n    }, { passive: true }));\n\n    this.register(addDisposableDomListener(el, 'touchmove', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      if (!this.viewport!.onTouchMove(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n  }\n\n\n  /**\n   * Tells the renderer to refresh terminal content between two rows (inclusive) at the next\n   * opportunity.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  public refresh(start: number, end: number): void {\n    this._renderService?.refreshRows(start, end);\n  }\n\n  /**\n   * Queues linkification for the specified rows.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  private _queueLinkification(start: number, end: number): void {\n    this.linkifier?.linkifyRows(start, end);\n  }\n\n  /**\n   * Change the cursor style for different selection modes\n   */\n  public updateCursorStyle(ev: KeyboardEvent): void {\n    if (this._selectionService?.shouldColumnSelect(ev)) {\n      this.element!.classList.add('column-select');\n    } else {\n      this.element!.classList.remove('column-select');\n    }\n  }\n\n  /**\n   * Display the cursor element\n   */\n  private _showCursor(): void {\n    if (!this.coreService.isCursorInitialized) {\n      this.coreService.isCursorInitialized = true;\n      this.refresh(this.buffer.y, this.buffer.y);\n    }\n  }\n\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source = ScrollSource.TERMINAL): void {\n    super.scrollLines(disp, suppressScrollEvent, source);\n    this.refresh(0, this.rows - 1);\n  }\n\n  public paste(data: string): void {\n    paste(data, this.textarea!, this.coreService);\n  }\n\n  /**\n   * Attaches a custom key event handler which is run before keys are processed,\n   * giving consumers of xterm.js ultimate control as to what keys should be\n   * processed by the terminal and what keys should not.\n   * @param customKeyEventHandler The custom KeyboardEvent handler to attach.\n   * This is a function that takes a KeyboardEvent, allowing consumers to stop\n   * propagation and/or prevent the default action. The function returns whether\n   * the event should be processed by xterm.js.\n   */\n  public attachCustomKeyEventHandler(customKeyEventHandler: CustomKeyEventHandler): void {\n    this._customKeyEventHandler = customKeyEventHandler;\n  }\n\n  /**\n   * Registers a link matcher, allowing custom link patterns to be matched and\n   * handled.\n   * @param regex The regular expression to search for, specifically\n   * this searches the textContent of the rows. You will want to use \\s to match\n   * a space ' ' character for example.\n   * @param handler The callback when the link is called.\n   * @param options Options for the link matcher.\n   * @return The ID of the new matcher, this can be used to deregister.\n   */\n  public registerLinkMatcher(regex: RegExp, handler: LinkMatcherHandler, options?: ILinkMatcherOptions): number {\n    const matcherId = this.linkifier.registerLinkMatcher(regex, handler, options);\n    this.refresh(0, this.rows - 1);\n    return matcherId;\n  }\n\n  /**\n   * Deregisters a link matcher if it has been registered.\n   * @param matcherId The link matcher's ID (returned after register)\n   */\n  public deregisterLinkMatcher(matcherId: number): void {\n    if (this.linkifier.deregisterLinkMatcher(matcherId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this.linkifier2.registerLinkProvider(linkProvider);\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    const joinerId = this._characterJoinerService.register(handler);\n    this.refresh(0, this.rows - 1);\n    return joinerId;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): void {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    if (this._characterJoinerService.deregister(joinerId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public get markers(): IMarker[] {\n    return this.buffer.markers;\n  }\n\n  public addMarker(cursorYOffset: number): IMarker | undefined {\n    // Disallow markers on the alt buffer\n    if (this.buffer !== this.buffers.normal) {\n      return;\n    }\n\n    return this.buffer.addMarker(this.buffer.ybase + this.buffer.y + cursorYOffset);\n  }\n\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    return this.decorationService!.registerDecoration(decorationOptions);\n  }\n\n  /**\n   * Gets whether the terminal has an active selection.\n   */\n  public hasSelection(): boolean {\n    return this._selectionService ? this._selectionService.hasSelection : false;\n  }\n\n  /**\n   * Selects text within the terminal.\n   * @param column The column the selection starts at..\n   * @param row The row the selection starts at.\n   * @param length The length of the selection.\n   */\n  public select(column: number, row: number, length: number): void {\n    this._selectionService!.setSelection(column, row, length);\n  }\n\n  /**\n   * Gets the terminal's current selection, this is useful for implementing copy\n   * behavior outside of xterm.js.\n   */\n  public getSelection(): string {\n    return this._selectionService ? this._selectionService.selectionText : '';\n  }\n\n  public getSelectionPosition(): ISelectionPosition | undefined {\n    if (!this._selectionService || !this._selectionService.hasSelection) {\n      return undefined;\n    }\n\n    return {\n      startColumn: this._selectionService.selectionStart![0],\n      startRow: this._selectionService.selectionStart![1],\n      endColumn: this._selectionService.selectionEnd![0],\n      endRow: this._selectionService.selectionEnd![1]\n    };\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._selectionService?.clearSelection();\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._selectionService?.selectAll();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._selectionService?.selectLines(start, end);\n  }\n\n  /**\n   * Handle a keydown event\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keydown event to be handled.\n   */\n  protected _keyDown(event: KeyboardEvent): boolean | undefined {\n    this._keyDownHandled = false;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(event) === false) {\n      return false;\n    }\n\n    if (!this._compositionHelper!.keydown(event)) {\n      if (this.buffer.ybase !== this.buffer.ydisp) {\n        this._bufferService.scrollToBottom();\n      }\n      return false;\n    }\n\n    if (event.key === 'Dead' || event.key === 'AltGraph') {\n      this._unprocessedDeadKey = true;\n    }\n\n    const result = evaluateKeyboardEvent(event, this.coreService.decPrivateModes.applicationCursorKeys, this.browser.isMac, this.options.macOptionIsMeta);\n\n    this.updateCursorStyle(event);\n\n    if (result.type === KeyboardResultType.PAGE_DOWN || result.type === KeyboardResultType.PAGE_UP) {\n      const scrollCount = this.rows - 1;\n      this.scrollLines(result.type === KeyboardResultType.PAGE_UP ? -scrollCount : scrollCount);\n      return this.cancel(event, true);\n    }\n\n    if (result.type === KeyboardResultType.SELECT_ALL) {\n      this.selectAll();\n    }\n\n    if (this._isThirdLevelShift(this.browser, event)) {\n      return true;\n    }\n\n    if (result.cancel) {\n      // The event is canceled at the end already, is this necessary?\n      this.cancel(event, true);\n    }\n\n    if (!result.key) {\n      return true;\n    }\n\n    if (this._unprocessedDeadKey) {\n      this._unprocessedDeadKey = false;\n      return true;\n    }\n\n    // If ctrl+c or enter is being sent, clear out the textarea. This is done so that screen readers\n    // will announce deleted characters. This will not work 100% of the time but it should cover\n    // most scenarios.\n    if (result.key === C0.ETX || result.key === C0.CR) {\n      this.textarea!.value = '';\n    }\n\n    this._onKey.fire({ key: result.key, domEvent: event });\n    this._showCursor();\n    this.coreService.triggerDataEvent(result.key, true);\n\n    // Cancel events when not in screen reader mode so events don't get bubbled up and handled by\n    // other listeners. When screen reader mode is enabled, this could cause issues if the event\n    // is handled at a higher level, this is a compromise in order to echo keys to the screen\n    // reader.\n    if (!this.optionsService.rawOptions.screenReaderMode) {\n      return this.cancel(event, true);\n    }\n\n    this._keyDownHandled = true;\n  }\n\n  private _isThirdLevelShift(browser: IBrowser, ev: KeyboardEvent): boolean {\n    const thirdLevelKey =\n      (browser.isMac && !this.options.macOptionIsMeta && ev.altKey && !ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.altKey && ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.getModifierState('AltGraph'));\n\n    if (ev.type === 'keypress') {\n      return thirdLevelKey;\n    }\n\n    // Don't invoke for arrows, pageDown, home, backspace, etc. (on non-keypress events)\n    return thirdLevelKey && (!ev.keyCode || ev.keyCode > 47);\n  }\n\n  protected _keyUp(ev: KeyboardEvent): void {\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return;\n    }\n\n    if (!wasModifierKeyOnlyEvent(ev)) {\n      this.focus();\n    }\n\n    this.updateCursorStyle(ev);\n    this._keyPressHandled = false;\n  }\n\n  /**\n   * Handle a keypress event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keypress event to be handled.\n   */\n  protected _keyPress(ev: KeyboardEvent): boolean {\n    let key;\n\n    this._keyPressHandled = false;\n\n    if (this._keyDownHandled) {\n      return false;\n    }\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return false;\n    }\n\n    this.cancel(ev);\n\n    if (ev.charCode) {\n      key = ev.charCode;\n    } else if (ev.which === null || ev.which === undefined) {\n      key = ev.keyCode;\n    } else if (ev.which !== 0 && ev.charCode !== 0) {\n      key = ev.which;\n    } else {\n      return false;\n    }\n\n    if (!key || (\n      (ev.altKey || ev.ctrlKey || ev.metaKey) && !this._isThirdLevelShift(this.browser, ev)\n    )) {\n      return false;\n    }\n\n    key = String.fromCharCode(key);\n\n    this._onKey.fire({ key, domEvent: ev });\n    this._showCursor();\n    this.coreService.triggerDataEvent(key, true);\n\n    this._keyPressHandled = true;\n\n    // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n    // keys could be ignored\n    this._unprocessedDeadKey = false;\n\n    return true;\n  }\n\n  /**\n   * Handle an input event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/Web/API/InputEvent\n   * @param ev The input event to be handled.\n   */\n  protected _inputEvent(ev: InputEvent): boolean {\n    // Only support emoji IMEs when screen reader mode is disabled as the event must bubble up to\n    // support reading out character input which can doubling up input characters\n    if (ev.data && ev.inputType === 'insertText' && !ev.composed && !this.optionsService.rawOptions.screenReaderMode) {\n      if (this._keyPressHandled) {\n        return false;\n      }\n\n      // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n      // keys could be ignored\n      this._unprocessedDeadKey = false;\n\n      const text = ev.data;\n      this.coreService.triggerDataEvent(text, true);\n\n      this.cancel(ev);\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Ring the bell.\n   * Note: We could do sweet things with webaudio here\n   */\n  public bell(): void {\n    if (this._soundBell()) {\n      this._soundService?.playBellSound();\n    }\n\n    this._onBell.fire();\n\n    // if (this._visualBell()) {\n    //   this.element.classList.add('visual-bell-active');\n    //   clearTimeout(this._visualBellTimer);\n    //   this._visualBellTimer = window.setTimeout(() => {\n    //     this.element.classList.remove('visual-bell-active');\n    //   }, 200);\n    // }\n  }\n\n  /**\n   * Resizes the terminal.\n   *\n   * @param x The number of columns to resize to.\n   * @param y The number of rows to resize to.\n   */\n  public resize(x: number, y: number): void {\n    if (x === this.cols && y === this.rows) {\n      // Check if we still need to measure the char size (fixes #785).\n      if (this._charSizeService && !this._charSizeService.hasValidSize) {\n        this._charSizeService.measure();\n      }\n      return;\n    }\n\n    super.resize(x, y);\n  }\n\n  private _afterResize(x: number, y: number): void {\n    this._charSizeService?.measure();\n\n    // Sync the scroll area to make sure scroll events don't fire and scroll the viewport to an\n    // invalid location\n    this.viewport?.syncScrollArea(true);\n  }\n\n  /**\n   * Clear the entire buffer, making the prompt line the new first line.\n   */\n  public clear(): void {\n    if (this.buffer.ybase === 0 && this.buffer.y === 0) {\n      // Don't clear if it's already clear\n      return;\n    }\n    this.buffer.clearMarkers();\n    this.buffer.lines.set(0, this.buffer.lines.get(this.buffer.ybase + this.buffer.y)!);\n    this.buffer.lines.length = 1;\n    this.buffer.ydisp = 0;\n    this.buffer.ybase = 0;\n    this.buffer.y = 0;\n    for (let i = 1; i < this.rows; i++) {\n      this.buffer.lines.push(this.buffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this.refresh(0, this.rows - 1);\n    this._onScroll.fire({ position: this.buffer.ydisp, source: ScrollSource.TERMINAL });\n  }\n\n  /**\n   * Reset terminal.\n   * Note: Calling this directly from JS is synchronous but does not clear\n   * input buffers and does not reset the parser, thus the terminal will\n   * continue to apply pending input data.\n   * If you need in band reset (synchronous with input data) consider\n   * using DECSTR (soft reset, CSI ! p) or RIS instead (hard reset, ESC c).\n   */\n  public reset(): void {\n    /**\n     * Since _setup handles a full terminal creation, we have to carry forward\n     * a few things that should not reset.\n     */\n    this.options.rows = this.rows;\n    this.options.cols = this.cols;\n    const customKeyEventHandler = this._customKeyEventHandler;\n\n    this._setup();\n    super.reset();\n    this._selectionService?.reset();\n\n    // reattach\n    this._customKeyEventHandler = customKeyEventHandler;\n\n    // do a full screen refresh\n    this.refresh(0, this.rows - 1);\n    this.viewport?.syncScrollArea();\n  }\n\n  public clearTextureAtlas(): void {\n    this._renderService?.clearTextureAtlas();\n  }\n\n  private _reportFocus(): void {\n    if (this.element?.classList.contains('focus')) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    } else {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n  }\n\n  private _reportWindowsOptions(type: WindowsOptionsReportType): void {\n    if (!this._renderService) {\n      return;\n    }\n\n    switch (type) {\n      case WindowsOptionsReportType.GET_WIN_SIZE_PIXELS:\n        const canvasWidth = this._renderService.dimensions.scaledCanvasWidth.toFixed(0);\n        const canvasHeight = this._renderService.dimensions.scaledCanvasHeight.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[4;${canvasHeight};${canvasWidth}t`);\n        break;\n      case WindowsOptionsReportType.GET_CELL_SIZE_PIXELS:\n        const cellWidth = this._renderService.dimensions.scaledCellWidth.toFixed(0);\n        const cellHeight = this._renderService.dimensions.scaledCellHeight.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[6;${cellHeight};${cellWidth}t`);\n        break;\n    }\n  }\n\n  // TODO: Remove cancel function and cancelEvents option\n  public cancel(ev: Event, force?: boolean): boolean | undefined {\n    if (!this.options.cancelEvents && !force) {\n      return;\n    }\n    ev.preventDefault();\n    ev.stopPropagation();\n    return false;\n  }\n\n  private _visualBell(): boolean {\n    return false;\n    // return this.options.bellStyle === 'visual' ||\n    //     this.options.bellStyle === 'both';\n  }\n\n  private _soundBell(): boolean {\n    return this.options.bellStyle === 'sound';\n    // return this.options.bellStyle === 'sound' ||\n    //     this.options.bellStyle === 'both';\n  }\n}\n\n/**\n * Helpers\n */\n\nfunction wasModifierKeyOnlyEvent(ev: KeyboardEvent): boolean {\n  return ev.keyCode === 16 || // Shift\n    ev.keyCode === 17 || // Ctrl\n    ev.keyCode === 18; // Alt\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nconst RENDER_DEBOUNCE_THRESHOLD_MS = 1000; // 1 Second\n\nimport { IRenderDebouncer } from 'browser/Types';\n\n/**\n * Debounces calls to update screen readers to update at most once configurable interval of time.\n */\nexport class TimeBasedDebouncer implements IRenderDebouncer {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n\n  // The last moment that the Terminal was refreshed at\n  private _lastRefreshMs = 0;\n  // Whether a trailing refresh should be triggered due to a refresh request that was throttled\n  private _additionalRefreshRequested = false;\n\n  private _refreshTimeoutID: number | undefined;\n\n  constructor(\n    private _renderCallback: (start: number, end: number) => void,\n    private readonly _debounceThresholdMS = RENDER_DEBOUNCE_THRESHOLD_MS\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._refreshTimeoutID) {\n      clearTimeout(this._refreshTimeoutID);\n    }\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    // Only refresh if the time since last refresh is above a threshold, otherwise wait for\n    // enough time to pass before refreshing again.\n    const refreshRequestTime: number = Date.now();\n    if (refreshRequestTime - this._lastRefreshMs >= this._debounceThresholdMS) {\n      // Enough time has lapsed since the last refresh; refresh immediately\n      this._lastRefreshMs = refreshRequestTime;\n      this._innerRefresh();\n    } else if (!this._additionalRefreshRequested) {\n      // This is the first additional request throttled; set up trailing refresh\n      const elapsed = refreshRequestTime - this._lastRefreshMs;\n      const waitPeriodBeforeTrailingRefresh = this._debounceThresholdMS - elapsed;\n      this._additionalRefreshRequested = true;\n\n      this._refreshTimeoutID = window.setTimeout(() => {\n        this._lastRefreshMs = Date.now();\n        this._innerRefresh();\n        this._additionalRefreshRequested = false;\n        this._refreshTimeoutID = undefined; // No longer need to clear the timeout\n      }, waitPeriodBeforeTrailingRefresh);\n    }\n  }\n\n  private _innerRefresh(): void {\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n  }\n}\n\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet, IViewport } from 'browser/Types';\nimport { ICharSizeService, IRenderService } from 'browser/services/Services';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IRenderDimensions } from 'browser/renderer/Types';\n\nconst FALLBACK_SCROLL_BAR_WIDTH = 15;\n\n/**\n * Represents the viewport of a terminal, the visible area within the larger buffer of output.\n * Logic for the virtual scroll bar is included in this object.\n */\nexport class Viewport extends Disposable implements IViewport {\n  public scrollBarWidth: number = 0;\n  private _currentRowHeight: number = 0;\n  private _currentScaledCellHeight: number = 0;\n  private _lastRecordedBufferLength: number = 0;\n  private _lastRecordedViewportHeight: number = 0;\n  private _lastRecordedBufferHeight: number = 0;\n  private _lastTouchY: number = 0;\n  private _lastScrollTop: number = 0;\n  private _lastHadScrollBar: boolean = false;\n  private _activeBuffer: IBuffer;\n  private _renderDimensions: IRenderDimensions;\n\n  // Stores a partial line amount when scrolling, this is used to keep track of how much of a line\n  // is scrolled so we can \"scroll\" over partial lines and feel natural on touchpads. This is a\n  // quick fix and could have a more robust solution in place that reset the value when needed.\n  private _wheelPartialScroll: number = 0;\n\n  private _refreshAnimationFrame: number | null = null;\n  private _ignoreNextScrollEvent: boolean = false;\n\n  constructor(\n    private readonly _scrollLines: (amount: number) => void,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _scrollArea: HTMLElement,\n    private readonly _element: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    // Measure the width of the scrollbar. If it is 0 we can assume it's an OSX overlay scrollbar.\n    // Unfortunately the overlay scrollbar would be hidden underneath the screen element in that case,\n    // therefore we account for a standard amount to make it visible\n    this.scrollBarWidth = (this._viewportElement.offsetWidth - this._scrollArea.offsetWidth) || FALLBACK_SCROLL_BAR_WIDTH;\n    this._lastHadScrollBar = true;\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', this._onScroll.bind(this)));\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n    this._renderDimensions = this._renderService.dimensions;\n    this.register(this._renderService.onDimensionsChange(e => this._renderDimensions = e));\n\n    // Perform this async to ensure the ICharSizeService is ready.\n    setTimeout(() => this.syncScrollArea(), 0);\n  }\n\n  public onThemeChange(colors: IColorSet): void {\n    this._viewportElement.style.backgroundColor = colors.background.css;\n  }\n\n  /**\n   * Refreshes row height, setting line-height, viewport height and scroll area height if\n   * necessary.\n   */\n  private _refresh(immediate: boolean): void {\n    if (immediate) {\n      this._innerRefresh();\n      if (this._refreshAnimationFrame !== null) {\n        cancelAnimationFrame(this._refreshAnimationFrame);\n      }\n      return;\n    }\n    if (this._refreshAnimationFrame === null) {\n      this._refreshAnimationFrame = requestAnimationFrame(() => this._innerRefresh());\n    }\n  }\n\n  private _innerRefresh(): void {\n    if (this._charSizeService.height > 0) {\n      this._currentRowHeight = this._renderService.dimensions.scaledCellHeight / window.devicePixelRatio;\n      this._currentScaledCellHeight = this._renderService.dimensions.scaledCellHeight;\n      this._lastRecordedViewportHeight = this._viewportElement.offsetHeight;\n      const newBufferHeight = Math.round(this._currentRowHeight * this._lastRecordedBufferLength) + (this._lastRecordedViewportHeight - this._renderService.dimensions.canvasHeight);\n      if (this._lastRecordedBufferHeight !== newBufferHeight) {\n        this._lastRecordedBufferHeight = newBufferHeight;\n        this._scrollArea.style.height = this._lastRecordedBufferHeight + 'px';\n      }\n    }\n\n    // Sync scrollTop\n    const scrollTop = this._bufferService.buffer.ydisp * this._currentRowHeight;\n    if (this._viewportElement.scrollTop !== scrollTop) {\n      // Ignore the next scroll event which will be triggered by setting the scrollTop as we do not\n      // want this event to scroll the terminal\n      this._ignoreNextScrollEvent = true;\n      this._viewportElement.scrollTop = scrollTop;\n    }\n\n    // Update scroll bar width\n    if (this._optionsService.rawOptions.scrollback === 0) {\n      this.scrollBarWidth = 0;\n    } else {\n      this.scrollBarWidth = (this._viewportElement.offsetWidth - this._scrollArea.offsetWidth) || FALLBACK_SCROLL_BAR_WIDTH;\n    }\n    this._lastHadScrollBar = this.scrollBarWidth > 0;\n\n    const elementStyle = window.getComputedStyle(this._element);\n    const elementPadding = parseInt(elementStyle.paddingLeft) + parseInt(elementStyle.paddingRight);\n    this._viewportElement.style.width = (this._renderService.dimensions.actualCellWidth * (this._bufferService.cols) + this.scrollBarWidth + (this._lastHadScrollBar ? elementPadding : 0)).toString() + 'px';\n    this._refreshAnimationFrame = null;\n  }\n\n  /**\n   * Updates dimensions and synchronizes the scroll area if necessary.\n   */\n  public syncScrollArea(immediate: boolean = false): void {\n    // If buffer height changed\n    if (this._lastRecordedBufferLength !== this._bufferService.buffer.lines.length) {\n      this._lastRecordedBufferLength = this._bufferService.buffer.lines.length;\n      this._refresh(immediate);\n      return;\n    }\n\n    // If viewport height changed\n    if (this._lastRecordedViewportHeight !== this._renderService.dimensions.canvasHeight) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If the buffer position doesn't match last scroll top\n    if (this._lastScrollTop !== this._activeBuffer.ydisp * this._currentRowHeight) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If row height changed\n    if (this._renderDimensions.scaledCellHeight !== this._currentScaledCellHeight) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If the scroll bar visibility changed\n    if (this._lastHadScrollBar !== (this._optionsService.rawOptions.scrollback > 0)) {\n      this._refresh(immediate);\n    }\n  }\n\n  /**\n   * Handles scroll events on the viewport, calculating the new viewport and requesting the\n   * terminal to scroll to it.\n   * @param ev The scroll event.\n   */\n  private _onScroll(ev: Event): void {\n    // Record current scroll top position\n    this._lastScrollTop = this._viewportElement.scrollTop;\n\n    // Don't attempt to scroll if the element is not visible, otherwise scrollTop will be corrupt\n    // which causes the terminal to scroll the buffer to the top\n    if (!this._viewportElement.offsetParent) {\n      return;\n    }\n\n    // Ignore the event if it was flagged to ignore (when the source of the event is from Viewport)\n    if (this._ignoreNextScrollEvent) {\n      this._ignoreNextScrollEvent = false;\n      // Still trigger the scroll so lines get refreshed\n      this._scrollLines(0);\n      return;\n    }\n\n    const newRow = Math.round(this._lastScrollTop / this._currentRowHeight);\n    const diff = newRow - this._bufferService.buffer.ydisp;\n    this._scrollLines(diff);\n  }\n\n  /**\n   * Handles bubbling of scroll event in case the viewport has reached top or bottom\n   * @param ev The scroll event.\n   * @param amount The amount scrolled\n   */\n  private _bubbleScroll(ev: Event, amount: number): boolean {\n    const scrollPosFromTop = this._viewportElement.scrollTop + this._lastRecordedViewportHeight;\n    if ((amount < 0 && this._viewportElement.scrollTop !== 0) ||\n      (amount > 0 && scrollPosFromTop < this._lastRecordedBufferHeight)) {\n      if (ev.cancelable) {\n        ev.preventDefault();\n      }\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handles mouse wheel events by adjusting the viewport's scrollTop and delegating the actual\n   * scrolling to `onScroll`, this event needs to be attached manually by the consumer of\n   * `Viewport`.\n   * @param ev The mouse wheel event.\n   */\n  public onWheel(ev: WheelEvent): boolean {\n    const amount = this._getPixelsScrolled(ev);\n    if (amount === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += amount;\n    return this._bubbleScroll(ev, amount);\n  }\n\n  private _getPixelsScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_PIXEL\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      amount *= this._currentRowHeight;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._currentRowHeight * this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  /**\n   * Gets the number of pixels scrolled by the mouse event taking into account what type of delta\n   * is being used.\n   * @param ev The mouse wheel event.\n   */\n  public getLinesScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_LINE\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      amount /= this._currentRowHeight + 0.0; // Prevent integer division\n      this._wheelPartialScroll += amount;\n      amount = Math.floor(Math.abs(this._wheelPartialScroll)) * (this._wheelPartialScroll > 0 ? 1 : -1);\n      this._wheelPartialScroll %= 1;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  private _applyScrollModifier(amount: number, ev: WheelEvent): number {\n    const modifier = this._optionsService.rawOptions.fastScrollModifier;\n    // Multiply the scroll speed when the modifier is down\n    if ((modifier === 'alt' && ev.altKey) ||\n      (modifier === 'ctrl' && ev.ctrlKey) ||\n      (modifier === 'shift' && ev.shiftKey)) {\n      return amount * this._optionsService.rawOptions.fastScrollSensitivity * this._optionsService.rawOptions.scrollSensitivity;\n    }\n\n    return amount * this._optionsService.rawOptions.scrollSensitivity;\n  }\n\n  /**\n   * Handles the touchstart event, recording the touch occurred.\n   * @param ev The touch event.\n   */\n  public onTouchStart(ev: TouchEvent): void {\n    this._lastTouchY = ev.touches[0].pageY;\n  }\n\n  /**\n   * Handles the touchmove event, scrolling the viewport if the position shifted.\n   * @param ev The touch event.\n   */\n  public onTouchMove(ev: TouchEvent): boolean {\n    const deltaY = this._lastTouchY - ev.touches[0].pageY;\n    this._lastTouchY = ev.touches[0].pageY;\n    if (deltaY === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += deltaY;\n    return this._bubbleScroll(ev, deltaY);\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderService } from 'browser/services/Services';\nimport { IBufferService, ICoreService, IOptionsService } from 'common/services/Services';\n\ninterface IPosition {\n  start: number;\n  end: number;\n}\n\n/**\n * Encapsulates the logic for handling compositionstart, compositionupdate and compositionend\n * events, displaying the in-progress composition to the UI and forwarding the final composition\n * to the handler.\n */\nexport class CompositionHelper {\n  /**\n   * Whether input composition is currently happening, eg. via a mobile keyboard, speech input or\n   * IME. This variable determines whether the compositionText should be displayed on the UI.\n   */\n  private _isComposing: boolean;\n  public get isComposing(): boolean { return this._isComposing; }\n\n  /**\n   * The position within the input textarea's value of the current composition.\n   */\n  private _compositionPosition: IPosition;\n\n  /**\n   * Whether a composition is in the process of being sent, setting this to false will cancel any\n   * in-progress composition.\n   */\n  private _isSendingComposition: boolean;\n\n  /**\n   * Data already sent due to keydown event.\n   */\n  private _dataAlreadySent: string;\n\n  constructor(\n    private readonly _textarea: HTMLTextAreaElement,\n    private readonly _compositionView: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    this._isComposing = false;\n    this._isSendingComposition = false;\n    this._compositionPosition = { start: 0, end: 0 };\n    this._dataAlreadySent = '';\n  }\n\n  /**\n   * Handles the compositionstart event, activating the composition view.\n   */\n  public compositionstart(): void {\n    this._isComposing = true;\n    this._compositionPosition.start = this._textarea.value.length;\n    this._compositionView.textContent = '';\n    this._dataAlreadySent = '';\n    this._compositionView.classList.add('active');\n  }\n\n  /**\n   * Handles the compositionupdate event, updating the composition view.\n   * @param ev The event.\n   */\n  public compositionupdate(ev: Pick<CompositionEvent, 'data'>): void {\n    this._compositionView.textContent = ev.data;\n    this.updateCompositionElements();\n    setTimeout(() => {\n      this._compositionPosition.end = this._textarea.value.length;\n    }, 0);\n  }\n\n  /**\n   * Handles the compositionend event, hiding the composition view and sending the composition to\n   * the handler.\n   */\n  public compositionend(): void {\n    this._finalizeComposition(true);\n  }\n\n  /**\n   * Handles the keydown event, routing any necessary events to the CompositionHelper functions.\n   * @param ev The keydown event.\n   * @return Whether the Terminal should continue processing the keydown event.\n   */\n  public keydown(ev: KeyboardEvent): boolean {\n    if (this._isComposing || this._isSendingComposition) {\n      if (ev.keyCode === 229) {\n        // Continue composing if the keyCode is the \"composition character\"\n        return false;\n      }\n      if (ev.keyCode === 16 || ev.keyCode === 17 || ev.keyCode === 18) {\n        // Continue composing if the keyCode is a modifier key\n        return false;\n      }\n      // Finish composition immediately. This is mainly here for the case where enter is\n      // pressed and the handler needs to be triggered before the command is executed.\n      this._finalizeComposition(false);\n    }\n\n    if (ev.keyCode === 229) {\n      // If the \"composition character\" is used but gets to this point it means a non-composition\n      // character (eg. numbers and punctuation) was pressed when the IME was active.\n      this._handleAnyTextareaChanges();\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Finalizes the composition, resuming regular input actions. This is called when a composition\n   * is ending.\n   * @param waitForPropagation Whether to wait for events to propagate before sending\n   *   the input. This should be false if a non-composition keystroke is entered before the\n   *   compositionend event is triggered, such as enter, so that the composition is sent before\n   *   the command is executed.\n   */\n  private _finalizeComposition(waitForPropagation: boolean): void {\n    this._compositionView.classList.remove('active');\n    this._isComposing = false;\n\n    if (!waitForPropagation) {\n      // Cancel any delayed composition send requests and send the input immediately.\n      this._isSendingComposition = false;\n      const input = this._textarea.value.substring(this._compositionPosition.start, this._compositionPosition.end);\n      this._coreService.triggerDataEvent(input, true);\n    } else {\n      // Make a deep copy of the composition position here as a new compositionstart event may\n      // fire before the setTimeout executes.\n      const currentCompositionPosition = {\n        start: this._compositionPosition.start,\n        end: this._compositionPosition.end\n      };\n\n      // Since composition* events happen before the changes take place in the textarea on most\n      // browsers, use a setTimeout with 0ms time to allow the native compositionend event to\n      // complete. This ensures the correct character is retrieved.\n      // This solution was used because:\n      // - The compositionend event's data property is unreliable, at least on Chromium\n      // - The last compositionupdate event's data property does not always accurately describe\n      //   the character, a counter example being Korean where an ending consonsant can move to\n      //   the following character if the following input is a vowel.\n      this._isSendingComposition = true;\n      setTimeout(() => {\n        // Ensure that the input has not already been sent\n        if (this._isSendingComposition) {\n          this._isSendingComposition = false;\n          let input;\n          // Add length of data already sent due to keydown event,\n          // otherwise input characters can be duplicated. (Issue #3191)\n          currentCompositionPosition.start += this._dataAlreadySent.length;\n          if (this._isComposing) {\n            // Use the end position to get the string if a new composition has started.\n            input = this._textarea.value.substring(currentCompositionPosition.start, currentCompositionPosition.end);\n          } else {\n            // Don't use the end position here in order to pick up any characters after the\n            // composition has finished, for example when typing a non-composition character\n            // (eg. 2) after a composition character.\n            input = this._textarea.value.substring(currentCompositionPosition.start);\n          }\n          if (input.length > 0) {\n            this._coreService.triggerDataEvent(input, true);\n          }\n        }\n      }, 0);\n    }\n  }\n\n  /**\n   * Apply any changes made to the textarea after the current event chain is allowed to complete.\n   * This should be called when not currently composing but a keydown event with the \"composition\n   * character\" (229) is triggered, in order to allow non-composition text to be entered when an\n   * IME is active.\n   */\n  private _handleAnyTextareaChanges(): void {\n    const oldValue = this._textarea.value;\n    setTimeout(() => {\n      // Ignore if a composition has started since the timeout\n      if (!this._isComposing) {\n        const newValue = this._textarea.value;\n        const diff = newValue.replace(oldValue, '');\n        if (diff.length > 0) {\n          this._dataAlreadySent = diff;\n          this._coreService.triggerDataEvent(diff, true);\n        }\n      }\n    }, 0);\n  }\n\n  /**\n   * Positions the composition view on top of the cursor and the textarea just below it (so the\n   * IME helper dialog is positioned correctly).\n   * @param dontRecurse Whether to use setTimeout to recursively trigger another update, this is\n   *   necessary as the IME events across browsers are not consistently triggered.\n   */\n  public updateCompositionElements(dontRecurse?: boolean): void {\n    if (!this._isComposing) {\n      return;\n    }\n\n    if (this._bufferService.buffer.isCursorInViewport) {\n      const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n\n      const cellHeight = this._renderService.dimensions.actualCellHeight;\n      const cursorTop = this._bufferService.buffer.y * this._renderService.dimensions.actualCellHeight;\n      const cursorLeft = cursorX * this._renderService.dimensions.actualCellWidth;\n\n      this._compositionView.style.left = cursorLeft + 'px';\n      this._compositionView.style.top = cursorTop + 'px';\n      this._compositionView.style.height = cellHeight + 'px';\n      this._compositionView.style.lineHeight = cellHeight + 'px';\n      this._compositionView.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n      this._compositionView.style.fontSize = this._optionsService.rawOptions.fontSize + 'px';\n      // Sync the textarea to the exact position of the composition view so the IME knows where the\n      // text is.\n      const compositionViewBounds = this._compositionView.getBoundingClientRect();\n      this._textarea.style.left = cursorLeft + 'px';\n      this._textarea.style.top = cursorTop + 'px';\n      // Ensure the text area is at least 1x1, otherwise certain IMEs may break\n      this._textarea.style.width = Math.max(compositionViewBounds.width, 1) + 'px';\n      this._textarea.style.height = Math.max(compositionViewBounds.height, 1) + 'px';\n      this._textarea.style.lineHeight = compositionViewBounds.height + 'px';\n    }\n\n    if (!dontRecurse) {\n      setTimeout(() => this.updateCompositionElements(true), 0);\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function getCoordsRelativeToElement(event: {clientX: number, clientY: number}, element: HTMLElement): [number, number] {\n  const rect = element.getBoundingClientRect();\n  return [event.clientX - rect.left, event.clientY - rect.top];\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event. The result\n * is returned as an array in the form [x, y] instead of an object as it's a\n * little faster and this function is used in some low level code.\n * @param event The mouse event.\n * @param element The terminal's container element.\n * @param colCount The number of columns in the terminal.\n * @param rowCount The number of rows n the terminal.\n * @param isSelection Whether the request is for the selection or not. This will\n * apply an offset to the x value such that the left half of the cell will\n * select that cell and the right half will select the next cell.\n */\nexport function getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, hasValidCharSize: boolean, actualCellWidth: number, actualCellHeight: number, isSelection?: boolean): [number, number] | undefined {\n  // Coordinates cannot be measured if there are no valid\n  if (!hasValidCharSize) {\n    return undefined;\n  }\n\n  const coords = getCoordsRelativeToElement(event, element);\n  if (!coords) {\n    return undefined;\n  }\n\n  coords[0] = Math.ceil((coords[0] + (isSelection ? actualCellWidth / 2 : 0)) / actualCellWidth);\n  coords[1] = Math.ceil(coords[1] / actualCellHeight);\n\n  // Ensure coordinates are within the terminal viewport. Note that selections\n  // need an addition point of precision to cover the end point (as characters\n  // cover half of one char and half of the next).\n  coords[0] = Math.min(Math.max(coords[0], 1), colCount + (isSelection ? 1 : 0));\n  coords[1] = Math.min(Math.max(coords[1], 1), rowCount);\n\n  return coords;\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event, wrapping\n * them to the bounds of the terminal and adding 32 to both the x and y values\n * as expected by xterm.\n */\nexport function getRawByteCoords(coords: [number, number] | undefined): { x: number, y: number } | undefined {\n  if (!coords) {\n    return undefined;\n  }\n\n  // xterm sends raw bytes and starts at 32 (SP) for each.\n  return { x: coords[0] + 32, y: coords[1] + 32 };\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { C0 } from 'common/data/EscapeSequences';\nimport { IBufferService } from 'common/services/Services';\n\nconst enum Direction {\n  UP = 'A',\n  DOWN = 'B',\n  RIGHT = 'C',\n  LEFT = 'D'\n}\n\n/**\n * Concatenates all the arrow sequences together.\n * Resets the starting row to an unwrapped row, moves to the requested row,\n * then moves to requested col.\n */\nexport function moveToCellSequence(targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startX = bufferService.buffer.x;\n  const startY = bufferService.buffer.y;\n\n  // The alt buffer should try to navigate between rows\n  if (!bufferService.buffer.hasScrollback) {\n    return resetStartingRow(startX, startY, targetX, targetY, bufferService, applicationCursor) +\n      moveToRequestedRow(startY, targetY, bufferService, applicationCursor) +\n      moveToRequestedCol(startX, startY, targetX, targetY, bufferService, applicationCursor);\n  }\n\n  // Only move horizontally for the normal buffer\n  let direction;\n  if (startY === targetY) {\n    direction = startX > targetX ? Direction.LEFT : Direction.RIGHT;\n    return repeat(Math.abs(startX - targetX), sequence(direction, applicationCursor));\n  }\n  direction = startY > targetY ? Direction.LEFT : Direction.RIGHT;\n  const rowDifference = Math.abs(startY - targetY);\n  const cellsToMove = colsFromRowEnd(startY > targetY ? targetX : startX, bufferService) +\n    (rowDifference - 1) * bufferService.cols + 1 /* wrap around 1 row */ +\n    colsFromRowBeginning(startY > targetY ? startX : targetX, bufferService);\n  return repeat(cellsToMove, sequence(direction, applicationCursor));\n}\n\n/**\n * Find the number of cols from a row beginning to a col.\n */\nfunction colsFromRowBeginning(currX: number, bufferService: IBufferService): number {\n  return currX - 1;\n}\n\n/**\n * Find the number of cols from a col to row end.\n */\nfunction colsFromRowEnd(currX: number, bufferService: IBufferService): number {\n  return bufferService.cols - currX;\n}\n\n/**\n * If the initial position of the cursor is on a row that is wrapped, move the\n * cursor up to the first row that is not wrapped to have accurate vertical\n * positioning.\n */\nfunction resetStartingRow(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length === 0) {\n    return '';\n  }\n  return repeat(bufferLine(\n    startX, startY, startX,\n    startY - wrappedRowsForRow(bufferService, startY), false, bufferService\n  ).length, sequence(Direction.LEFT, applicationCursor));\n}\n\n/**\n * Using the reset starting and ending row, move to the requested row,\n * ignoring wrapped rows\n */\nfunction moveToRequestedRow(startY: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startRow = startY - wrappedRowsForRow(bufferService, startY);\n  const endRow = targetY - wrappedRowsForRow(bufferService, targetY);\n\n  const rowsToMove = Math.abs(startRow - endRow) - wrappedRowsCount(startY, targetY, bufferService);\n\n  return repeat(rowsToMove, sequence(verticalDirection(startY, targetY), applicationCursor));\n}\n\n/**\n * Move to the requested col on the ending row\n */\nfunction moveToRequestedCol(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  let startRow;\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(bufferService, targetY);\n  } else {\n    startRow = startY;\n  }\n\n  const endRow = targetY;\n  const direction = horizontalDirection(startX, startY, targetX, targetY, bufferService, applicationCursor);\n\n  return repeat(bufferLine(\n    startX, startRow, targetX, endRow,\n    direction === Direction.RIGHT, bufferService\n  ).length, sequence(direction, applicationCursor));\n}\n\n/**\n * Utility functions\n */\n\n/**\n * Calculates the number of wrapped rows between the unwrapped starting and\n * ending rows. These rows need to ignored since the cursor skips over them.\n */\nfunction wrappedRowsCount(startY: number, targetY: number, bufferService: IBufferService): number {\n  let wrappedRows = 0;\n  const startRow = startY - wrappedRowsForRow(bufferService, startY);\n  const endRow = targetY - wrappedRowsForRow(bufferService, targetY);\n\n  for (let i = 0; i < Math.abs(startRow - endRow); i++) {\n    const direction = verticalDirection(startY, targetY) === Direction.UP ? -1 : 1;\n    const line = bufferService.buffer.lines.get(startRow + (direction * i));\n    if (line?.isWrapped) {\n      wrappedRows++;\n    }\n  }\n\n  return wrappedRows;\n}\n\n/**\n * Calculates the number of wrapped rows that make up a given row.\n * @param currentRow The row to determine how many wrapped rows make it up\n */\nfunction wrappedRowsForRow(bufferService: IBufferService, currentRow: number): number {\n  let rowCount = 0;\n  let line = bufferService.buffer.lines.get(currentRow);\n  let lineWraps = line?.isWrapped;\n\n  while (lineWraps && currentRow >= 0 && currentRow < bufferService.rows) {\n    rowCount++;\n    line = bufferService.buffer.lines.get(--currentRow);\n    lineWraps = line?.isWrapped;\n  }\n\n  return rowCount;\n}\n\n/**\n * Direction determiners\n */\n\n/**\n * Determines if the right or left arrow is needed\n */\nfunction horizontalDirection(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): Direction {\n  let startRow;\n  if (moveToRequestedRow(targetX, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(bufferService, targetY);\n  } else {\n    startRow = startY;\n  }\n\n  if ((startX < targetX &&\n    startRow <= targetY) || // down/right or same y/right\n    (startX >= targetX &&\n    startRow < targetY)) {  // down/left or same y/left\n    return Direction.RIGHT;\n  }\n  return Direction.LEFT;\n}\n\n/**\n * Determines if the up or down arrow is needed\n */\nfunction verticalDirection(startY: number, targetY: number): Direction {\n  return startY > targetY ? Direction.UP : Direction.DOWN;\n}\n\n/**\n * Constructs the string of chars in the buffer from a starting row and col\n * to an ending row and col\n * @param startCol The starting column position\n * @param startRow The starting row position\n * @param endCol The ending column position\n * @param endRow The ending row position\n * @param forward Direction to move\n */\nfunction bufferLine(\n  startCol: number,\n  startRow: number,\n  endCol: number,\n  endRow: number,\n  forward: boolean,\n  bufferService: IBufferService\n): string {\n  let currentCol = startCol;\n  let currentRow = startRow;\n  let bufferStr = '';\n\n  while (currentCol !== endCol || currentRow !== endRow) {\n    currentCol += forward ? 1 : -1;\n\n    if (forward && currentCol > bufferService.cols - 1) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, startCol, currentCol\n      );\n      currentCol = 0;\n      startCol = 0;\n      currentRow++;\n    } else if (!forward && currentCol < 0) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, 0, startCol + 1\n      );\n      currentCol = bufferService.cols - 1;\n      startCol = currentCol;\n      currentRow--;\n    }\n  }\n\n  return bufferStr + bufferService.buffer.translateBufferLineToString(\n    currentRow, false, startCol, currentCol\n  );\n}\n\n/**\n * Constructs the escape sequence for clicking an arrow\n * @param direction The direction to move\n */\nfunction sequence(direction: Direction, applicationCursor: boolean): string {\n  const mod =  applicationCursor ? 'O' : '[';\n  return C0.ESC + mod + direction;\n}\n\n/**\n * Returns a string repeated a given number of times\n * Polyfill from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\n * @param count The number of times to repeat the string\n * @param string The string that is to be repeated\n */\nfunction repeat(count: number, str: string): string {\n  count = Math.floor(count);\n  let rpt = '';\n  for (let i = 0; i < count; i++) {\n    rpt += str;\n  }\n  return rpt;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal as ITerminalApi, IMarker, IDisposable, ILinkMatcherOptions, ITheme, ILocalizableStrings, ITerminalAddon, ISelectionPosition, IBufferNamespace as IBufferNamespaceApi, IParser, ILinkProvider, IUnicodeHandling, FontWeight, IModes, IDecorationOptions, IDecoration } from 'xterm';\nimport { ITerminal } from 'browser/Types';\nimport { Terminal as TerminalCore } from 'browser/Terminal';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { IEvent } from 'common/EventEmitter';\nimport { ParserApi } from 'common/public/ParserApi';\nimport { UnicodeApi } from 'common/public/UnicodeApi';\nimport { AddonManager } from 'common/public/AddonManager';\nimport { BufferNamespaceApi } from 'common/public/BufferNamespaceApi';\nimport { ITerminalOptions } from 'common/Types';\n\n/**\n * The set of options that only have an effect when set in the Terminal constructor.\n */\nconst CONSTRUCTOR_ONLY_OPTIONS = ['cols', 'rows'];\n\nexport class Terminal implements ITerminalApi {\n  private _core: ITerminal;\n  private _addonManager: AddonManager;\n  private _parser: IParser | undefined;\n  private _buffer: BufferNamespaceApi | undefined;\n  private _publicOptions: ITerminalOptions;\n\n  constructor(options?: ITerminalOptions) {\n    this._core = new TerminalCore(options);\n    this._addonManager = new AddonManager();\n\n    this._publicOptions = { ... this._core.options };\n    const getter = (propName: string): any => {\n      return this._core.options[propName];\n    };\n    const setter = (propName: string, value: any): void => {\n      this._checkReadonlyOptions(propName);\n      this._core.options[propName] = value;\n    };\n\n    for (const propName in this._core.options) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this._publicOptions, propName, desc);\n    }\n  }\n\n  private _checkReadonlyOptions(propName: string): void {\n    // Throw an error if any constructor only option is modified\n    // from terminal.options\n    // Modifications from anywhere else are allowed\n    if (CONSTRUCTOR_ONLY_OPTIONS.includes(propName)) {\n      throw new Error(`Option \"${propName}\" can only be set in the constructor`);\n    }\n  }\n\n  private _checkProposedApi(): void {\n    if (!this._core.optionsService.rawOptions.allowProposedApi) {\n      throw new Error('You must set the allowProposedApi option to true to use proposed API');\n    }\n  }\n\n  public get onBell(): IEvent<void> { return this._core.onBell; }\n  public get onBinary(): IEvent<string> { return this._core.onBinary; }\n  public get onCursorMove(): IEvent<void> { return this._core.onCursorMove; }\n  public get onData(): IEvent<string> { return this._core.onData; }\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._core.onKey; }\n  public get onLineFeed(): IEvent<void> { return this._core.onLineFeed; }\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._core.onRender; }\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._core.onResize; }\n  public get onScroll(): IEvent<number> { return this._core.onScroll; }\n  public get onSelectionChange(): IEvent<void> { return this._core.onSelectionChange; }\n  public get onTitleChange(): IEvent<string> { return this._core.onTitleChange; }\n\n  public get element(): HTMLElement | undefined { return this._core.element; }\n  public get parser(): IParser {\n    this._checkProposedApi();\n    if (!this._parser) {\n      this._parser = new ParserApi(this._core);\n    }\n    return this._parser;\n  }\n  public get unicode(): IUnicodeHandling {\n    this._checkProposedApi();\n    return new UnicodeApi(this._core);\n  }\n  public get textarea(): HTMLTextAreaElement | undefined { return this._core.textarea; }\n  public get rows(): number { return this._core.rows; }\n  public get cols(): number { return this._core.cols; }\n  public get buffer(): IBufferNamespaceApi {\n    this._checkProposedApi();\n    if (!this._buffer) {\n      this._buffer = new BufferNamespaceApi(this._core);\n    }\n    return this._buffer;\n  }\n  public get markers(): ReadonlyArray<IMarker> {\n    this._checkProposedApi();\n    return this._core.markers;\n  }\n  public get modes(): IModes {\n    const m = this._core.coreService.decPrivateModes;\n    let mouseTrackingMode: 'none' | 'x10' | 'vt200' | 'drag' | 'any' = 'none';\n    switch (this._core.coreMouseService.activeProtocol) {\n      case 'X10': mouseTrackingMode = 'x10'; break;\n      case 'VT200': mouseTrackingMode = 'vt200'; break;\n      case 'DRAG': mouseTrackingMode = 'drag'; break;\n      case 'ANY': mouseTrackingMode = 'any'; break;\n    }\n    return {\n      applicationCursorKeysMode: m.applicationCursorKeys,\n      applicationKeypadMode: m.applicationKeypad,\n      bracketedPasteMode: m.bracketedPasteMode,\n      insertMode: this._core.coreService.modes.insertMode,\n      mouseTrackingMode: mouseTrackingMode,\n      originMode: m.origin,\n      reverseWraparoundMode: m.reverseWraparound,\n      sendFocusMode: m.sendFocus,\n      wraparoundMode: m.wraparound\n    };\n  }\n  public get options(): ITerminalOptions {\n    return this._publicOptions;\n  }\n  public set options(options: ITerminalOptions) {\n    for (const propName in options) {\n      this._publicOptions[propName] = options[propName];\n    }\n  }\n  public blur(): void {\n    this._core.blur();\n  }\n  public focus(): void {\n    this._core.focus();\n  }\n  public resize(columns: number, rows: number): void {\n    this._verifyIntegers(columns, rows);\n    this._core.resize(columns, rows);\n  }\n  public open(parent: HTMLElement): void {\n    this._core.open(parent);\n  }\n  public attachCustomKeyEventHandler(customKeyEventHandler: (event: KeyboardEvent) => boolean): void {\n    this._core.attachCustomKeyEventHandler(customKeyEventHandler);\n  }\n  public registerLinkMatcher(regex: RegExp, handler: (event: MouseEvent, uri: string) => void, options?: ILinkMatcherOptions): number {\n    this._checkProposedApi();\n    return this._core.registerLinkMatcher(regex, handler, options);\n  }\n  public deregisterLinkMatcher(matcherId: number): void {\n    this._checkProposedApi();\n    this._core.deregisterLinkMatcher(matcherId);\n  }\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    this._checkProposedApi();\n    return this._core.registerLinkProvider(linkProvider);\n  }\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    this._checkProposedApi();\n    return this._core.registerCharacterJoiner(handler);\n  }\n  public deregisterCharacterJoiner(joinerId: number): void {\n    this._checkProposedApi();\n    this._core.deregisterCharacterJoiner(joinerId);\n  }\n  public registerMarker(cursorYOffset: number = 0): IMarker | undefined {\n    this._checkProposedApi();\n    this._verifyIntegers(cursorYOffset);\n    return this._core.addMarker(cursorYOffset);\n  }\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    this._checkProposedApi();\n    this._verifyPositiveIntegers(decorationOptions.x ?? 0, decorationOptions.width ?? 0, decorationOptions.height ?? 0);\n    return this._core.registerDecoration(decorationOptions);\n  }\n  public addMarker(cursorYOffset: number): IMarker | undefined {\n    return this.registerMarker(cursorYOffset);\n  }\n  public hasSelection(): boolean {\n    return this._core.hasSelection();\n  }\n  public select(column: number, row: number, length: number): void {\n    this._verifyIntegers(column, row, length);\n    this._core.select(column, row, length);\n  }\n  public getSelection(): string {\n    return this._core.getSelection();\n  }\n  public getSelectionPosition(): ISelectionPosition | undefined {\n    return this._core.getSelectionPosition();\n  }\n  public clearSelection(): void {\n    this._core.clearSelection();\n  }\n  public selectAll(): void {\n    this._core.selectAll();\n  }\n  public selectLines(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.selectLines(start, end);\n  }\n  public dispose(): void {\n    this._addonManager.dispose();\n    this._core.dispose();\n  }\n  public scrollLines(amount: number): void {\n    this._verifyIntegers(amount);\n    this._core.scrollLines(amount);\n  }\n  public scrollPages(pageCount: number): void {\n    this._verifyIntegers(pageCount);\n    this._core.scrollPages(pageCount);\n  }\n  public scrollToTop(): void {\n    this._core.scrollToTop();\n  }\n  public scrollToBottom(): void {\n    this._core.scrollToBottom();\n  }\n  public scrollToLine(line: number): void {\n    this._verifyIntegers(line);\n    this._core.scrollToLine(line);\n  }\n  public clear(): void {\n    this._core.clear();\n  }\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeUtf8(data: Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeln(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data);\n    this._core.write('\\r\\n', callback);\n  }\n  public paste(data: string): void {\n    this._core.paste(data);\n  }\n  public getOption(key: 'bellSound' | 'bellStyle' | 'cursorStyle' | 'fontFamily' | 'logLevel' | 'rendererType' | 'termName' | 'wordSeparator'): string;\n  public getOption(key: 'allowTransparency' | 'altClickMovesCursor' | 'cancelEvents' | 'convertEol' | 'cursorBlink' | 'disableStdin' | 'macOptionIsMeta' | 'rightClickSelectsWord' | 'popOnBell' | 'visualBell'): boolean;\n  public getOption(key: 'cols' | 'fontSize' | 'letterSpacing' | 'lineHeight' | 'rows' | 'tabStopWidth' | 'scrollback'): number;\n  public getOption(key: 'fontWeight' | 'fontWeightBold'): FontWeight;\n  public getOption(key: string): any;\n  public getOption(key: any): any {\n    return this._core.optionsService.getOption(key);\n  }\n  public setOption(key: 'bellSound' | 'fontFamily' | 'termName' | 'wordSeparator', value: string): void;\n  public setOption(key: 'fontWeight' | 'fontWeightBold', value: 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | number): void;\n  public setOption(key: 'logLevel', value: 'debug' | 'info' | 'warn' | 'error' | 'off'): void;\n  public setOption(key: 'bellStyle', value: 'none' | 'visual' | 'sound' | 'both'): void;\n  public setOption(key: 'cursorStyle', value: 'block' | 'underline' | 'bar'): void;\n  public setOption(key: 'allowTransparency' | 'altClickMovesCursor' | 'cancelEvents' | 'convertEol' | 'cursorBlink' | 'disableStdin' | 'macOptionIsMeta' | 'rightClickSelectsWord' | 'popOnBell' | 'visualBell', value: boolean): void;\n  public setOption(key: 'fontSize' | 'letterSpacing' | 'lineHeight' | 'tabStopWidth' | 'scrollback', value: number): void;\n  public setOption(key: 'theme', value: ITheme): void;\n  public setOption(key: 'cols' | 'rows', value: number): void;\n  public setOption(key: string, value: any): void;\n  public setOption(key: any, value: any): void {\n    this._checkReadonlyOptions(key);\n    this._core.optionsService.setOption(key, value);\n  }\n  public refresh(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.refresh(start, end);\n  }\n  public reset(): void {\n    this._core.reset();\n  }\n  public clearTextureAtlas(): void {\n    this._core.clearTextureAtlas();\n  }\n  public loadAddon(addon: ITerminalAddon): void {\n    return this._addonManager.loadAddon(this, addon);\n  }\n  public static get strings(): ILocalizableStrings {\n    return Strings;\n  }\n\n  private _verifyIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value === Infinity || isNaN(value) || value % 1 !== 0) {\n        throw new Error('This API only accepts integers');\n      }\n    }\n  }\n\n  private _verifyPositiveIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value && (value === Infinity || isNaN(value) || value % 1 !== 0 || value < 0)) {\n        throw new Error('This API only accepts positive integers');\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions, IRenderLayer } from 'browser/renderer/Types';\nimport { ICellData } from 'common/Types';\nimport { DEFAULT_COLOR, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_CODE, Attributes } from 'common/buffer/Constants';\nimport { IGlyphIdentifier } from 'browser/renderer/atlas/Types';\nimport { DIM_OPACITY, INVERTED_DEFAULT_COLOR, TEXT_BASELINE } from 'browser/renderer/atlas/Constants';\nimport { BaseCharAtlas } from 'browser/renderer/atlas/BaseCharAtlas';\nimport { acquireCharAtlas } from 'browser/renderer/atlas/CharAtlasCache';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { IColorSet, IColor } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { throwIfFalsy } from 'browser/renderer/RendererUtils';\nimport { channels, color, rgba } from 'browser/Color';\nimport { removeElementFromParent } from 'browser/Dom';\nimport { tryDrawCustomChar } from 'browser/renderer/CustomGlyphs';\n\nexport abstract class BaseRenderLayer implements IRenderLayer {\n  private _canvas: HTMLCanvasElement;\n  protected _ctx!: CanvasRenderingContext2D;\n  private _scaledCharWidth: number = 0;\n  private _scaledCharHeight: number = 0;\n  private _scaledCellWidth: number = 0;\n  private _scaledCellHeight: number = 0;\n  private _scaledCharLeft: number = 0;\n  private _scaledCharTop: number = 0;\n\n  protected _charAtlas: BaseCharAtlas | undefined;\n\n  /**\n   * An object that's reused when drawing glyphs in order to reduce GC.\n   */\n  private _currentGlyphIdentifier: IGlyphIdentifier = {\n    chars: '',\n    code: 0,\n    bg: 0,\n    fg: 0,\n    bold: false,\n    dim: false,\n    italic: false\n  };\n\n  constructor(\n    private _container: HTMLElement,\n    id: string,\n    zIndex: number,\n    private _alpha: boolean,\n    protected _colors: IColorSet,\n    private _rendererId: number,\n    protected readonly _bufferService: IBufferService,\n    protected readonly _optionsService: IOptionsService\n  ) {\n    this._canvas = document.createElement('canvas');\n    this._canvas.classList.add(`xterm-${id}-layer`);\n    this._canvas.style.zIndex = zIndex.toString();\n    this._initCanvas();\n    this._container.appendChild(this._canvas);\n  }\n\n  public dispose(): void {\n    removeElementFromParent(this._canvas);\n    this._charAtlas?.dispose();\n  }\n\n  private _initCanvas(): void {\n    this._ctx = throwIfFalsy(this._canvas.getContext('2d', { alpha: this._alpha }));\n    // Draw the background if this is an opaque layer\n    if (!this._alpha) {\n      this._clearAll();\n    }\n  }\n\n  public onOptionsChanged(): void {}\n  public onBlur(): void {}\n  public onFocus(): void {}\n  public onCursorMove(): void {}\n  public onGridChanged(startRow: number, endRow: number): void {}\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean = false): void {}\n\n  public setColors(colorSet: IColorSet): void {\n    this._refreshCharAtlas(colorSet);\n  }\n\n  protected _setTransparency(alpha: boolean): void {\n    // Do nothing when alpha doesn't change\n    if (alpha === this._alpha) {\n      return;\n    }\n\n    // Create new canvas and replace old one\n    const oldCanvas = this._canvas;\n    this._alpha = alpha;\n    // Cloning preserves properties\n    this._canvas = this._canvas.cloneNode() as HTMLCanvasElement;\n    this._initCanvas();\n    this._container.replaceChild(this._canvas, oldCanvas);\n\n    // Regenerate char atlas and force a full redraw\n    this._refreshCharAtlas(this._colors);\n    this.onGridChanged(0, this._bufferService.rows - 1);\n  }\n\n  /**\n   * Refreshes the char atlas, aquiring a new one if necessary.\n   * @param colorSet The color set to use for the char atlas.\n   */\n  private _refreshCharAtlas(colorSet: IColorSet): void {\n    if (this._scaledCharWidth <= 0 && this._scaledCharHeight <= 0) {\n      return;\n    }\n    this._charAtlas = acquireCharAtlas(this._optionsService.rawOptions, this._rendererId, colorSet, this._scaledCharWidth, this._scaledCharHeight);\n    this._charAtlas.warmUp();\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    this._scaledCellWidth = dim.scaledCellWidth;\n    this._scaledCellHeight = dim.scaledCellHeight;\n    this._scaledCharWidth = dim.scaledCharWidth;\n    this._scaledCharHeight = dim.scaledCharHeight;\n    this._scaledCharLeft = dim.scaledCharLeft;\n    this._scaledCharTop = dim.scaledCharTop;\n    this._canvas.width = dim.scaledCanvasWidth;\n    this._canvas.height = dim.scaledCanvasHeight;\n    this._canvas.style.width = `${dim.canvasWidth}px`;\n    this._canvas.style.height = `${dim.canvasHeight}px`;\n\n    // Draw the background if this is an opaque layer\n    if (!this._alpha) {\n      this._clearAll();\n    }\n\n    this._refreshCharAtlas(this._colors);\n  }\n\n  public abstract reset(): void;\n\n  public clearTextureAtlas(): void {\n    this._charAtlas?.clear();\n  }\n\n  /**\n   * Fills 1+ cells completely. This uses the existing fillStyle on the context.\n   * @param x The column to start at.\n   * @param y The row to start at\n   * @param width The number of columns to fill.\n   * @param height The number of rows to fill.\n   */\n  protected _fillCells(x: number, y: number, width: number, height: number): void {\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      y * this._scaledCellHeight,\n      width * this._scaledCellWidth,\n      height * this._scaledCellHeight);\n  }\n\n  /**\n     * Fills a 1px line (2px on HDPI) at the middle of the cell. This uses the\n     * existing fillStyle on the context.\n     * @param x The column to fill.\n     * @param y The row to fill.\n     */\n  protected _fillMiddleLineAtCells(x: number, y: number, width: number = 1): void {\n    const cellOffset = Math.ceil(this._scaledCellHeight * 0.5);\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      (y + 1) * this._scaledCellHeight - cellOffset - window.devicePixelRatio,\n      width * this._scaledCellWidth,\n      window.devicePixelRatio);\n  }\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the bottom of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _fillBottomLineAtCells(x: number, y: number, width: number = 1): void {\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      (y + 1) * this._scaledCellHeight - window.devicePixelRatio - 1 /* Ensure it's drawn within the cell */,\n      width * this._scaledCellWidth,\n      window.devicePixelRatio);\n  }\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the left of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _fillLeftLineAtCell(x: number, y: number, width: number): void {\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      y * this._scaledCellHeight,\n      window.devicePixelRatio * width,\n      this._scaledCellHeight);\n  }\n\n  /**\n   * Strokes a 1px rectangle (2px on HDPI) around a cell. This uses the existing\n   * strokeStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _strokeRectAtCell(x: number, y: number, width: number, height: number): void {\n    this._ctx.lineWidth = window.devicePixelRatio;\n    this._ctx.strokeRect(\n      x * this._scaledCellWidth + window.devicePixelRatio / 2,\n      y * this._scaledCellHeight + (window.devicePixelRatio / 2),\n      width * this._scaledCellWidth - window.devicePixelRatio,\n      (height * this._scaledCellHeight) - window.devicePixelRatio);\n  }\n\n  /**\n   * Clears the entire canvas.\n   */\n  protected _clearAll(): void {\n    if (this._alpha) {\n      this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    } else {\n      this._ctx.fillStyle = this._colors.background.css;\n      this._ctx.fillRect(0, 0, this._canvas.width, this._canvas.height);\n    }\n  }\n\n  /**\n   * Clears 1+ cells completely.\n   * @param x The column to start at.\n   * @param y The row to start at.\n   * @param width The number of columns to clear.\n   * @param height The number of rows to clear.\n   */\n  protected _clearCells(x: number, y: number, width: number, height: number): void {\n    if (this._alpha) {\n      this._ctx.clearRect(\n        x * this._scaledCellWidth,\n        y * this._scaledCellHeight,\n        width * this._scaledCellWidth,\n        height * this._scaledCellHeight);\n    } else {\n      this._ctx.fillStyle = this._colors.background.css;\n      this._ctx.fillRect(\n        x * this._scaledCellWidth,\n        y * this._scaledCellHeight,\n        width * this._scaledCellWidth,\n        height * this._scaledCellHeight);\n    }\n  }\n\n  /**\n   * Draws a truecolor character at the cell. The character will be clipped to\n   * ensure that it fits with the cell, including the cell to the right if it's\n   * a wide character. This uses the existing fillStyle on the context.\n   * @param cell The cell data for the character to draw.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   * @param color The color of the character.\n   */\n  protected _fillCharTrueColor(cell: CellData, x: number, y: number): void {\n    this._ctx.font = this._getFont(false, false);\n    this._ctx.textBaseline = TEXT_BASELINE;\n    this._clipRow(y);\n\n    // Draw custom characters if applicable\n    let drawSuccess = false;\n    if (this._optionsService.rawOptions.customGlyphs !== false) {\n      drawSuccess = tryDrawCustomChar(this._ctx, cell.getChars(), x * this._scaledCellWidth, y * this._scaledCellHeight, this._scaledCellWidth, this._scaledCellHeight);\n    }\n\n    // Draw the character\n    if (!drawSuccess) {\n      this._ctx.fillText(\n        cell.getChars(),\n        x * this._scaledCellWidth + this._scaledCharLeft,\n        y * this._scaledCellHeight + this._scaledCharTop + this._scaledCharHeight);\n    }\n  }\n\n  /**\n   * Draws one or more characters at a cell. If possible this will draw using\n   * the character atlas to reduce draw time.\n   * @param chars The character or characters.\n   * @param code The character code.\n   * @param width The width of the characters.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   * @param fg The foreground color, in the format stored within the attributes.\n   * @param bg The background color, in the format stored within the attributes.\n   * This is used to validate whether a cached image can be used.\n   * @param bold Whether the text is bold.\n   */\n  protected _drawChars(cell: ICellData, x: number, y: number): void {\n    const contrastColor = this._getContrastColor(cell);\n\n    // skip cache right away if we draw in RGB\n    // Note: to avoid bad runtime JoinedCellData will be skipped\n    //       in the cache handler itself (atlasDidDraw == false) and\n    //       fall through to uncached later down below\n    if (contrastColor || cell.isFgRGB() || cell.isBgRGB()) {\n      this._drawUncachedChars(cell, x, y, contrastColor);\n      return;\n    }\n\n    let fg;\n    let bg;\n    if (cell.isInverse()) {\n      fg = (cell.isBgDefault()) ? INVERTED_DEFAULT_COLOR : cell.getBgColor();\n      bg = (cell.isFgDefault()) ? INVERTED_DEFAULT_COLOR : cell.getFgColor();\n    } else {\n      bg = (cell.isBgDefault()) ? DEFAULT_COLOR : cell.getBgColor();\n      fg = (cell.isFgDefault()) ? DEFAULT_COLOR : cell.getFgColor();\n    }\n\n    const drawInBrightColor = this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && fg < 8;\n\n    fg += drawInBrightColor ? 8 : 0;\n    this._currentGlyphIdentifier.chars = cell.getChars() || WHITESPACE_CELL_CHAR;\n    this._currentGlyphIdentifier.code = cell.getCode() || WHITESPACE_CELL_CODE;\n    this._currentGlyphIdentifier.bg = bg;\n    this._currentGlyphIdentifier.fg = fg;\n    this._currentGlyphIdentifier.bold = !!cell.isBold();\n    this._currentGlyphIdentifier.dim = !!cell.isDim();\n    this._currentGlyphIdentifier.italic = !!cell.isItalic();\n    const atlasDidDraw = this._charAtlas?.draw(this._ctx, this._currentGlyphIdentifier, x * this._scaledCellWidth + this._scaledCharLeft, y * this._scaledCellHeight + this._scaledCharTop);\n\n    if (!atlasDidDraw) {\n      this._drawUncachedChars(cell, x, y);\n    }\n  }\n\n  /**\n   * Draws one or more characters at one or more cells. The character(s) will be\n   * clipped to ensure that they fit with the cell(s), including the cell to the\n   * right if the last character is a wide character.\n   * @param chars The character.\n   * @param width The width of the character.\n   * @param fg The foreground color, in the format stored within the attributes.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   */\n  private _drawUncachedChars(cell: ICellData, x: number, y: number, fgOverride?: IColor): void {\n    this._ctx.save();\n    this._ctx.font = this._getFont(!!cell.isBold(), !!cell.isItalic());\n    this._ctx.textBaseline = TEXT_BASELINE;\n\n    if (cell.isInverse()) {\n      if (fgOverride) {\n        this._ctx.fillStyle = fgOverride.css;\n      } else if (cell.isBgDefault()) {\n        this._ctx.fillStyle = color.opaque(this._colors.background).css;\n      } else if (cell.isBgRGB()) {\n        this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n      } else {\n        let bg = cell.getBgColor();\n        if (this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && bg < 8) {\n          bg += 8;\n        }\n        this._ctx.fillStyle = this._colors.ansi[bg].css;\n      }\n    } else {\n      if (fgOverride) {\n        this._ctx.fillStyle = fgOverride.css;\n      } else if (cell.isFgDefault()) {\n        this._ctx.fillStyle = this._colors.foreground.css;\n      } else if (cell.isFgRGB()) {\n        this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n      } else {\n        let fg = cell.getFgColor();\n        if (this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n          fg += 8;\n        }\n        this._ctx.fillStyle = this._colors.ansi[fg].css;\n      }\n    }\n\n    this._clipRow(y);\n\n    // Apply alpha to dim the character\n    if (cell.isDim()) {\n      this._ctx.globalAlpha = DIM_OPACITY;\n    }\n\n    // Draw custom characters if applicable\n    let drawSuccess = false;\n    if (this._optionsService.rawOptions.customGlyphs !== false) {\n      drawSuccess = tryDrawCustomChar(this._ctx, cell.getChars(), x * this._scaledCellWidth, y * this._scaledCellHeight, this._scaledCellWidth, this._scaledCellHeight);\n    }\n\n    // Draw the character\n    if (!drawSuccess) {\n      this._ctx.fillText(\n        cell.getChars(),\n        x * this._scaledCellWidth + this._scaledCharLeft,\n        y * this._scaledCellHeight + this._scaledCharTop + this._scaledCharHeight);\n    }\n\n    this._ctx.restore();\n  }\n\n\n  /**\n   * Clips a row to ensure no pixels will be drawn outside the cells in the row.\n   * @param y The row to clip.\n   */\n  private _clipRow(y: number): void {\n    this._ctx.beginPath();\n    this._ctx.rect(\n      0,\n      y * this._scaledCellHeight,\n      this._bufferService.cols * this._scaledCellWidth,\n      this._scaledCellHeight);\n    this._ctx.clip();\n  }\n\n  /**\n   * Gets the current font.\n   * @param isBold If we should use the bold fontWeight.\n   */\n  protected _getFont(isBold: boolean, isItalic: boolean): string {\n    const fontWeight = isBold ? this._optionsService.rawOptions.fontWeightBold : this._optionsService.rawOptions.fontWeight;\n    const fontStyle = isItalic ? 'italic' : '';\n\n    return `${fontStyle} ${fontWeight} ${this._optionsService.rawOptions.fontSize * window.devicePixelRatio}px ${this._optionsService.rawOptions.fontFamily}`;\n  }\n\n  private _getContrastColor(cell: CellData): IColor | undefined {\n    if (this._optionsService.rawOptions.minimumContrastRatio === 1) {\n      return undefined;\n    }\n\n    // Try get from cache first\n    const adjustedColor = this._colors.contrastCache.getColor(cell.bg, cell.fg);\n    if (adjustedColor !== undefined) {\n      return adjustedColor || undefined;\n    }\n\n    let fgColor = cell.getFgColor();\n    let fgColorMode = cell.getFgColorMode();\n    let bgColor = cell.getBgColor();\n    let bgColorMode = cell.getBgColorMode();\n    const isInverse = !!cell.isInverse();\n    const isBold = !!cell.isInverse();\n    if (isInverse) {\n      const temp = fgColor;\n      fgColor = bgColor;\n      bgColor = temp;\n      const temp2 = fgColorMode;\n      fgColorMode = bgColorMode;\n      bgColorMode = temp2;\n    }\n\n    const bgRgba = this._resolveBackgroundRgba(bgColorMode, bgColor, isInverse);\n    const fgRgba = this._resolveForegroundRgba(fgColorMode, fgColor, isInverse, isBold);\n    const result = rgba.ensureContrastRatio(bgRgba, fgRgba, this._optionsService.rawOptions.minimumContrastRatio);\n\n    if (!result) {\n      this._colors.contrastCache.setColor(cell.bg, cell.fg, null);\n      return undefined;\n    }\n\n    const color: IColor = {\n      css: channels.toCss(\n        (result >> 24) & 0xFF,\n        (result >> 16) & 0xFF,\n        (result >> 8) & 0xFF\n      ),\n      rgba: result\n    };\n    this._colors.contrastCache.setColor(cell.bg, cell.fg, color);\n\n    return color;\n  }\n\n  private _resolveBackgroundRgba(bgColorMode: number, bgColor: number, inverse: boolean): number {\n    switch (bgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        return this._colors.ansi[bgColor].rgba;\n      case Attributes.CM_RGB:\n        return bgColor << 8;\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          return this._colors.foreground.rgba;\n        }\n        return this._colors.background.rgba;\n    }\n  }\n\n  private _resolveForegroundRgba(fgColorMode: number, fgColor: number, inverse: boolean, bold: boolean): number {\n    switch (fgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        if (this._optionsService.rawOptions.drawBoldTextInBrightColors && bold && fgColor < 8) {\n          fgColor += 8;\n        }\n        return this._colors.ansi[fgColor].rgba;\n      case Attributes.CM_RGB:\n        return fgColor << 8;\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          return this._colors.background.rgba;\n        }\n        return this._colors.foreground.rgba;\n    }\n  }\n}\n\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions, IRequestRedrawEvent } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from 'browser/renderer/BaseRenderLayer';\nimport { ICellData } from 'common/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IColorSet } from 'browser/Types';\nimport { IBufferService, IOptionsService, ICoreService } from 'common/services/Services';\nimport { IEventEmitter } from 'common/EventEmitter';\nimport { ICoreBrowserService } from 'browser/services/Services';\n\ninterface ICursorState {\n  x: number;\n  y: number;\n  isFocused: boolean;\n  style: string;\n  width: number;\n}\n\n/**\n * The time between cursor blinks.\n */\nconst BLINK_INTERVAL = 600;\n\nexport class CursorRenderLayer extends BaseRenderLayer {\n  private _state: ICursorState;\n  private _cursorRenderers: {[key: string]: (x: number, y: number, cell: ICellData) => void};\n  private _cursorBlinkStateManager: CursorBlinkStateManager | undefined;\n  private _cell: ICellData = new CellData();\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    rendererId: number,\n    private _onRequestRedraw: IEventEmitter<IRequestRedrawEvent>,\n    @IBufferService bufferService: IBufferService,\n    @IOptionsService optionsService: IOptionsService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService\n  ) {\n    super(container, 'cursor', zIndex, true, colors, rendererId, bufferService, optionsService);\n    this._state = {\n      x: 0,\n      y: 0,\n      isFocused: false,\n      style: '',\n      width: 0\n    };\n    this._cursorRenderers = {\n      'bar': this._renderBarCursor.bind(this),\n      'block': this._renderBlockCursor.bind(this),\n      'underline': this._renderUnderlineCursor.bind(this)\n    };\n  }\n\n  public dispose(): void {\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.dispose();\n      this._cursorBlinkStateManager = undefined;\n    }\n    super.dispose();\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state = {\n      x: 0,\n      y: 0,\n      isFocused: false,\n      style: '',\n      width: 0\n    };\n  }\n\n  public reset(): void {\n    this._clearCursor();\n    this._cursorBlinkStateManager?.restartBlinkAnimation();\n    this.onOptionsChanged();\n  }\n\n  public onBlur(): void {\n    this._cursorBlinkStateManager?.pause();\n    this._onRequestRedraw.fire({ start: this._bufferService.buffer.y, end: this._bufferService.buffer.y });\n  }\n\n  public onFocus(): void {\n    this._cursorBlinkStateManager?.resume();\n    this._onRequestRedraw.fire({ start: this._bufferService.buffer.y, end: this._bufferService.buffer.y });\n  }\n\n  public onOptionsChanged(): void {\n    if (this._optionsService.rawOptions.cursorBlink) {\n      if (!this._cursorBlinkStateManager) {\n        this._cursorBlinkStateManager = new CursorBlinkStateManager(this._coreBrowserService.isFocused, () => {\n          this._render(true);\n        });\n      }\n    } else {\n      this._cursorBlinkStateManager?.dispose();\n      this._cursorBlinkStateManager = undefined;\n    }\n    // Request a refresh from the terminal as management of rendering is being\n    // moved back to the terminal\n    this._onRequestRedraw.fire({ start: this._bufferService.buffer.y, end: this._bufferService.buffer.y });\n  }\n\n  public onCursorMove(): void {\n    this._cursorBlinkStateManager?.restartBlinkAnimation();\n  }\n\n  public onGridChanged(startRow: number, endRow: number): void {\n    if (!this._cursorBlinkStateManager || this._cursorBlinkStateManager.isPaused) {\n      this._render(false);\n    } else {\n      this._cursorBlinkStateManager.restartBlinkAnimation();\n    }\n  }\n\n  private _render(triggeredByAnimationFrame: boolean): void {\n    // Don't draw the cursor if it's hidden\n    if (!this._coreService.isCursorInitialized || this._coreService.isCursorHidden) {\n      this._clearCursor();\n      return;\n    }\n\n    const cursorY = this._bufferService.buffer.ybase + this._bufferService.buffer.y;\n    const viewportRelativeCursorY = cursorY - this._bufferService.buffer.ydisp;\n\n    // Don't draw the cursor if it's off-screen\n    if (viewportRelativeCursorY < 0 || viewportRelativeCursorY >= this._bufferService.rows) {\n      this._clearCursor();\n      return;\n    }\n\n    // in case cursor.x == cols adjust visual cursor to cols - 1\n    const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n    this._bufferService.buffer.lines.get(cursorY)!.loadCell(cursorX, this._cell);\n    if (this._cell.content === undefined) {\n      return;\n    }\n\n    if (!this._coreBrowserService.isFocused) {\n      this._clearCursor();\n      this._ctx.save();\n      this._ctx.fillStyle = this._colors.cursor.css;\n      const cursorStyle = this._optionsService.rawOptions.cursorStyle;\n      if (cursorStyle && cursorStyle !== 'block') {\n        this._cursorRenderers[cursorStyle](cursorX, viewportRelativeCursorY, this._cell);\n      } else {\n        this._renderBlurCursor(cursorX, viewportRelativeCursorY, this._cell);\n      }\n      this._ctx.restore();\n      this._state.x = cursorX;\n      this._state.y = viewportRelativeCursorY;\n      this._state.isFocused = false;\n      this._state.style = cursorStyle;\n      this._state.width = this._cell.getWidth();\n      return;\n    }\n\n    // Don't draw the cursor if it's blinking\n    if (this._cursorBlinkStateManager && !this._cursorBlinkStateManager.isCursorVisible) {\n      this._clearCursor();\n      return;\n    }\n\n    if (this._state) {\n      // The cursor is already in the correct spot, don't redraw\n      if (this._state.x === cursorX &&\n          this._state.y === viewportRelativeCursorY &&\n          this._state.isFocused === this._coreBrowserService.isFocused &&\n          this._state.style === this._optionsService.rawOptions.cursorStyle &&\n          this._state.width === this._cell.getWidth()) {\n        return;\n      }\n      this._clearCursor();\n    }\n\n    this._ctx.save();\n    this._cursorRenderers[this._optionsService.rawOptions.cursorStyle || 'block'](cursorX, viewportRelativeCursorY, this._cell);\n    this._ctx.restore();\n\n    this._state.x = cursorX;\n    this._state.y = viewportRelativeCursorY;\n    this._state.isFocused = false;\n    this._state.style = this._optionsService.rawOptions.cursorStyle;\n    this._state.width = this._cell.getWidth();\n  }\n\n  private _clearCursor(): void {\n    if (this._state) {\n      // Avoid potential rounding errors when device pixel ratio is less than 1\n      if (window.devicePixelRatio < 1) {\n        this._clearAll();\n      } else {\n        this._clearCells(this._state.x, this._state.y, this._state.width, 1);\n      }\n      this._state = {\n        x: 0,\n        y: 0,\n        isFocused: false,\n        style: '',\n        width: 0\n      };\n    }\n  }\n\n  private _renderBarCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillLeftLineAtCell(x, y, this._optionsService.rawOptions.cursorWidth);\n    this._ctx.restore();\n  }\n\n  private _renderBlockCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillCells(x, y, cell.getWidth(), 1);\n    this._ctx.fillStyle = this._colors.cursorAccent.css;\n    this._fillCharTrueColor(cell, x, y);\n    this._ctx.restore();\n  }\n\n  private _renderUnderlineCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillBottomLineAtCells(x, y);\n    this._ctx.restore();\n  }\n\n  private _renderBlurCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.strokeStyle = this._colors.cursor.css;\n    this._strokeRectAtCell(x, y, cell.getWidth(), 1);\n    this._ctx.restore();\n  }\n}\n\nclass CursorBlinkStateManager {\n  public isCursorVisible: boolean;\n\n  private _animationFrame: number | undefined;\n  private _blinkStartTimeout: number | undefined;\n  private _blinkInterval: number | undefined;\n\n  /**\n   * The time at which the animation frame was restarted, this is used on the\n   * next render to restart the timers so they don't need to restart the timers\n   * multiple times over a short period.\n   */\n  private _animationTimeRestarted: number | undefined;\n\n  constructor(\n    isFocused: boolean,\n    private _renderCallback: () => void\n  ) {\n    this.isCursorVisible = true;\n    if (isFocused) {\n      this._restartInterval();\n    }\n  }\n\n  public get isPaused(): boolean { return !(this._blinkStartTimeout || this._blinkInterval); }\n\n  public dispose(): void {\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n    if (this._blinkStartTimeout) {\n      window.clearTimeout(this._blinkStartTimeout);\n      this._blinkStartTimeout = undefined;\n    }\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public restartBlinkAnimation(): void {\n    if (this.isPaused) {\n      return;\n    }\n    // Save a timestamp so that the restart can be done on the next interval\n    this._animationTimeRestarted = Date.now();\n    // Force a cursor render to ensure it's visible and in the correct position\n    this.isCursorVisible = true;\n    if (!this._animationFrame) {\n      this._animationFrame = window.requestAnimationFrame(() => {\n        this._renderCallback();\n        this._animationFrame = undefined;\n      });\n    }\n  }\n\n  private _restartInterval(timeToStart: number = BLINK_INTERVAL): void {\n    // Clear any existing interval\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n\n    // Setup the initial timeout which will hide the cursor, this is done before\n    // the regular interval is setup in order to support restarting the blink\n    // animation in a lightweight way (without thrashing clearInterval and\n    // setInterval).\n    this._blinkStartTimeout = window.setTimeout(() => {\n      // Check if another animation restart was requested while this was being\n      // started\n      if (this._animationTimeRestarted) {\n        const time = BLINK_INTERVAL - (Date.now() - this._animationTimeRestarted);\n        this._animationTimeRestarted = undefined;\n        if (time > 0) {\n          this._restartInterval(time);\n          return;\n        }\n      }\n\n      // Hide the cursor\n      this.isCursorVisible = false;\n      this._animationFrame = window.requestAnimationFrame(() => {\n        this._renderCallback();\n        this._animationFrame = undefined;\n      });\n\n      // Setup the blink interval\n      this._blinkInterval = window.setInterval(() => {\n        // Adjust the animation time if it was restarted\n        if (this._animationTimeRestarted) {\n          // calc time diff\n          // Make restart interval do a setTimeout initially?\n          const time = BLINK_INTERVAL - (Date.now() - this._animationTimeRestarted);\n          this._animationTimeRestarted = undefined;\n          this._restartInterval(time);\n          return;\n        }\n\n        // Invert visibility and render\n        this.isCursorVisible = !this.isCursorVisible;\n        this._animationFrame = window.requestAnimationFrame(() => {\n          this._renderCallback();\n          this._animationFrame = undefined;\n        });\n      }, BLINK_INTERVAL);\n    }, timeToStart);\n  }\n\n  public pause(): void {\n    this.isCursorVisible = true;\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n    if (this._blinkStartTimeout) {\n      window.clearTimeout(this._blinkStartTimeout);\n      this._blinkStartTimeout = undefined;\n    }\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public resume(): void {\n    // Clear out any existing timers just in case\n    this.pause();\n\n    this._animationTimeRestarted = undefined;\n    this._restartInterval();\n    this.restartBlinkAnimation();\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { throwIfFalsy } from 'browser/renderer/RendererUtils';\n\ninterface IBlockVector {\n  x: number;\n  y: number;\n  w: number;\n  h: number;\n}\n\nexport const blockElementDefinitions: { [index: string]: IBlockVector[] | undefined } = {\n  // Block elements (0x2580-0x2590)\n  '▀': [{ x: 0, y: 0, w: 8, h: 4 }], // UPPER HALF BLOCK\n  '▁': [{ x: 0, y: 7, w: 8, h: 1 }], // LOWER ONE EIGHTH BLOCK\n  '▂': [{ x: 0, y: 6, w: 8, h: 2 }], // LOWER ONE QUARTER BLOCK\n  '▃': [{ x: 0, y: 5, w: 8, h: 3 }], // LOWER THREE EIGHTHS BLOCK\n  '▄': [{ x: 0, y: 4, w: 8, h: 4 }], // LOWER HALF BLOCK\n  '▅': [{ x: 0, y: 3, w: 8, h: 5 }], // LOWER FIVE EIGHTHS BLOCK\n  '▆': [{ x: 0, y: 2, w: 8, h: 6 }], // LOWER THREE QUARTERS BLOCK\n  '▇': [{ x: 0, y: 1, w: 8, h: 7 }], // LOWER SEVEN EIGHTHS BLOCK\n  '█': [{ x: 0, y: 0, w: 8, h: 8 }], // FULL BLOCK\n  '▉': [{ x: 0, y: 0, w: 7, h: 8 }], // LEFT SEVEN EIGHTHS BLOCK\n  '▊': [{ x: 0, y: 0, w: 6, h: 8 }], // LEFT THREE QUARTERS BLOCK\n  '▋': [{ x: 0, y: 0, w: 5, h: 8 }], // LEFT FIVE EIGHTHS BLOCK\n  '▌': [{ x: 0, y: 0, w: 4, h: 8 }], // LEFT HALF BLOCK\n  '▍': [{ x: 0, y: 0, w: 3, h: 8 }], // LEFT THREE EIGHTHS BLOCK\n  '▎': [{ x: 0, y: 0, w: 2, h: 8 }], // LEFT ONE QUARTER BLOCK\n  '▏': [{ x: 0, y: 0, w: 1, h: 8 }], // LEFT ONE EIGHTH BLOCK\n  '▐': [{ x: 4, y: 0, w: 4, h: 8 }], // RIGHT HALF BLOCK\n\n  // Block elements (0x2594-0x2595)\n  '▔': [{ x: 0, y: 0, w: 9, h: 1 }], // UPPER ONE EIGHTH BLOCK\n  '▕': [{ x: 7, y: 0, w: 1, h: 8 }], // RIGHT ONE EIGHTH BLOCK\n\n  // Terminal graphic characters (0x2596-0x259F)\n  '▖': [{ x: 0, y: 4, w: 4, h: 4 }],                             // QUADRANT LOWER LEFT\n  '▗': [{ x: 4, y: 4, w: 4, h: 4 }],                             // QUADRANT LOWER RIGHT\n  '▘': [{ x: 0, y: 0, w: 4, h: 4 }],                             // QUADRANT UPPER LEFT\n  '▙': [{ x: 0, y: 0, w: 4, h: 8 }, { x: 0, y: 4, w: 8, h: 4 }], // QUADRANT UPPER LEFT AND LOWER LEFT AND LOWER RIGHT\n  '▚': [{ x: 0, y: 0, w: 4, h: 4 }, { x: 4, y: 4, w: 4, h: 4 }], // QUADRANT UPPER LEFT AND LOWER RIGHT\n  '▛': [{ x: 0, y: 0, w: 4, h: 8 }, { x: 0, y: 0, w: 4, h: 8 }], // QUADRANT UPPER LEFT AND UPPER RIGHT AND LOWER LEFT\n  '▜': [{ x: 0, y: 0, w: 8, h: 4 }, { x: 4, y: 0, w: 4, h: 8 }], // QUADRANT UPPER LEFT AND UPPER RIGHT AND LOWER RIGHT\n  '▝': [{ x: 4, y: 0, w: 4, h: 4 }],                             // QUADRANT UPPER RIGHT\n  '▞': [{ x: 4, y: 0, w: 4, h: 4 }, { x: 0, y: 4, w: 4, h: 4 }], // QUADRANT UPPER RIGHT AND LOWER LEFT\n  '▟': [{ x: 4, y: 0, w: 4, h: 8 }, { x: 0, y: 4, w: 8, h: 4 }], // QUADRANT UPPER RIGHT AND LOWER LEFT AND LOWER RIGHT\n\n  // VERTICAL ONE EIGHTH BLOCK-2 through VERTICAL ONE EIGHTH BLOCK-7\n  '\\u{1FB70}': [{ x: 1, y: 0, w: 1, h: 8 }],\n  '\\u{1FB71}': [{ x: 2, y: 0, w: 1, h: 8 }],\n  '\\u{1FB72}': [{ x: 3, y: 0, w: 1, h: 8 }],\n  '\\u{1FB73}': [{ x: 4, y: 0, w: 1, h: 8 }],\n  '\\u{1FB74}': [{ x: 5, y: 0, w: 1, h: 8 }],\n  '\\u{1FB75}': [{ x: 6, y: 0, w: 1, h: 8 }],\n\n  // HORIZONTAL ONE EIGHTH BLOCK-2 through HORIZONTAL ONE EIGHTH BLOCK-7\n  '\\u{1FB76}': [{ x: 0, y: 1, w: 8, h: 1 }],\n  '\\u{1FB77}': [{ x: 0, y: 2, w: 8, h: 1 }],\n  '\\u{1FB78}': [{ x: 0, y: 3, w: 8, h: 1 }],\n  '\\u{1FB79}': [{ x: 0, y: 4, w: 8, h: 1 }],\n  '\\u{1FB7A}': [{ x: 0, y: 5, w: 8, h: 1 }],\n  '\\u{1FB7B}': [{ x: 0, y: 6, w: 8, h: 1 }],\n\n  // LEFT AND LOWER ONE EIGHTH BLOCK\n  '\\u{1FB7C}': [{ x: 0, y: 0, w: 1, h: 8 }, { x: 0, y: 7, w: 8, h: 1 }],\n  // LEFT AND UPPER ONE EIGHTH BLOCK\n  '\\u{1FB7D}': [{ x: 0, y: 0, w: 1, h: 8 }, { x: 0, y: 0, w: 8, h: 1 }],\n  // RIGHT AND UPPER ONE EIGHTH BLOCK\n  '\\u{1FB7E}': [{ x: 7, y: 0, w: 1, h: 8 }, { x: 0, y: 0, w: 8, h: 1 }],\n  // RIGHT AND LOWER ONE EIGHTH BLOCK\n  '\\u{1FB7F}': [{ x: 7, y: 0, w: 1, h: 8 }, { x: 0, y: 7, w: 8, h: 1 }],\n  // UPPER AND LOWER ONE EIGHTH BLOCK\n  '\\u{1FB80}': [{ x: 0, y: 0, w: 8, h: 1 }, { x: 0, y: 7, w: 8, h: 1 }],\n  // HORIZONTAL ONE EIGHTH BLOCK-1358\n  '\\u{1FB81}': [{ x: 0, y: 0, w: 8, h: 1 }, { x: 0, y: 2, w: 8, h: 1 }, { x: 0, y: 4, w: 8, h: 1 }, { x: 0, y: 7, w: 8, h: 1 }],\n\n  // UPPER ONE QUARTER BLOCK\n  '\\u{1FB82}': [{ x: 0, y: 0, w: 8, h: 2 }],\n  // UPPER THREE EIGHTHS BLOCK\n  '\\u{1FB83}': [{ x: 0, y: 0, w: 8, h: 3 }],\n  // UPPER FIVE EIGHTHS BLOCK\n  '\\u{1FB84}': [{ x: 0, y: 0, w: 8, h: 5 }],\n  // UPPER THREE QUARTERS BLOCK\n  '\\u{1FB85}': [{ x: 0, y: 0, w: 8, h: 6 }],\n  // UPPER SEVEN EIGHTHS BLOCK\n  '\\u{1FB86}': [{ x: 0, y: 0, w: 8, h: 7 }],\n\n  // RIGHT ONE QUARTER BLOCK\n  '\\u{1FB87}': [{ x: 6, y: 0, w: 2, h: 8 }],\n  // RIGHT THREE EIGHTHS B0OCK\n  '\\u{1FB88}': [{ x: 5, y: 0, w: 3, h: 8 }],\n  // RIGHT FIVE EIGHTHS BL0CK\n  '\\u{1FB89}': [{ x: 3, y: 0, w: 5, h: 8 }],\n  // RIGHT THREE QUARTERS 0LOCK\n  '\\u{1FB8A}': [{ x: 2, y: 0, w: 6, h: 8 }],\n  // RIGHT SEVEN EIGHTHS B0OCK\n  '\\u{1FB8B}': [{ x: 1, y: 0, w: 7, h: 8 }],\n\n  // CHECKER BOARD FILL\n  '\\u{1FB95}': [\n    { x: 0, y: 0, w: 2, h: 2 }, { x: 4, y: 0, w: 2, h: 2 },\n    { x: 2, y: 2, w: 2, h: 2 }, { x: 6, y: 2, w: 2, h: 2 },\n    { x: 0, y: 4, w: 2, h: 2 }, { x: 4, y: 4, w: 2, h: 2 },\n    { x: 2, y: 6, w: 2, h: 2 }, { x: 6, y: 6, w: 2, h: 2 }\n  ],\n  // INVERSE CHECKER BOARD FILL\n  '\\u{1FB96}': [\n    { x: 2, y: 0, w: 2, h: 2 }, { x: 6, y: 0, w: 2, h: 2 },\n    { x: 0, y: 2, w: 2, h: 2 }, { x: 4, y: 2, w: 2, h: 2 },\n    { x: 2, y: 4, w: 2, h: 2 }, { x: 6, y: 4, w: 2, h: 2 },\n    { x: 0, y: 6, w: 2, h: 2 }, { x: 4, y: 6, w: 2, h: 2 }\n  ],\n  // HEAVY HORIZONTAL FILL (upper middle and lower one quarter block)\n  '\\u{1FB97}': [{ x: 0, y: 2, w: 8, h: 2 }, { x: 0, y: 6, w: 8, h: 2 }]\n};\n\ntype PatternDefinition = number[][];\n\n/**\n * Defines the repeating pattern used by special characters, the pattern is made up of a 2d array of\n * pixel values to be filled (1) or not filled (0).\n */\nconst patternCharacterDefinitions: { [key: string]: PatternDefinition | undefined } = {\n  // Shade characters (0x2591-0x2593)\n  '░': [ // LIGHT SHADE (25%)\n    [1, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 1, 0],\n    [0, 0, 0, 0]\n  ],\n  '▒': [ // MEDIUM SHADE (50%)\n    [1, 0],\n    [0, 0],\n    [0, 1],\n    [0, 0]\n  ],\n  '▓': [ // DARK SHADE (75%)\n    [0, 1],\n    [1, 1],\n    [1, 0],\n    [1, 1]\n  ]\n};\n\nconst enum Shapes {\n  /** │ */ TOP_TO_BOTTOM = 'M.5,0 L.5,1',\n  /** ─ */ LEFT_TO_RIGHT = 'M0,.5 L1,.5',\n\n  /** └ */ TOP_TO_RIGHT = 'M.5,0 L.5,.5 L1,.5',\n  /** ┘ */ TOP_TO_LEFT = 'M.5,0 L.5,.5 L0,.5',\n  /** ┐ */ LEFT_TO_BOTTOM = 'M0,.5 L.5,.5 L.5,1',\n  /** ┌ */ RIGHT_TO_BOTTOM = 'M0.5,1 L.5,.5 L1,.5',\n\n  /** ╵ */ MIDDLE_TO_TOP = 'M.5,.5 L.5,0',\n  /** ╴ */ MIDDLE_TO_LEFT = 'M.5,.5 L0,.5',\n  /** ╶ */ MIDDLE_TO_RIGHT = 'M.5,.5 L1,.5',\n  /** ╷ */ MIDDLE_TO_BOTTOM = 'M.5,.5 L.5,1',\n\n  /** ┴ */ T_TOP = 'M0,.5 L1,.5 M.5,.5 L.5,0',\n  /** ┤ */ T_LEFT = 'M.5,0 L.5,1 M.5,.5 L0,.5',\n  /** ├ */ T_RIGHT = 'M.5,0 L.5,1 M.5,.5 L1,.5',\n  /** ┬ */ T_BOTTOM = 'M0,.5 L1,.5 M.5,.5 L.5,1',\n\n  /** ┼ */ CROSS = 'M0,.5 L1,.5 M.5,0 L.5,1',\n\n  /** ╌ */ TWO_DASHES_HORIZONTAL = 'M.1,.5 L.4,.5 M.6,.5 L.9,.5', // .2 empty, .3 filled\n  /** ┄ */ THREE_DASHES_HORIZONTAL = 'M.0667,.5 L.2667,.5 M.4,.5 L.6,.5 M.7333,.5 L.9333,.5', // .1333 empty, .2 filled\n  /** ┉ */ FOUR_DASHES_HORIZONTAL = 'M.05,.5 L.2,.5 M.3,.5 L.45,.5 M.55,.5 L.7,.5 M.8,.5 L.95,.5', // .1 empty, .15 filled\n  /** ╎ */ TWO_DASHES_VERTICAL = 'M.5,.1 L.5,.4 M.5,.6 L.5,.9',\n  /** ┆ */ THREE_DASHES_VERTICAL = 'M.5,.0667 L.5,.2667 M.5,.4 L.5,.6 M.5,.7333 L.5,.9333',\n  /** ┊ */ FOUR_DASHES_VERTICAL = 'M.5,.05 L.5,.2 M.5,.3 L.5,.45 L.5,.55 M.5,.7 L.5,.95',\n}\n\nconst enum Style {\n  NORMAL = 1,\n  BOLD = 3\n}\n\n/**\n * This contains the definitions of all box drawing characters in the format of SVG paths (ie. the\n * svg d attribute).\n */\nexport const boxDrawingDefinitions: { [character: string]: { [fontWeight: number]: string | ((xp: number, yp: number) => string) } | undefined } = {\n  // Uniform normal and bold\n  '─': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT },\n  '━': { [Style.BOLD]:   Shapes.LEFT_TO_RIGHT },\n  '│': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM },\n  '┃': { [Style.BOLD]:   Shapes.TOP_TO_BOTTOM },\n  '┌': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM },\n  '┏': { [Style.BOLD]:   Shapes.RIGHT_TO_BOTTOM },\n  '┐': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM },\n  '┓': { [Style.BOLD]:   Shapes.LEFT_TO_BOTTOM },\n  '└': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT },\n  '┗': { [Style.BOLD]:   Shapes.TOP_TO_RIGHT },\n  '┘': { [Style.NORMAL]: Shapes.TOP_TO_LEFT },\n  '┛': { [Style.BOLD]:   Shapes.TOP_TO_LEFT },\n  '├': { [Style.NORMAL]: Shapes.T_RIGHT },\n  '┣': { [Style.BOLD]:   Shapes.T_RIGHT },\n  '┤': { [Style.NORMAL]: Shapes.T_LEFT },\n  '┫': { [Style.BOLD]:   Shapes.T_LEFT },\n  '┬': { [Style.NORMAL]: Shapes.T_BOTTOM },\n  '┳': { [Style.BOLD]:   Shapes.T_BOTTOM },\n  '┴': { [Style.NORMAL]: Shapes.T_TOP },\n  '┻': { [Style.BOLD]:   Shapes.T_TOP },\n  '┼': { [Style.NORMAL]: Shapes.CROSS },\n  '╋': { [Style.BOLD]:   Shapes.CROSS },\n  '╴': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT },\n  '╸': { [Style.BOLD]:   Shapes.MIDDLE_TO_LEFT },\n  '╵': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP },\n  '╹': { [Style.BOLD]:   Shapes.MIDDLE_TO_TOP },\n  '╶': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT },\n  '╺': { [Style.BOLD]:   Shapes.MIDDLE_TO_RIGHT },\n  '╷': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM },\n  '╻': { [Style.BOLD]:   Shapes.MIDDLE_TO_BOTTOM },\n\n  // Double border\n  '═': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp}` },\n  '║': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1` },\n  '╒': { [Style.NORMAL]: (xp, yp) => `M.5,1 L.5,${.5 - yp} L1,${.5 - yp} M.5,${.5 + yp} L1,${.5 + yp}` },\n  '╓': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},1 L${.5 - xp},.5 L1,.5 M${.5 + xp},.5 L${.5 + xp},1` },\n  '╔': { [Style.NORMAL]: (xp, yp) => `M1,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1` },\n  '╕': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L.5,${.5 - yp} L.5,1 M0,${.5 + yp} L.5,${.5 + yp}` },\n  '╖': { [Style.NORMAL]: (xp, yp) => `M${.5 + xp},1 L${.5 + xp},.5 L0,.5 M${.5 - xp},.5 L${.5 - xp},1` },\n  '╗': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M0,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},1` },\n  '╘': { [Style.NORMAL]: (xp, yp) => `M.5,0 L.5,${.5 + yp} L1,${.5 + yp} M.5,${.5 - yp} L1,${.5 - yp}` },\n  '╙': { [Style.NORMAL]: (xp, yp) => `M1,.5 L${.5 - xp},.5 L${.5 - xp},0 M${.5 + xp},.5 L${.5 + xp},0` },\n  '╚': { [Style.NORMAL]: (xp, yp) => `M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0 M1,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},0` },\n  '╛': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L.5,${.5 + yp} L.5,0 M0,${.5 - yp} L.5,${.5 - yp}` },\n  '╜': { [Style.NORMAL]: (xp, yp) => `M0,.5 L${.5 + xp},.5 L${.5 + xp},0 M${.5 - xp},.5 L${.5 - xp},0` },\n  '╝': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0 M0,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},0` },\n  '╞': { [Style.NORMAL]: (xp, yp) => `${Shapes.TOP_TO_BOTTOM} M.5,${.5 - yp} L1,${.5 - yp} M.5,${.5 + yp} L1,${.5 + yp}` },\n  '╟': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1 M${.5 + xp},.5 L1,.5` },\n  '╠': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},0 L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1 M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0` },\n  '╡': { [Style.NORMAL]: (xp, yp) => `${Shapes.TOP_TO_BOTTOM} M0,${.5 - yp} L.5,${.5 - yp} M0,${.5 + yp} L.5,${.5 + yp}` },\n  '╢': { [Style.NORMAL]: (xp, yp) => `M0,.5 L${.5 - xp},.5 M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1` },\n  '╣': { [Style.NORMAL]: (xp, yp) => `M${.5 + xp},0 L${.5 + xp},1 M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0` },\n  '╤': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp} M.5,${.5 + yp} L.5,1` },\n  '╥': { [Style.NORMAL]: (xp, yp) => `${Shapes.LEFT_TO_RIGHT} M${.5 - xp},.5 L${.5 - xp},1 M${.5 + xp},.5 L${.5 + xp},1` },\n  '╦': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1` },\n  '╧': { [Style.NORMAL]: (xp, yp) => `M.5,0 L.5,${.5 - yp} M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp}` },\n  '╨': { [Style.NORMAL]: (xp, yp) => `${Shapes.LEFT_TO_RIGHT} M${.5 - xp},.5 L${.5 - xp},0 M${.5 + xp},.5 L${.5 + xp},0` },\n  '╩': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L1,${.5 + yp} M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0 M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0` },\n  '╪': { [Style.NORMAL]: (xp, yp) => `${Shapes.TOP_TO_BOTTOM} M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp}` },\n  '╫': { [Style.NORMAL]: (xp, yp) => `${Shapes.LEFT_TO_RIGHT} M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1` },\n  '╬': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1 M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0 M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0` },\n\n  // Diagonal\n  '╱': { [Style.NORMAL]: 'M1,0 L0,1' },\n  '╲': { [Style.NORMAL]: 'M0,0 L1,1' },\n  '╳': { [Style.NORMAL]: 'M1,0 L0,1 M0,0 L1,1' },\n\n  // Mixed weight\n  '╼': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '╽': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '╾': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '╿': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┍': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┎': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┑': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┒': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┕': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┖': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┙': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┚': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┝': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM,                                 [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┞': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM,                               [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┟': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT,                                  [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┠': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.TOP_TO_BOTTOM },\n  '┡': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.TOP_TO_RIGHT },\n  '┢': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.RIGHT_TO_BOTTOM },\n  '┥': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM,                                 [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┦': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM,                                [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┧': { [Style.NORMAL]: Shapes.TOP_TO_LEFT,                                   [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┨': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.TOP_TO_BOTTOM },\n  '┩': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.TOP_TO_LEFT },\n  '┪': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.LEFT_TO_BOTTOM },\n  '┭': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM,                               [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┮': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM,                                [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┯': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.LEFT_TO_RIGHT },\n  '┰': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT,                                 [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┱': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.LEFT_TO_BOTTOM },\n  '┲': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.RIGHT_TO_BOTTOM },\n  '┵': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT,                                  [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┶': { [Style.NORMAL]: Shapes.TOP_TO_LEFT,                                   [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┷': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.LEFT_TO_RIGHT },\n  '┸': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT,                                 [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┹': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.TOP_TO_LEFT },\n  '┺': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.TOP_TO_RIGHT },\n  '┽': { [Style.NORMAL]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_RIGHT}`,  [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┾': { [Style.NORMAL]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_LEFT}`,   [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┿': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM,                                 [Style.BOLD]: Shapes.LEFT_TO_RIGHT },\n  '╀': { [Style.NORMAL]: `${Shapes.LEFT_TO_RIGHT} ${Shapes.MIDDLE_TO_BOTTOM}`, [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '╁': { [Style.NORMAL]: `${Shapes.MIDDLE_TO_TOP} ${Shapes.LEFT_TO_RIGHT}`,    [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '╂': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT,                                 [Style.BOLD]: Shapes.TOP_TO_BOTTOM },\n  '╃': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM,                               [Style.BOLD]: Shapes.TOP_TO_LEFT },\n  '╄': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM,                                [Style.BOLD]: Shapes.TOP_TO_RIGHT },\n  '╅': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT,                                  [Style.BOLD]: Shapes.LEFT_TO_BOTTOM },\n  '╆': { [Style.NORMAL]: Shapes.TOP_TO_LEFT,                                   [Style.BOLD]: Shapes.RIGHT_TO_BOTTOM },\n  '╇': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: `${Shapes.MIDDLE_TO_TOP} ${Shapes.LEFT_TO_RIGHT}` },\n  '╈': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: `${Shapes.LEFT_TO_RIGHT} ${Shapes.MIDDLE_TO_BOTTOM}` },\n  '╉': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_LEFT}` },\n  '╊': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_RIGHT}` },\n\n  // Dashed\n  '╌': { [Style.NORMAL]: Shapes.TWO_DASHES_HORIZONTAL },\n  '╍': { [Style.BOLD]:   Shapes.TWO_DASHES_HORIZONTAL },\n  '┄': { [Style.NORMAL]: Shapes.THREE_DASHES_HORIZONTAL },\n  '┅': { [Style.BOLD]:   Shapes.THREE_DASHES_HORIZONTAL },\n  '┈': { [Style.NORMAL]: Shapes.FOUR_DASHES_HORIZONTAL },\n  '┉': { [Style.BOLD]:   Shapes.FOUR_DASHES_HORIZONTAL },\n  '╎': { [Style.NORMAL]: Shapes.TWO_DASHES_VERTICAL },\n  '╏': { [Style.BOLD]:   Shapes.TWO_DASHES_VERTICAL },\n  '┆': { [Style.NORMAL]: Shapes.THREE_DASHES_VERTICAL  },\n  '┇': { [Style.BOLD]:   Shapes.THREE_DASHES_VERTICAL },\n  '┊': { [Style.NORMAL]: Shapes.FOUR_DASHES_VERTICAL },\n  '┋': { [Style.BOLD]:   Shapes.FOUR_DASHES_VERTICAL },\n\n  // Curved\n  '╭': { [Style.NORMAL]: 'C.5,1,.5,.5,1,.5' },\n  '╮': { [Style.NORMAL]: 'C.5,1,.5,.5,0,.5' },\n  '╯': { [Style.NORMAL]: 'C.5,0,.5,.5,0,.5' },\n  '╰': { [Style.NORMAL]: 'C.5,0,.5,.5,1,.5' }\n};\n\n/**\n * Try drawing a custom block element or box drawing character, returning whether it was\n * successfully drawn.\n */\nexport function tryDrawCustomChar(\n  ctx: CanvasRenderingContext2D,\n  c: string,\n  xOffset: number,\n  yOffset: number,\n  scaledCellWidth: number,\n  scaledCellHeight: number\n): boolean {\n  const blockElementDefinition = blockElementDefinitions[c];\n  if (blockElementDefinition) {\n    drawBlockElementChar(ctx, blockElementDefinition, xOffset, yOffset, scaledCellWidth, scaledCellHeight);\n    return true;\n  }\n\n  const patternDefinition = patternCharacterDefinitions[c];\n  if (patternDefinition) {\n    drawPatternChar(ctx, patternDefinition, xOffset, yOffset, scaledCellWidth, scaledCellHeight);\n    return true;\n  }\n\n  const boxDrawingDefinition = boxDrawingDefinitions[c];\n  if (boxDrawingDefinition) {\n    drawBoxDrawingChar(ctx, boxDrawingDefinition, xOffset, yOffset, scaledCellWidth, scaledCellHeight);\n    return true;\n  }\n\n  return false;\n}\n\nfunction drawBlockElementChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: IBlockVector[],\n  xOffset: number,\n  yOffset: number,\n  scaledCellWidth: number,\n  scaledCellHeight: number\n): void {\n  for (let i = 0; i < charDefinition.length; i++) {\n    const box = charDefinition[i];\n    const xEighth = scaledCellWidth / 8;\n    const yEighth = scaledCellHeight / 8;\n    ctx.fillRect(\n      xOffset + box.x * xEighth,\n      yOffset + box.y * yEighth,\n      box.w * xEighth,\n      box.h * yEighth\n    );\n  }\n}\n\nconst cachedPatterns: Map<PatternDefinition, Map</* fillStyle */string, CanvasPattern>> = new Map();\n\nfunction drawPatternChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: number[][],\n  xOffset: number,\n  yOffset: number,\n  scaledCellWidth: number,\n  scaledCellHeight: number\n): void {\n  let patternSet = cachedPatterns.get(charDefinition);\n  if (!patternSet) {\n    patternSet = new Map();\n    cachedPatterns.set(charDefinition, patternSet);\n  }\n  const fillStyle = ctx.fillStyle;\n  if (typeof fillStyle !== 'string') {\n    throw new Error(`Unexpected fillStyle type \"${fillStyle}\"`);\n  }\n  let pattern = patternSet.get(fillStyle);\n  if (!pattern) {\n    const width = charDefinition[0].length;\n    const height = charDefinition.length;\n    const tmpCanvas = document.createElement('canvas');\n    tmpCanvas.width = width;\n    tmpCanvas.height = height;\n    const tmpCtx = throwIfFalsy(tmpCanvas.getContext('2d'));\n    const imageData = new ImageData(width, height);\n\n    // Extract rgba from fillStyle\n    let r: number;\n    let g: number;\n    let b: number;\n    let a: number;\n    if (fillStyle.startsWith('#')) {\n      r = parseInt(fillStyle.substr(1, 2), 16);\n      g = parseInt(fillStyle.substr(3, 2), 16);\n      b = parseInt(fillStyle.substr(5, 2), 16);\n      a = fillStyle.length > 7 && parseInt(fillStyle.substr(7, 2), 16) || 1;\n    } else if (fillStyle.startsWith('rgba')) {\n      ([r, g, b, a] = fillStyle.substring(5, fillStyle.length - 1).split(',').map(e => parseFloat(e)));\n    } else {\n      throw new Error(`Unexpected fillStyle color format \"${fillStyle}\" when drawing pattern glyph`);\n    }\n\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        imageData.data[(y * width + x) * 4    ] = r;\n        imageData.data[(y * width + x) * 4 + 1] = g;\n        imageData.data[(y * width + x) * 4 + 2] = b;\n        imageData.data[(y * width + x) * 4 + 3] = charDefinition[y][x] * (a * 255);\n      }\n    }\n    tmpCtx.putImageData(imageData, 0, 0);\n    pattern = throwIfFalsy(ctx.createPattern(tmpCanvas, null));\n    patternSet.set(fillStyle, pattern);\n  }\n  ctx.fillStyle = pattern;\n  ctx.fillRect(xOffset, yOffset, scaledCellWidth, scaledCellHeight);\n}\n\n/**\n * Draws the following box drawing characters by mapping a subset of SVG d attribute instructions to\n * canvas draw calls.\n *\n * Box styles:       ┎┰┒┍┯┑╓╥╖╒╤╕ ┏┳┓┌┲┓┌┬┐┏┱┐\n * ┌─┬─┐ ┏━┳━┓ ╔═╦═╗ ┠╂┨┝┿┥╟╫╢╞╪╡ ┡╇┩├╊┫┢╈┪┣╉┤\n * │ │ │ ┃ ┃ ┃ ║ ║ ║ ┖┸┚┕┷┙╙╨╜╘╧╛ └┴┘└┺┛┗┻┛┗┹┘\n * ├─┼─┤ ┣━╋━┫ ╠═╬═╣ ┏┱┐┌┲┓┌┬┐┌┬┐ ┏┳┓┌┮┓┌┬┐┏┭┐\n * │ │ │ ┃ ┃ ┃ ║ ║ ║ ┡╃┤├╄┩├╆┪┢╅┤ ┞╀┦├┾┫┟╁┧┣┽┤\n * └─┴─┘ ┗━┻━┛ ╚═╩═╝ └┴┘└┴┘└┺┛┗┹┘ └┴┘└┶┛┗┻┛┗┵┘\n *\n * Other:\n * ╭─╮ ╲ ╱ ╷╻╎╏┆┇┊┋ ╺╾╴ ╌╌╌ ┄┄┄ ┈┈┈\n * │ │  ╳  ╽╿╎╏┆┇┊┋ ╶╼╸ ╍╍╍ ┅┅┅ ┉┉┉\n * ╰─╯ ╱ ╲ ╹╵╎╏┆┇┊┋\n *\n * All box drawing characters:\n * ─ ━ │ ┃ ┄ ┅ ┆ ┇ ┈ ┉ ┊ ┋ ┌ ┍ ┎ ┏\n * ┐ ┑ ┒ ┓ └ ┕ ┖ ┗ ┘ ┙ ┚ ┛ ├ ┝ ┞ ┟\n * ┠ ┡ ┢ ┣ ┤ ┥ ┦ ┧ ┨ ┩ ┪ ┫ ┬ ┭ ┮ ┯\n * ┰ ┱ ┲ ┳ ┴ ┵ ┶ ┷ ┸ ┹ ┺ ┻ ┼ ┽ ┾ ┿\n * ╀ ╁ ╂ ╃ ╄ ╅ ╆ ╇ ╈ ╉ ╊ ╋ ╌ ╍ ╎ ╏\n * ═ ║ ╒ ╓ ╔ ╕ ╖ ╗ ╘ ╙ ╚ ╛ ╜ ╝ ╞ ╟\n * ╠ ╡ ╢ ╣ ╤ ╥ ╦ ╧ ╨ ╩ ╪ ╫ ╬ ╭ ╮ ╯\n * ╰ ╱ ╲ ╳ ╴ ╵ ╶ ╷ ╸ ╹ ╺ ╻ ╼ ╽ ╾ ╿\n *\n * ---\n *\n * Box drawing alignment tests:                                          █\n *                                                                       ▉\n *   ╔══╦══╗  ┌──┬──┐  ╭──┬──╮  ╭──┬──╮  ┏━━┳━━┓  ┎┒┏┑   ╷  ╻ ┏┯┓ ┌┰┐    ▊ ╱╲╱╲╳╳╳\n *   ║┌─╨─┐║  │╔═╧═╗│  │╒═╪═╕│  │╓─╁─╖│  ┃┌─╂─┐┃  ┗╃╄┙  ╶┼╴╺╋╸┠┼┨ ┝╋┥    ▋ ╲╱╲╱╳╳╳\n *   ║│╲ ╱│║  │║   ║│  ││ │ ││  │║ ┃ ║│  ┃│ ╿ │┃  ┍╅╆┓   ╵  ╹ ┗┷┛ └┸┘    ▌ ╱╲╱╲╳╳╳\n *   ╠╡ ╳ ╞╣  ├╢   ╟┤  ├┼─┼─┼┤  ├╫─╂─╫┤  ┣┿╾┼╼┿┫  ┕┛┖┚     ┌┄┄┐ ╎ ┏┅┅┓ ┋ ▍ ╲╱╲╱╳╳╳\n *   ║│╱ ╲│║  │║   ║│  ││ │ ││  │║ ┃ ║│  ┃│ ╽ │┃  ░░▒▒▓▓██ ┊  ┆ ╎ ╏  ┇ ┋ ▎\n *   ║└─╥─┘║  │╚═╤═╝│  │╘═╪═╛│  │╙─╀─╜│  ┃└─╂─┘┃  ░░▒▒▓▓██ ┊  ┆ ╎ ╏  ┇ ┋ ▏\n *   ╚══╩══╝  └──┴──┘  ╰──┴──╯  ╰──┴──╯  ┗━━┻━━┛           └╌╌┘ ╎ ┗╍╍┛ ┋  ▁▂▃▄▅▆▇█\n *\n * Source: https://www.w3.org/2001/06/utf-8-test/UTF-8-demo.html\n */\nfunction drawBoxDrawingChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: { [fontWeight: number]: string | ((xp: number, yp: number) => string) },\n  xOffset: number,\n  yOffset: number,\n  scaledCellWidth: number,\n  scaledCellHeight: number\n): void {\n  ctx.strokeStyle = ctx.fillStyle;\n  for (const [fontWeight, instructions] of Object.entries(charDefinition)) {\n    ctx.beginPath();\n    ctx.lineWidth = window.devicePixelRatio * Number.parseInt(fontWeight);\n    let actualInstructions: string;\n    if (typeof instructions === 'function') {\n      const xp = .15;\n      const yp = .15 / scaledCellHeight * scaledCellWidth;\n      actualInstructions = instructions(xp, yp);\n    } else {\n      actualInstructions = instructions;\n    }\n    for (const instruction of actualInstructions.split(' ')) {\n      const type = instruction[0];\n      const f = svgToCanvasInstructionMap[type];\n      if (!f) {\n        console.error(`Could not find drawing instructions for \"${type}\"`);\n        continue;\n      }\n      const args: string[] = instruction.substring(1).split(',');\n      if (!args[0] || !args[1]) {\n        continue;\n      }\n      f(ctx, translateArgs(args, scaledCellWidth, scaledCellHeight, xOffset, yOffset));\n    }\n    ctx.stroke();\n    ctx.closePath();\n  }\n}\n\nfunction clamp(value: number, max: number, min: number = 0): number {\n  return Math.max(Math.min(value, max), min);\n}\n\nconst svgToCanvasInstructionMap: { [index: string]: any } = {\n  'C': (ctx: CanvasRenderingContext2D, args: number[]) => ctx.bezierCurveTo(args[0], args[1], args[2], args[3], args[4], args[5]),\n  'L': (ctx: CanvasRenderingContext2D, args: number[]) => ctx.lineTo(args[0], args[1]),\n  'M': (ctx: CanvasRenderingContext2D, args: number[]) => ctx.moveTo(args[0], args[1])\n};\n\nfunction translateArgs(args: string[], cellWidth: number, cellHeight: number, xOffset: number, yOffset: number): number[] {\n  const result = args.map(e => parseFloat(e) || parseInt(e));\n\n  if (result.length < 2) {\n    throw new Error('Too few arguments for instruction');\n  }\n\n  for (let x = 0; x < result.length; x += 2) {\n    // Translate from 0-1 to 0-cellWidth\n    result[x] *= cellWidth;\n    // Ensure coordinate doesn't escape cell bounds and round to the nearest 0.5 to ensure a crisp\n    // line at 100% devicePixelRatio\n    if (result[x] !== 0) {\n      result[x] = clamp(Math.round(result[x] + 0.5) - 0.5, cellWidth, 0);\n    }\n    // Apply the cell's offset (ie. x*cellWidth)\n    result[x] += xOffset;\n  }\n\n  for (let y = 1; y < result.length; y += 2) {\n    // Translate from 0-1 to 0-cellHeight\n    result[y] *= cellHeight;\n    // Ensure coordinate doesn't escape cell bounds and round to the nearest 0.5 to ensure a crisp\n    // line at 100% devicePixelRatio\n    if (result[y] !== 0) {\n      result[y] = clamp(Math.round(result[y] + 0.5) - 0.5, cellHeight, 0);\n    }\n    // Apply the cell's offset (ie. x*cellHeight)\n    result[y] += yOffset;\n  }\n\n  return result;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport class GridCache<T> {\n  public cache: (T | undefined)[][];\n\n  public constructor() {\n    this.cache = [];\n  }\n\n  public resize(width: number, height: number): void {\n    for (let x = 0; x < width; x++) {\n      if (this.cache.length <= x) {\n        this.cache.push([]);\n      }\n      for (let y = this.cache[x].length; y < height; y++) {\n        this.cache[x].push(undefined);\n      }\n      this.cache[x].length = height;\n    }\n    this.cache.length = width;\n  }\n\n  public clear(): void {\n    for (let x = 0; x < this.cache.length; x++) {\n      for (let y = 0; y < this.cache[x].length; y++) {\n        this.cache[x][y] = undefined;\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from './BaseRenderLayer';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { is256Color } from 'browser/renderer/atlas/CharAtlasUtils';\nimport { IColorSet, ILinkifierEvent, ILinkifier, ILinkifier2 } from 'browser/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nexport class LinkRenderLayer extends BaseRenderLayer {\n  private _state: ILinkifierEvent | undefined;\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    rendererId: number,\n    linkifier: ILinkifier,\n    linkifier2: ILinkifier2,\n    @IBufferService bufferService: IBufferService,\n    @IOptionsService optionsService: IOptionsService\n  ) {\n    super(container, 'link', zIndex, true, colors, rendererId, bufferService, optionsService);\n    linkifier.onShowLinkUnderline(e => this._onShowLinkUnderline(e));\n    linkifier.onHideLinkUnderline(e => this._onHideLinkUnderline(e));\n\n    linkifier2.onShowLinkUnderline(e => this._onShowLinkUnderline(e));\n    linkifier2.onHideLinkUnderline(e => this._onHideLinkUnderline(e));\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state = undefined;\n  }\n\n  public reset(): void {\n    this._clearCurrentLink();\n  }\n\n  private _clearCurrentLink(): void {\n    if (this._state) {\n      this._clearCells(this._state.x1, this._state.y1, this._state.cols - this._state.x1, 1);\n      const middleRowCount = this._state.y2 - this._state.y1 - 1;\n      if (middleRowCount > 0) {\n        this._clearCells(0, this._state.y1 + 1, this._state.cols, middleRowCount);\n      }\n      this._clearCells(0, this._state.y2, this._state.x2, 1);\n      this._state = undefined;\n    }\n  }\n\n  private _onShowLinkUnderline(e: ILinkifierEvent): void {\n    if (e.fg === INVERTED_DEFAULT_COLOR) {\n      this._ctx.fillStyle = this._colors.background.css;\n    } else if (e.fg && is256Color(e.fg)) {\n      // 256 color support\n      this._ctx.fillStyle = this._colors.ansi[e.fg].css;\n    } else {\n      this._ctx.fillStyle = this._colors.foreground.css;\n    }\n\n    if (e.y1 === e.y2) {\n      // Single line link\n      this._fillBottomLineAtCells(e.x1, e.y1, e.x2 - e.x1);\n    } else {\n      // Multi-line link\n      this._fillBottomLineAtCells(e.x1, e.y1, e.cols - e.x1);\n      for (let y = e.y1 + 1; y < e.y2; y++) {\n        this._fillBottomLineAtCells(0, y, e.cols);\n      }\n      this._fillBottomLineAtCells(0, e.y2, e.x2);\n    }\n    this._state = e;\n  }\n\n  private _onHideLinkUnderline(e: ILinkifierEvent): void {\n    this._clearCurrentLink();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { TextRenderLayer } from 'browser/renderer/TextRenderLayer';\nimport { SelectionRenderLayer } from 'browser/renderer/SelectionRenderLayer';\nimport { CursorRenderLayer } from 'browser/renderer/CursorRenderLayer';\nimport { IRenderLayer, IRenderer, IRenderDimensions, IRequestRedrawEvent } from 'browser/renderer/Types';\nimport { LinkRenderLayer } from 'browser/renderer/LinkRenderLayer';\nimport { Disposable } from 'common/Lifecycle';\nimport { IColorSet, ILinkifier, ILinkifier2 } from 'browser/Types';\nimport { ICharSizeService } from 'browser/services/Services';\nimport { IBufferService, IOptionsService, IInstantiationService } from 'common/services/Services';\nimport { removeTerminalFromCache } from 'browser/renderer/atlas/CharAtlasCache';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IDecorationOptions, IDecoration } from 'xterm';\n\nlet nextRendererId = 1;\n\nexport class Renderer extends Disposable implements IRenderer {\n  private _id = nextRendererId++;\n\n  private _renderLayers: IRenderLayer[];\n  private _devicePixelRatio: number;\n\n  public dimensions: IRenderDimensions;\n\n  private _onRequestRedraw = new EventEmitter<IRequestRedrawEvent>();\n  public get onRequestRedraw(): IEvent<IRequestRedrawEvent> { return this._onRequestRedraw.event; }\n\n  constructor(\n    private _colors: IColorSet,\n    private readonly _screenElement: HTMLElement,\n    linkifier: ILinkifier,\n    linkifier2: ILinkifier2,\n    @IInstantiationService instantiationService: IInstantiationService,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    const allowTransparency = this._optionsService.rawOptions.allowTransparency;\n    this._renderLayers = [\n      instantiationService.createInstance(TextRenderLayer, this._screenElement, 0, this._colors, allowTransparency, this._id),\n      instantiationService.createInstance(SelectionRenderLayer, this._screenElement, 1, this._colors, this._id),\n      instantiationService.createInstance(LinkRenderLayer, this._screenElement, 2, this._colors, this._id, linkifier, linkifier2),\n      instantiationService.createInstance(CursorRenderLayer, this._screenElement, 3, this._colors, this._id, this._onRequestRedraw)\n    ];\n    this.dimensions = {\n      scaledCharWidth: 0,\n      scaledCharHeight: 0,\n      scaledCellWidth: 0,\n      scaledCellHeight: 0,\n      scaledCharLeft: 0,\n      scaledCharTop: 0,\n      scaledCanvasWidth: 0,\n      scaledCanvasHeight: 0,\n      canvasWidth: 0,\n      canvasHeight: 0,\n      actualCellWidth: 0,\n      actualCellHeight: 0\n    };\n    this._devicePixelRatio = window.devicePixelRatio;\n    this._updateDimensions();\n    this.onOptionsChanged();\n  }\n\n  public dispose(): void {\n    for (const l of this._renderLayers) {\n      l.dispose();\n    }\n    super.dispose();\n    removeTerminalFromCache(this._id);\n  }\n\n  public onDevicePixelRatioChange(): void {\n    // If the device pixel ratio changed, the char atlas needs to be regenerated\n    // and the terminal needs to refreshed\n    if (this._devicePixelRatio !== window.devicePixelRatio) {\n      this._devicePixelRatio = window.devicePixelRatio;\n      this.onResize(this._bufferService.cols, this._bufferService.rows);\n    }\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n    // Clear layers and force a full render\n    for (const l of this._renderLayers) {\n      l.setColors(this._colors);\n      l.reset();\n    }\n  }\n\n  public onResize(cols: number, rows: number): void {\n    // Update character and canvas dimensions\n    this._updateDimensions();\n\n    // Resize all render layers\n    for (const l of this._renderLayers) {\n      l.resize(this.dimensions);\n    }\n\n    // Resize the screen\n    this._screenElement.style.width = `${this.dimensions.canvasWidth}px`;\n    this._screenElement.style.height = `${this.dimensions.canvasHeight}px`;\n  }\n\n  public onCharSizeChanged(): void {\n    this.onResize(this._bufferService.cols, this._bufferService.rows);\n  }\n\n  public onBlur(): void {\n    this._runOperation(l => l.onBlur());\n  }\n\n  public onFocus(): void {\n    this._runOperation(l => l.onFocus());\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean = false): void {\n    this._runOperation(l => l.onSelectionChanged(start, end, columnSelectMode));\n  }\n\n  public onCursorMove(): void {\n    this._runOperation(l => l.onCursorMove());\n  }\n\n  public onOptionsChanged(): void {\n    this._runOperation(l => l.onOptionsChanged());\n  }\n\n  public clear(): void {\n    this._runOperation(l => l.reset());\n  }\n\n  private _runOperation(operation: (layer: IRenderLayer) => void): void {\n    for (const l of this._renderLayers) {\n      operation(l);\n    }\n  }\n\n  /**\n   * Performs the refresh loop callback, calling refresh only if a refresh is\n   * necessary before queueing up the next one.\n   */\n  public renderRows(start: number, end: number): void {\n    for (const l of this._renderLayers) {\n      l.onGridChanged(start, end);\n    }\n  }\n\n  public clearTextureAtlas(): void {\n    for (const layer of this._renderLayers) {\n      layer.clearTextureAtlas();\n    }\n  }\n\n  /**\n   * Recalculates the character and canvas dimensions.\n   */\n  private _updateDimensions(): void {\n    if (!this._charSizeService.hasValidSize) {\n      return;\n    }\n\n    // Calculate the scaled character width. Width is floored as it must be\n    // drawn to an integer grid in order for the CharAtlas \"stamps\" to not be\n    // blurry. When text is drawn to the grid not using the CharAtlas, it is\n    // clipped to ensure there is no overlap with the next cell.\n    this.dimensions.scaledCharWidth = Math.floor(this._charSizeService.width * window.devicePixelRatio);\n\n    // Calculate the scaled character height. Height is ceiled in case\n    // devicePixelRatio is a floating point number in order to ensure there is\n    // enough space to draw the character to the cell.\n    this.dimensions.scaledCharHeight = Math.ceil(this._charSizeService.height * window.devicePixelRatio);\n\n    // Calculate the scaled cell height, if lineHeight is not 1 then the value\n    // will be floored because since lineHeight can never be lower then 1, there\n    // is a guarentee that the scaled line height will always be larger than\n    // scaled char height.\n    this.dimensions.scaledCellHeight = Math.floor(this.dimensions.scaledCharHeight * this._optionsService.rawOptions.lineHeight);\n\n    // Calculate the y coordinate within a cell that text should draw from in\n    // order to draw in the center of a cell.\n    this.dimensions.scaledCharTop = this._optionsService.rawOptions.lineHeight === 1 ? 0 : Math.round((this.dimensions.scaledCellHeight - this.dimensions.scaledCharHeight) / 2);\n\n    // Calculate the scaled cell width, taking the letterSpacing into account.\n    this.dimensions.scaledCellWidth = this.dimensions.scaledCharWidth + Math.round(this._optionsService.rawOptions.letterSpacing);\n\n    // Calculate the x coordinate with a cell that text should draw from in\n    // order to draw in the center of a cell.\n    this.dimensions.scaledCharLeft = Math.floor(this._optionsService.rawOptions.letterSpacing / 2);\n\n    // Recalculate the canvas dimensions; scaled* define the actual number of\n    // pixel in the canvas\n    this.dimensions.scaledCanvasHeight = this._bufferService.rows * this.dimensions.scaledCellHeight;\n    this.dimensions.scaledCanvasWidth = this._bufferService.cols * this.dimensions.scaledCellWidth;\n\n    // The the size of the canvas on the page. It's very important that this\n    // rounds to nearest integer and not ceils as browsers often set\n    // window.devicePixelRatio as something like 1.100000023841858, when it's\n    // actually 1.1. Ceiling causes blurriness as the backing canvas image is 1\n    // pixel too large for the canvas element size.\n    this.dimensions.canvasHeight = Math.round(this.dimensions.scaledCanvasHeight / window.devicePixelRatio);\n    this.dimensions.canvasWidth = Math.round(this.dimensions.scaledCanvasWidth / window.devicePixelRatio);\n\n    // Get the _actual_ dimensions of an individual cell. This needs to be\n    // derived from the canvasWidth/Height calculated above which takes into\n    // account window.devicePixelRatio. ICharSizeService.width/height by itself\n    // is insufficient when the page is not at 100% zoom level as it's measured\n    // in CSS pixels, but the actual char size on the canvas can differ.\n    this.dimensions.actualCellHeight = this.dimensions.canvasHeight / this._bufferService.rows;\n    this.dimensions.actualCellWidth = this.dimensions.canvasWidth / this._bufferService.cols;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function throwIfFalsy<T>(value: T | undefined | null): T {\n  if (!value) {\n    throw new Error('value must not be falsy');\n  }\n  return value;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from 'browser/renderer/BaseRenderLayer';\nimport { IColorSet } from 'browser/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\ninterface ISelectionState {\n  start?: [number, number];\n  end?: [number, number];\n  columnSelectMode?: boolean;\n  ydisp?: number;\n}\n\nexport class SelectionRenderLayer extends BaseRenderLayer {\n  private _state!: ISelectionState;\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    rendererId: number,\n    @IBufferService bufferService: IBufferService,\n    @IOptionsService optionsService: IOptionsService\n  ) {\n    super(container, 'selection', zIndex, true, colors, rendererId, bufferService, optionsService);\n    this._clearState();\n  }\n\n  private _clearState(): void {\n    this._state = {\n      start: undefined,\n      end: undefined,\n      columnSelectMode: undefined,\n      ydisp: undefined\n    };\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._clearState();\n  }\n\n  public reset(): void {\n    if (this._state.start && this._state.end) {\n      this._clearState();\n      this._clearAll();\n    }\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    // Selection has not changed\n    if (!this._didStateChange(start, end, columnSelectMode, this._bufferService.buffer.ydisp)) {\n      return;\n    }\n\n    // Remove all selections\n    this._clearAll();\n\n    // Selection does not exist\n    if (!start || !end) {\n      this._clearState();\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._bufferService.buffer.ydisp;\n    const viewportEndRow = end[1] - this._bufferService.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._bufferService.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      this._state.ydisp = this._bufferService.buffer.ydisp;\n      return;\n    }\n\n    this._ctx.fillStyle = this._colors.selectionTransparent.css;\n\n    if (columnSelectMode) {\n      const startCol = start[0];\n      const width = end[0] - startCol;\n      const height = viewportCappedEndRow - viewportCappedStartRow + 1;\n      this._fillCells(startCol, viewportCappedStartRow, width, height);\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const startRowEndCol = viewportCappedStartRow === viewportEndRow ? end[0] : this._bufferService.cols;\n      this._fillCells(startCol, viewportCappedStartRow, startRowEndCol - startCol, 1);\n\n      // Draw middle rows\n      const middleRowsCount = Math.max(viewportCappedEndRow - viewportCappedStartRow - 1, 0);\n      this._fillCells(0, viewportCappedStartRow + 1, this._bufferService.cols, middleRowsCount);\n\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewportStartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        this._fillCells(0, viewportCappedEndRow, endCol, 1);\n      }\n    }\n\n    // Save state for next render\n    this._state.start = [start[0], start[1]];\n    this._state.end = [end[0], end[1]];\n    this._state.columnSelectMode = columnSelectMode;\n    this._state.ydisp = this._bufferService.buffer.ydisp;\n  }\n\n  private _didStateChange(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean, ydisp: number): boolean {\n    return !this._areCoordinatesEqual(start, this._state.start) ||\n      !this._areCoordinatesEqual(end, this._state.end) ||\n      columnSelectMode !== this._state.columnSelectMode ||\n      ydisp !== this._state.ydisp;\n  }\n\n  private _areCoordinatesEqual(coord1: [number, number] | undefined, coord2: [number, number] | undefined): boolean {\n    if (!coord1 || !coord2) {\n      return false;\n    }\n\n    return coord1[0] === coord2[0] && coord1[1] === coord2[1];\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { CharData, ICellData } from 'common/Types';\nimport { GridCache } from 'browser/renderer/GridCache';\nimport { BaseRenderLayer } from 'browser/renderer/BaseRenderLayer';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { NULL_CELL_CODE, Content } from 'common/buffer/Constants';\nimport { IColorSet } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { ICharacterJoinerService } from 'browser/services/Services';\nimport { JoinedCellData } from 'browser/services/CharacterJoinerService';\n\n/**\n * This CharData looks like a null character, which will forc a clear and render\n * when the character changes (a regular space ' ' character may not as it's\n * drawn state is a cleared cell).\n */\n// const OVERLAP_OWNED_CHAR_DATA: CharData = [null, '', 0, -1];\n\nexport class TextRenderLayer extends BaseRenderLayer {\n  private _state: GridCache<CharData>;\n  private _characterWidth: number = 0;\n  private _characterFont: string = '';\n  private _characterOverlapCache: { [key: string]: boolean } = {};\n  private _workCell = new CellData();\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    alpha: boolean,\n    rendererId: number,\n    @IBufferService bufferService: IBufferService,\n    @IOptionsService optionsService: IOptionsService,\n    @ICharacterJoinerService private readonly _characterJoinerService: ICharacterJoinerService\n  ) {\n    super(container, 'text', zIndex, alpha, colors, rendererId, bufferService, optionsService);\n    this._state = new GridCache<CharData>();\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n\n    // Clear the character width cache if the font or width has changed\n    const terminalFont = this._getFont(false, false);\n    if (this._characterWidth !== dim.scaledCharWidth || this._characterFont !== terminalFont) {\n      this._characterWidth = dim.scaledCharWidth;\n      this._characterFont = terminalFont;\n      this._characterOverlapCache = {};\n    }\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state.clear();\n    this._state.resize(this._bufferService.cols, this._bufferService.rows);\n  }\n\n  public reset(): void {\n    this._state.clear();\n    this._clearAll();\n  }\n\n  private _forEachCell(\n    firstRow: number,\n    lastRow: number,\n    callback: (\n      cell: ICellData,\n      x: number,\n      y: number\n    ) => void\n  ): void {\n    for (let y = firstRow; y <= lastRow; y++) {\n      const row = y + this._bufferService.buffer.ydisp;\n      const line = this._bufferService.buffer.lines.get(row);\n      const joinedRanges = this._characterJoinerService.getJoinedCharacters(row);\n      for (let x = 0; x < this._bufferService.cols; x++) {\n        line!.loadCell(x, this._workCell);\n        let cell = this._workCell;\n\n        // If true, indicates that the current character(s) to draw were joined.\n        let isJoined = false;\n        let lastCharX = x;\n\n        // The character to the left is a wide character, drawing is owned by\n        // the char at x-1\n        if (cell.getWidth() === 0) {\n          continue;\n        }\n\n        // Process any joined character ranges as needed. Because of how the\n        // ranges are produced, we know that they are valid for the characters\n        // and attributes of our input.\n        if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n          isJoined = true;\n          const range = joinedRanges.shift()!;\n\n          // We already know the exact start and end column of the joined range,\n          // so we get the string and width representing it directly\n          cell = new JoinedCellData(\n            this._workCell,\n            line!.translateToString(true, range[0], range[1]),\n            range[1] - range[0]\n          );\n\n          // Skip over the cells occupied by this range in the loop\n          lastCharX = range[1] - 1;\n        }\n\n        // If the character is an overlapping char and the character to the\n        // right is a space, take ownership of the cell to the right. We skip\n        // this check for joined characters because their rendering likely won't\n        // yield the same result as rendering the last character individually.\n        if (!isJoined && this._isOverlapping(cell)) {\n          // If the character is overlapping, we want to force a re-render on every\n          // frame. This is specifically to work around the case where two\n          // overlaping chars `a` and `b` are adjacent, the cursor is moved to b and a\n          // space is added. Without this, the first half of `b` would never\n          // get removed, and `a` would not re-render because it thinks it's\n          // already in the correct state.\n          // this._state.cache[x][y] = OVERLAP_OWNED_CHAR_DATA;\n          if (lastCharX < line!.length - 1 && line!.getCodePoint(lastCharX + 1) === NULL_CELL_CODE) {\n            // patch width to 2\n            cell.content &= ~Content.WIDTH_MASK;\n            cell.content |= 2 << Content.WIDTH_SHIFT;\n            // this._clearChar(x + 1, y);\n            // The overlapping char's char data will force a clear and render when the\n            // overlapping char is no longer to the left of the character and also when\n            // the space changes to another character.\n            // this._state.cache[x + 1][y] = OVERLAP_OWNED_CHAR_DATA;\n          }\n        }\n\n        callback(\n          cell,\n          x,\n          y\n        );\n\n        x = lastCharX;\n      }\n    }\n  }\n\n  /**\n   * Draws the background for a specified range of columns. Tries to batch adjacent cells of the\n   * same color together to reduce draw calls.\n   */\n  private _drawBackground(firstRow: number, lastRow: number): void {\n    const ctx = this._ctx;\n    const cols = this._bufferService.cols;\n    let startX: number = 0;\n    let startY: number = 0;\n    let prevFillStyle: string | null = null;\n\n    ctx.save();\n\n    this._forEachCell(firstRow, lastRow, (cell, x, y) => {\n      // libvte and xterm both draw the background (but not foreground) of invisible characters,\n      // so we should too.\n      let nextFillStyle = null; // null represents default background color\n\n      if (cell.isInverse()) {\n        if (cell.isFgDefault()) {\n          nextFillStyle = this._colors.foreground.css;\n        } else if (cell.isFgRGB()) {\n          nextFillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n        } else {\n          nextFillStyle = this._colors.ansi[cell.getFgColor()].css;\n        }\n      } else if (cell.isBgRGB()) {\n        nextFillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n      } else if (cell.isBgPalette()) {\n        nextFillStyle = this._colors.ansi[cell.getBgColor()].css;\n      }\n\n      if (prevFillStyle === null) {\n        // This is either the first iteration, or the default background was set. Either way, we\n        // don't need to draw anything.\n        startX = x;\n        startY = y;\n      }\n\n      if (y !== startY) {\n        // our row changed, draw the previous row\n        ctx.fillStyle = prevFillStyle || '';\n        this._fillCells(startX, startY, cols - startX, 1);\n        startX = x;\n        startY = y;\n      } else if (prevFillStyle !== nextFillStyle) {\n        // our color changed, draw the previous characters in this row\n        ctx.fillStyle = prevFillStyle || '';\n        this._fillCells(startX, startY, x - startX, 1);\n        startX = x;\n        startY = y;\n      }\n\n      prevFillStyle = nextFillStyle;\n    });\n\n    // flush the last color we encountered\n    if (prevFillStyle !== null) {\n      ctx.fillStyle = prevFillStyle;\n      this._fillCells(startX, startY, cols - startX, 1);\n    }\n\n    ctx.restore();\n  }\n\n  private _drawForeground(firstRow: number, lastRow: number): void {\n    this._forEachCell(firstRow, lastRow, (cell, x, y) => {\n      if (cell.isInvisible()) {\n        return;\n      }\n      this._drawChars(cell, x, y);\n      if (cell.isUnderline() || cell.isStrikethrough()) {\n        this._ctx.save();\n\n        if (cell.isInverse()) {\n          if (cell.isBgDefault()) {\n            this._ctx.fillStyle = this._colors.background.css;\n          } else if (cell.isBgRGB()) {\n            this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n          } else {\n            let bg = cell.getBgColor();\n            if (this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && bg < 8) {\n              bg += 8;\n            }\n            this._ctx.fillStyle = this._colors.ansi[bg].css;\n          }\n        } else {\n          if (cell.isFgDefault()) {\n            this._ctx.fillStyle = this._colors.foreground.css;\n          } else if (cell.isFgRGB()) {\n            this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n          } else {\n            let fg = cell.getFgColor();\n            if (this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n              fg += 8;\n            }\n            this._ctx.fillStyle = this._colors.ansi[fg].css;\n          }\n        }\n\n        if (cell.isStrikethrough()) {\n          this._fillMiddleLineAtCells(x, y, cell.getWidth());\n        }\n        if (cell.isUnderline()) {\n          this._fillBottomLineAtCells(x, y, cell.getWidth());\n        }\n        this._ctx.restore();\n      }\n    });\n  }\n\n  public onGridChanged(firstRow: number, lastRow: number): void {\n    // Resize has not been called yet\n    if (this._state.cache.length === 0) {\n      return;\n    }\n\n    if (this._charAtlas) {\n      this._charAtlas.beginFrame();\n    }\n\n    this._clearCells(0, firstRow, this._bufferService.cols, lastRow - firstRow + 1);\n    this._drawBackground(firstRow, lastRow);\n    this._drawForeground(firstRow, lastRow);\n  }\n\n  public onOptionsChanged(): void {\n    this._setTransparency(this._optionsService.rawOptions.allowTransparency);\n  }\n\n  /**\n   * Whether a character is overlapping to the next cell.\n   */\n  private _isOverlapping(cell: ICellData): boolean {\n    // Only single cell characters can be overlapping, rendering issues can\n    // occur without this check\n    if (cell.getWidth() !== 1) {\n      return false;\n    }\n\n    // We assume that any ascii character will not overlap\n    if (cell.getCode() < 256) {\n      return false;\n    }\n\n    const chars = cell.getChars();\n\n    // Deliver from cache if available\n    if (this._characterOverlapCache.hasOwnProperty(chars)) {\n      return this._characterOverlapCache[chars];\n    }\n\n    // Setup the font\n    this._ctx.save();\n    this._ctx.font = this._characterFont;\n\n    // Measure the width of the character, but Math.floor it\n    // because that is what the renderer does when it calculates\n    // the character dimensions we are comparing against\n    const overlaps = Math.floor(this._ctx.measureText(chars).width) > this._characterWidth;\n\n    // Restore the original context\n    this._ctx.restore();\n\n    // Cache and return\n    this._characterOverlapCache[chars] = overlaps;\n    return overlaps;\n  }\n\n  /**\n   * Clear the charcater at the cell specified.\n   * @param x The column of the char.\n   * @param y The row of the char.\n   */\n  // private _clearChar(x: number, y: number): void {\n  //   let colsToClear = 1;\n  //   // Clear the adjacent character if it was wide\n  //   const state = this._state.cache[x][y];\n  //   if (state && state[CHAR_DATA_WIDTH_INDEX] === 2) {\n  //     colsToClear = 2;\n  //   }\n  //   this.clearCells(x, y, colsToClear, 1);\n  // }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IGlyphIdentifier } from 'browser/renderer/atlas/Types';\nimport { IDisposable } from 'common/Types';\n\nexport abstract class BaseCharAtlas implements IDisposable {\n  private _didWarmUp: boolean = false;\n\n  public dispose(): void { }\n\n  /**\n   * Perform any work needed to warm the cache before it can be used. May be called multiple times.\n   * Implement _doWarmUp instead if you only want to get called once.\n   */\n  public warmUp(): void {\n    if (!this._didWarmUp) {\n      this._doWarmUp();\n      this._didWarmUp = true;\n    }\n  }\n\n  /**\n   * Perform any work needed to warm the cache before it can be used. Used by the default\n   * implementation of warmUp(), and will only be called once.\n   */\n  private _doWarmUp(): void { }\n\n  public clear(): void { }\n\n  /**\n   * Called when we start drawing a new frame.\n   *\n   * TODO: We rely on this getting called by TextRenderLayer. This should really be called by\n   * Renderer instead, but we need to make Renderer the source-of-truth for the char atlas, instead\n   * of BaseRenderLayer.\n   */\n  public beginFrame(): void { }\n\n  /**\n   * May be called before warmUp finishes, however it is okay for the implementation to\n   * do nothing and return false in that case.\n   *\n   * @param ctx Where to draw the character onto.\n   * @param glyph Information about what to draw\n   * @param x The position on the context to start drawing at\n   * @param y The position on the context to start drawing at\n   * @returns The success state. True if we drew the character.\n   */\n  public abstract draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { generateConfig, configEquals } from 'browser/renderer/atlas/CharAtlasUtils';\nimport { BaseCharAtlas } from 'browser/renderer/atlas/BaseCharAtlas';\nimport { DynamicCharAtlas } from 'browser/renderer/atlas/DynamicCharAtlas';\nimport { ICharAtlasConfig } from 'browser/renderer/atlas/Types';\nimport { IColorSet } from 'browser/Types';\nimport { ITerminalOptions } from 'common/services/Services';\n\ninterface ICharAtlasCacheEntry {\n  atlas: BaseCharAtlas;\n  config: ICharAtlasConfig;\n  // N.B. This implementation potentially holds onto copies of the terminal forever, so\n  // this may cause memory leaks.\n  ownedBy: number[];\n}\n\nconst charAtlasCache: ICharAtlasCacheEntry[] = [];\n\n/**\n * Acquires a char atlas, either generating a new one or returning an existing\n * one that is in use by another terminal.\n */\nexport function acquireCharAtlas(\n  options: ITerminalOptions,\n  rendererId: number,\n  colors: IColorSet,\n  scaledCharWidth: number,\n  scaledCharHeight: number\n): BaseCharAtlas {\n  const newConfig = generateConfig(scaledCharWidth, scaledCharHeight, options, colors);\n\n  // Check to see if the renderer already owns this config\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const entry = charAtlasCache[i];\n    const ownedByIndex = entry.ownedBy.indexOf(rendererId);\n    if (ownedByIndex >= 0) {\n      if (configEquals(entry.config, newConfig)) {\n        return entry.atlas;\n      }\n      // The configs differ, release the renderer from the entry\n      if (entry.ownedBy.length === 1) {\n        entry.atlas.dispose();\n        charAtlasCache.splice(i, 1);\n      } else {\n        entry.ownedBy.splice(ownedByIndex, 1);\n      }\n      break;\n    }\n  }\n\n  // Try match a char atlas from the cache\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const entry = charAtlasCache[i];\n    if (configEquals(entry.config, newConfig)) {\n      // Add the renderer to the cache entry and return\n      entry.ownedBy.push(rendererId);\n      return entry.atlas;\n    }\n  }\n\n  const newEntry: ICharAtlasCacheEntry = {\n    atlas: new DynamicCharAtlas(\n      document,\n      newConfig\n    ),\n    config: newConfig,\n    ownedBy: [rendererId]\n  };\n  charAtlasCache.push(newEntry);\n  return newEntry.atlas;\n}\n\n/**\n * Removes a terminal reference from the cache, allowing its memory to be freed.\n */\nexport function removeTerminalFromCache(rendererId: number): void {\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const index = charAtlasCache[i].ownedBy.indexOf(rendererId);\n    if (index !== -1) {\n      if (charAtlasCache[i].ownedBy.length === 1) {\n        // Remove the cache entry if it's the only renderer\n        charAtlasCache[i].atlas.dispose();\n        charAtlasCache.splice(i, 1);\n      } else {\n        // Remove the reference from the cache entry\n        charAtlasCache[i].ownedBy.splice(index, 1);\n      }\n      break;\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharAtlasConfig } from 'browser/renderer/atlas/Types';\nimport { DEFAULT_COLOR } from 'common/buffer/Constants';\nimport { IColorSet, IPartialColorSet } from 'browser/Types';\nimport { ITerminalOptions } from 'common/services/Services';\n\nexport function generateConfig(scaledCharWidth: number, scaledCharHeight: number, options: ITerminalOptions, colors: IColorSet): ICharAtlasConfig {\n  // null out some fields that don't matter\n  const clonedColors: IPartialColorSet = {\n    foreground: colors.foreground,\n    background: colors.background,\n    cursor: undefined,\n    cursorAccent: undefined,\n    selection: undefined,\n    ansi: [...colors.ansi]\n  };\n  return {\n    devicePixelRatio: window.devicePixelRatio,\n    scaledCharWidth,\n    scaledCharHeight,\n    fontFamily: options.fontFamily,\n    fontSize: options.fontSize,\n    fontWeight: options.fontWeight,\n    fontWeightBold: options.fontWeightBold,\n    allowTransparency: options.allowTransparency,\n    colors: clonedColors\n  };\n}\n\nexport function configEquals(a: ICharAtlasConfig, b: ICharAtlasConfig): boolean {\n  for (let i = 0; i < a.colors.ansi.length; i++) {\n    if (a.colors.ansi[i].rgba !== b.colors.ansi[i].rgba) {\n      return false;\n    }\n  }\n  return a.devicePixelRatio === b.devicePixelRatio &&\n      a.fontFamily === b.fontFamily &&\n      a.fontSize === b.fontSize &&\n      a.fontWeight === b.fontWeight &&\n      a.fontWeightBold === b.fontWeightBold &&\n      a.allowTransparency === b.allowTransparency &&\n      a.scaledCharWidth === b.scaledCharWidth &&\n      a.scaledCharHeight === b.scaledCharHeight &&\n      a.colors.foreground === b.colors.foreground &&\n      a.colors.background === b.colors.background;\n}\n\nexport function is256Color(colorCode: number): boolean {\n  return colorCode < DEFAULT_COLOR;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isFirefox, isLegacyEdge } from 'common/Platform';\n\nexport const INVERTED_DEFAULT_COLOR = 257;\nexport const DIM_OPACITY = 0.5;\n// The text baseline is set conditionally by browser. Using 'ideographic' for Firefox or Legacy Edge would\n// result in truncated text (Issue 3353). Using 'bottom' for Chrome would result in slightly\n// unaligned Powerline fonts (PR 3356#issuecomment-850928179).\nexport const TEXT_BASELINE: CanvasTextBaseline = isFirefox || isLegacyEdge ? 'bottom' : 'ideographic';\n\nexport const CHAR_ATLAS_CELL_SPACING = 1;\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { DIM_OPACITY, INVERTED_DEFAULT_COLOR, TEXT_BASELINE } from 'browser/renderer/atlas/Constants';\nimport { IGlyphIdentifier, ICharAtlasConfig } from 'browser/renderer/atlas/Types';\nimport { BaseCharAtlas } from 'browser/renderer/atlas/BaseCharAtlas';\nimport { DEFAULT_ANSI_COLORS } from 'browser/ColorManager';\nimport { LRUMap } from 'browser/renderer/atlas/LRUMap';\nimport { isFirefox, isSafari } from 'common/Platform';\nimport { IColor } from 'browser/Types';\nimport { throwIfFalsy } from 'browser/renderer/RendererUtils';\nimport { color } from 'browser/Color';\n\n// In practice we're probably never going to exhaust a texture this large. For debugging purposes,\n// however, it can be useful to set this to a really tiny value, to verify that LRU eviction works.\nconst TEXTURE_WIDTH = 1024;\nconst TEXTURE_HEIGHT = 1024;\n\nconst TRANSPARENT_COLOR = {\n  css: 'rgba(0, 0, 0, 0)',\n  rgba: 0\n};\n\n// Drawing to the cache is expensive: If we have to draw more than this number of glyphs to the\n// cache in a single frame, give up on trying to cache anything else, and try to finish the current\n// frame ASAP.\n//\n// This helps to limit the amount of damage a program can do when it would otherwise thrash the\n// cache.\nconst FRAME_CACHE_DRAW_LIMIT = 100;\n\n/**\n * The number of milliseconds to wait before generating the ImageBitmap, this is to debounce/batch\n * the operation as window.createImageBitmap is asynchronous.\n */\nconst GLYPH_BITMAP_COMMIT_DELAY = 100;\n\ninterface IGlyphCacheValue {\n  index: number;\n  isEmpty: boolean;\n  inBitmap: boolean;\n}\n\nexport function getGlyphCacheKey(glyph: IGlyphIdentifier): number {\n  // Note that this only returns a valid key when code < 256\n  // Layout:\n  // 0b00000000000000000000000000000001: italic (1)\n  // 0b00000000000000000000000000000010: dim (1)\n  // 0b00000000000000000000000000000100: bold (1)\n  // 0b00000000000000000000111111111000: fg (9)\n  // 0b00000000000111111111000000000000: bg (9)\n  // 0b00011111111000000000000000000000: code (8)\n  // 0b11100000000000000000000000000000: unused (3)\n  return glyph.code << 21 | glyph.bg << 12 | glyph.fg << 3 | (glyph.bold ? 0 : 4) + (glyph.dim ? 0 : 2) + (glyph.italic ? 0 : 1);\n}\n\nexport class DynamicCharAtlas extends BaseCharAtlas {\n  // An ordered map that we're using to keep track of where each glyph is in the atlas texture.\n  // It's ordered so that we can determine when to remove the old entries.\n  private _cacheMap: LRUMap<IGlyphCacheValue>;\n\n  // The texture that the atlas is drawn to\n  private _cacheCanvas: HTMLCanvasElement;\n  private _cacheCtx: CanvasRenderingContext2D;\n\n  // A temporary context that glyphs are drawn to before being transfered to the atlas.\n  private _tmpCtx: CanvasRenderingContext2D;\n\n  // The number of characters stored in the atlas by width/height\n  private _width: number;\n  private _height: number;\n\n  private _drawToCacheCount: number = 0;\n\n  // An array of glyph keys that are waiting on the bitmap to be generated.\n  private _glyphsWaitingOnBitmap: IGlyphCacheValue[] = [];\n\n  // The timeout that is used to batch bitmap generation so it's not requested for every new glyph.\n  private _bitmapCommitTimeout: number | null = null;\n\n  // The bitmap to draw from, this is much faster on other browsers than others.\n  private _bitmap: ImageBitmap | null = null;\n\n  constructor(document: Document, private _config: ICharAtlasConfig) {\n    super();\n    this._cacheCanvas = document.createElement('canvas');\n    this._cacheCanvas.width = TEXTURE_WIDTH;\n    this._cacheCanvas.height = TEXTURE_HEIGHT;\n    // The canvas needs alpha because we use clearColor to convert the background color to alpha.\n    // It might also contain some characters with transparent backgrounds if allowTransparency is\n    // set.\n    this._cacheCtx = throwIfFalsy(this._cacheCanvas.getContext('2d', { alpha: true }));\n\n    const tmpCanvas = document.createElement('canvas');\n    tmpCanvas.width = this._config.scaledCharWidth;\n    tmpCanvas.height = this._config.scaledCharHeight;\n    this._tmpCtx = throwIfFalsy(tmpCanvas.getContext('2d', { alpha: this._config.allowTransparency }));\n\n    this._width = Math.floor(TEXTURE_WIDTH / this._config.scaledCharWidth);\n    this._height = Math.floor(TEXTURE_HEIGHT / this._config.scaledCharHeight);\n    const capacity = this._width * this._height;\n    this._cacheMap = new LRUMap(capacity);\n    this._cacheMap.prealloc(capacity);\n\n    // This is useful for debugging\n    // document.body.appendChild(this._cacheCanvas);\n  }\n\n  public dispose(): void {\n    if (this._bitmapCommitTimeout !== null) {\n      window.clearTimeout(this._bitmapCommitTimeout);\n      this._bitmapCommitTimeout = null;\n    }\n  }\n\n  public beginFrame(): void {\n    this._drawToCacheCount = 0;\n  }\n\n  public clear(): void {\n    if (this._cacheMap.size > 0) {\n      const capacity = this._width * this._height;\n      this._cacheMap = new LRUMap(capacity);\n      this._cacheMap.prealloc(capacity);\n    }\n    this._cacheCtx.clearRect(0, 0, TEXTURE_WIDTH, TEXTURE_HEIGHT);\n    this._tmpCtx.clearRect(0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight);\n  }\n\n  public draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean {\n    // Space is always an empty cell, special case this as it's so common\n    if (glyph.code === 32) {\n      return true;\n    }\n\n    // Exit early for uncachable glyphs\n    if (!this._canCache(glyph)) {\n      return false;\n    }\n\n    const glyphKey = getGlyphCacheKey(glyph);\n    const cacheValue = this._cacheMap.get(glyphKey);\n    if (cacheValue !== null && cacheValue !== undefined) {\n      this._drawFromCache(ctx, cacheValue, x, y);\n      return true;\n    }\n    if (this._drawToCacheCount < FRAME_CACHE_DRAW_LIMIT) {\n      let index;\n      if (this._cacheMap.size < this._cacheMap.capacity) {\n        index = this._cacheMap.size;\n      } else {\n        // we're out of space, so our call to set will delete this item\n        index = this._cacheMap.peek()!.index;\n      }\n      const cacheValue = this._drawToCache(glyph, index);\n      this._cacheMap.set(glyphKey, cacheValue);\n      this._drawFromCache(ctx, cacheValue, x, y);\n      return true;\n    }\n    return false;\n  }\n\n  private _canCache(glyph: IGlyphIdentifier): boolean {\n    // Only cache ascii and extended characters for now, to be safe. In the future, we could do\n    // something more complicated to determine the expected width of a character.\n    //\n    // If we switch the renderer over to webgl at some point, we may be able to use blending modes\n    // to draw overlapping glyphs from the atlas:\n    // https://github.com/servo/webrender/issues/464#issuecomment-255632875\n    // https://webglfundamentals.org/webgl/lessons/webgl-text-texture.html\n    return glyph.code < 256;\n  }\n\n  private _toCoordinateX(index: number): number {\n    return (index % this._width) * this._config.scaledCharWidth;\n  }\n\n  private _toCoordinateY(index: number): number {\n    return Math.floor(index / this._width) * this._config.scaledCharHeight;\n  }\n\n  private _drawFromCache(\n    ctx: CanvasRenderingContext2D,\n    cacheValue: IGlyphCacheValue,\n    x: number,\n    y: number\n  ): void {\n    // We don't actually need to do anything if this is whitespace.\n    if (cacheValue.isEmpty) {\n      return;\n    }\n    const cacheX = this._toCoordinateX(cacheValue.index);\n    const cacheY = this._toCoordinateY(cacheValue.index);\n    ctx.drawImage(\n      cacheValue.inBitmap ? this._bitmap! : this._cacheCanvas,\n      cacheX,\n      cacheY,\n      this._config.scaledCharWidth,\n      this._config.scaledCharHeight,\n      x,\n      y,\n      this._config.scaledCharWidth,\n      this._config.scaledCharHeight\n    );\n  }\n\n  private _getColorFromAnsiIndex(idx: number): IColor {\n    if (idx < this._config.colors.ansi.length) {\n      return this._config.colors.ansi[idx];\n    }\n    return DEFAULT_ANSI_COLORS[idx];\n  }\n\n  private _getBackgroundColor(glyph: IGlyphIdentifier): IColor {\n    if (this._config.allowTransparency) {\n      // The background color might have some transparency, so we need to render it as fully\n      // transparent in the atlas. Otherwise we'd end up drawing the transparent background twice\n      // around the anti-aliased edges of the glyph, and it would look too dark.\n      return TRANSPARENT_COLOR;\n    }\n    if (glyph.bg === INVERTED_DEFAULT_COLOR) {\n      return this._config.colors.foreground;\n    }\n    if (glyph.bg < 256) {\n      return this._getColorFromAnsiIndex(glyph.bg);\n    }\n    return this._config.colors.background;\n  }\n\n  private _getForegroundColor(glyph: IGlyphIdentifier): IColor {\n    if (glyph.fg === INVERTED_DEFAULT_COLOR) {\n      return color.opaque(this._config.colors.background);\n    }\n    if (glyph.fg < 256) {\n      // 256 color support\n      return this._getColorFromAnsiIndex(glyph.fg);\n    }\n    return this._config.colors.foreground;\n  }\n\n  // TODO: We do this (or something similar) in multiple places. We should split this off\n  // into a shared function.\n  private _drawToCache(glyph: IGlyphIdentifier, index: number): IGlyphCacheValue {\n    this._drawToCacheCount++;\n\n    this._tmpCtx.save();\n\n    // draw the background\n    const backgroundColor = this._getBackgroundColor(glyph);\n    // Use a 'copy' composite operation to clear any existing glyph out of _tmpCtxWithAlpha, regardless of\n    // transparency in backgroundColor\n    this._tmpCtx.globalCompositeOperation = 'copy';\n    this._tmpCtx.fillStyle = backgroundColor.css;\n    this._tmpCtx.fillRect(0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight);\n    this._tmpCtx.globalCompositeOperation = 'source-over';\n\n    // draw the foreground/glyph\n    const fontWeight = glyph.bold ? this._config.fontWeightBold : this._config.fontWeight;\n    const fontStyle = glyph.italic ? 'italic' : '';\n    this._tmpCtx.font =\n      `${fontStyle} ${fontWeight} ${this._config.fontSize * this._config.devicePixelRatio}px ${this._config.fontFamily}`;\n    this._tmpCtx.textBaseline = TEXT_BASELINE;\n\n    this._tmpCtx.fillStyle = this._getForegroundColor(glyph).css;\n\n    // Apply alpha to dim the character\n    if (glyph.dim) {\n      this._tmpCtx.globalAlpha = DIM_OPACITY;\n    }\n    // Draw the character\n    this._tmpCtx.fillText(glyph.chars, 0, this._config.scaledCharHeight);\n\n    // clear the background from the character to avoid issues with drawing over the previous\n    // character if it extends past it's bounds\n    let imageData = this._tmpCtx.getImageData(\n      0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight\n    );\n    let isEmpty = false;\n    if (!this._config.allowTransparency) {\n      isEmpty = clearColor(imageData, backgroundColor);\n    }\n\n    // If this charcater is underscore and empty, shift it up until it is visible, try for a maximum\n    // of 5 pixels.\n    if (isEmpty && glyph.chars === '_' && !this._config.allowTransparency) {\n      for (let offset = 1; offset <= 5; offset++) {\n        // Draw the character\n        this._tmpCtx.fillText(glyph.chars, 0, this._config.scaledCharHeight - offset);\n\n        // clear the background from the character to avoid issues with drawing over the previous\n        // character if it extends past it's bounds\n        imageData = this._tmpCtx.getImageData(\n          0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight\n        );\n        isEmpty = clearColor(imageData, backgroundColor);\n        if (!isEmpty) {\n          break;\n        }\n      }\n    }\n\n    this._tmpCtx.restore();\n\n    // copy the data from imageData to _cacheCanvas\n    const x = this._toCoordinateX(index);\n    const y = this._toCoordinateY(index);\n    // putImageData doesn't do any blending, so it will overwrite any existing cache entry for us\n    this._cacheCtx.putImageData(imageData, x, y);\n\n    // Add the glyph and queue it to the bitmap (if the browser supports it)\n    const cacheValue = {\n      index,\n      isEmpty,\n      inBitmap: false\n    };\n    this._addGlyphToBitmap(cacheValue);\n\n    return cacheValue;\n  }\n\n  private _addGlyphToBitmap(cacheValue: IGlyphCacheValue): void {\n    // Support is patchy for createImageBitmap at the moment, pass a canvas back\n    // if support is lacking as drawImage works there too. Firefox is also\n    // included here as ImageBitmap appears both buggy and has horrible\n    // performance (tested on v55).\n    if (!('createImageBitmap' in window) || isFirefox || isSafari) {\n      return;\n    }\n\n    // Add the glyph to the queue\n    this._glyphsWaitingOnBitmap.push(cacheValue);\n\n    // Check if bitmap generation timeout already exists\n    if (this._bitmapCommitTimeout !== null) {\n      return;\n    }\n\n    this._bitmapCommitTimeout = window.setTimeout(() => this._generateBitmap(), GLYPH_BITMAP_COMMIT_DELAY);\n  }\n\n  private _generateBitmap(): void {\n    const glyphsMovingToBitmap = this._glyphsWaitingOnBitmap;\n    this._glyphsWaitingOnBitmap = [];\n    window.createImageBitmap(this._cacheCanvas).then(bitmap => {\n      // Set bitmap\n      this._bitmap = bitmap;\n\n      // Mark all new glyphs as in bitmap, excluding glyphs that came in after\n      // the bitmap was requested\n      for (let i = 0; i < glyphsMovingToBitmap.length; i++) {\n        const value = glyphsMovingToBitmap[i];\n        // It doesn't matter if the value was already evicted, it will be\n        // released from memory after this block if so.\n        value.inBitmap = true;\n      }\n    });\n    this._bitmapCommitTimeout = null;\n  }\n}\n\n// This is used for debugging the renderer, just swap out `new DynamicCharAtlas` with\n// `new NoneCharAtlas`.\nexport class NoneCharAtlas extends BaseCharAtlas {\n  constructor(document: Document, config: ICharAtlasConfig) {\n    super();\n  }\n\n  public draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean {\n    return false;\n  }\n}\n\n/**\n * Makes a partiicular rgb color in an ImageData completely transparent.\n * @returns True if the result is \"empty\", meaning all pixels are fully transparent.\n */\nfunction clearColor(imageData: ImageData, color: IColor): boolean {\n  let isEmpty = true;\n  const r = color.rgba >>> 24;\n  const g = color.rgba >>> 16 & 0xFF;\n  const b = color.rgba >>> 8 & 0xFF;\n  for (let offset = 0; offset < imageData.data.length; offset += 4) {\n    if (imageData.data[offset] === r &&\n        imageData.data[offset + 1] === g &&\n        imageData.data[offset + 2] === b) {\n      imageData.data[offset + 3] = 0;\n    } else {\n      isEmpty = false;\n    }\n  }\n  return isEmpty;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface ILinkedListNode<T> {\n  prev: ILinkedListNode<T> | null;\n  next: ILinkedListNode<T> | null;\n  key: number | null;\n  value: T | null;\n}\n\nexport class LRUMap<T> {\n  private _map: { [key: number]: ILinkedListNode<T> } = {};\n  private _head: ILinkedListNode<T> | null = null;\n  private _tail: ILinkedListNode<T> | null = null;\n  private _nodePool: ILinkedListNode<T>[] = [];\n  public size: number = 0;\n\n  constructor(public capacity: number) { }\n\n  private _unlinkNode(node: ILinkedListNode<T>): void {\n    const prev = node.prev;\n    const next = node.next;\n    if (node === this._head) {\n      this._head = next;\n    }\n    if (node === this._tail) {\n      this._tail = prev;\n    }\n    if (prev !== null) {\n      prev.next = next;\n    }\n    if (next !== null) {\n      next.prev = prev;\n    }\n  }\n\n  private _appendNode(node: ILinkedListNode<T>): void {\n    const tail = this._tail;\n    if (tail !== null) {\n      tail.next = node;\n    }\n    node.prev = tail;\n    node.next = null;\n    this._tail = node;\n    if (this._head === null) {\n      this._head = node;\n    }\n  }\n\n  /**\n   * Preallocate a bunch of linked-list nodes. Allocating these nodes ahead of time means that\n   * they're more likely to live next to each other in memory, which seems to improve performance.\n   *\n   * Each empty object only consumes about 60 bytes of memory, so this is pretty cheap, even for\n   * large maps.\n   */\n  public prealloc(count: number): void {\n    const nodePool = this._nodePool;\n    for (let i = 0; i < count; i++) {\n      nodePool.push({\n        prev: null,\n        next: null,\n        key: null,\n        value: null\n      });\n    }\n  }\n\n  public get(key: number): T | null {\n    // This is unsafe: We're assuming our keyspace doesn't overlap with Object.prototype. However,\n    // it's faster than calling hasOwnProperty, and in our case, it would never overlap.\n    const node = this._map[key];\n    if (node !== undefined) {\n      this._unlinkNode(node);\n      this._appendNode(node);\n      return node.value;\n    }\n    return null;\n  }\n\n  /**\n   * Gets a value from a key without marking it as the most recently used item.\n   */\n  public peekValue(key: number): T | null {\n    const node = this._map[key];\n    if (node !== undefined) {\n      return node.value;\n    }\n    return null;\n  }\n\n  public peek(): T | null {\n    const head = this._head;\n    return head === null ? null : head.value;\n  }\n\n  public set(key: number, value: T): void {\n    // This is unsafe: See note above.\n    let node = this._map[key];\n    if (node !== undefined) {\n      // already exists, we just need to mutate it and move it to the end of the list\n      node = this._map[key];\n      this._unlinkNode(node);\n      node.value = value;\n    } else if (this.size >= this.capacity) {\n      // we're out of space: recycle the head node, move it to the tail\n      node = this._head!;\n      this._unlinkNode(node);\n      delete this._map[node.key!];\n      node.key = key;\n      node.value = value;\n      this._map[key] = node;\n    } else {\n      // make a new element\n      const nodePool = this._nodePool;\n      if (nodePool.length > 0) {\n        // use a preallocated node if we can\n        node = nodePool.pop()!;\n        node.key = key;\n        node.value = value;\n      } else {\n        node = {\n          prev: null,\n          next: null,\n          key,\n          value\n        };\n      }\n      this._map[key] = node;\n      this.size++;\n    }\n    this._appendNode(node);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderer, IRenderDimensions, IRequestRedrawEvent } from 'browser/renderer/Types';\nimport { BOLD_CLASS, ITALIC_CLASS, CURSOR_CLASS, CURSOR_STYLE_BLOCK_CLASS, CURSOR_BLINK_CLASS, CURSOR_STYLE_BAR_CLASS, CURSOR_STYLE_UNDERLINE_CLASS, DomRendererRowFactory } from 'browser/renderer/dom/DomRendererRowFactory';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { Disposable } from 'common/Lifecycle';\nimport { IColorSet, ILinkifierEvent, ILinkifier, ILinkifier2 } from 'browser/Types';\nimport { ICharSizeService } from 'browser/services/Services';\nimport { IOptionsService, IBufferService, IInstantiationService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { color } from 'browser/Color';\nimport { removeElementFromParent } from 'browser/Dom';\n\nconst TERMINAL_CLASS_PREFIX = 'xterm-dom-renderer-owner-';\nconst ROW_CONTAINER_CLASS = 'xterm-rows';\nconst FG_CLASS_PREFIX = 'xterm-fg-';\nconst BG_CLASS_PREFIX = 'xterm-bg-';\nconst FOCUS_CLASS = 'xterm-focus';\nconst SELECTION_CLASS = 'xterm-selection';\n\nlet nextTerminalId = 1;\n\n/**\n * A fallback renderer for when canvas is slow. This is not meant to be\n * particularly fast or feature complete, more just stable and usable for when\n * canvas is not an option.\n */\nexport class DomRenderer extends Disposable implements IRenderer {\n  private _rowFactory: DomRendererRowFactory;\n  private _terminalClass: number = nextTerminalId++;\n\n  private _themeStyleElement!: HTMLStyleElement;\n  private _dimensionsStyleElement!: HTMLStyleElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[] = [];\n  private _selectionContainer: HTMLElement;\n\n  public dimensions: IRenderDimensions;\n\n  public get onRequestRedraw(): IEvent<IRequestRedrawEvent> { return new EventEmitter<IRequestRedrawEvent>().event; }\n\n  constructor(\n    private _colors: IColorSet,\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _linkifier: ILinkifier,\n    private readonly _linkifier2: ILinkifier2,\n    @IInstantiationService instantiationService: IInstantiationService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.classList.add(ROW_CONTAINER_CLASS);\n    this._rowContainer.style.lineHeight = 'normal';\n    this._rowContainer.setAttribute('aria-hidden', 'true');\n    this._refreshRowElements(this._bufferService.cols, this._bufferService.rows);\n    this._selectionContainer = document.createElement('div');\n    this._selectionContainer.classList.add(SELECTION_CLASS);\n    this._selectionContainer.setAttribute('aria-hidden', 'true');\n\n    this.dimensions = {\n      scaledCharWidth: 0,\n      scaledCharHeight: 0,\n      scaledCellWidth: 0,\n      scaledCellHeight: 0,\n      scaledCharLeft: 0,\n      scaledCharTop: 0,\n      scaledCanvasWidth: 0,\n      scaledCanvasHeight: 0,\n      canvasWidth: 0,\n      canvasHeight: 0,\n      actualCellWidth: 0,\n      actualCellHeight: 0\n    };\n    this._updateDimensions();\n    this._injectCss();\n\n    this._rowFactory = instantiationService.createInstance(DomRendererRowFactory, document, this._colors);\n\n    this._element.classList.add(TERMINAL_CLASS_PREFIX + this._terminalClass);\n    this._screenElement.appendChild(this._rowContainer);\n    this._screenElement.appendChild(this._selectionContainer);\n\n    this._linkifier.onShowLinkUnderline(e => this._onLinkHover(e));\n    this._linkifier.onHideLinkUnderline(e => this._onLinkLeave(e));\n\n    this._linkifier2.onShowLinkUnderline(e => this._onLinkHover(e));\n    this._linkifier2.onHideLinkUnderline(e => this._onLinkLeave(e));\n  }\n\n  public dispose(): void {\n    this._element.classList.remove(TERMINAL_CLASS_PREFIX + this._terminalClass);\n\n    // Outside influences such as React unmounts may manipulate the DOM before our disposal.\n    // https://github.com/xtermjs/xterm.js/issues/2960\n    removeElementFromParent(this._rowContainer, this._selectionContainer, this._themeStyleElement, this._dimensionsStyleElement);\n\n    super.dispose();\n  }\n\n  private _updateDimensions(): void {\n    this.dimensions.scaledCharWidth = this._charSizeService.width * window.devicePixelRatio;\n    this.dimensions.scaledCharHeight = Math.ceil(this._charSizeService.height * window.devicePixelRatio);\n    this.dimensions.scaledCellWidth = this.dimensions.scaledCharWidth + Math.round(this._optionsService.rawOptions.letterSpacing);\n    this.dimensions.scaledCellHeight = Math.floor(this.dimensions.scaledCharHeight * this._optionsService.rawOptions.lineHeight);\n    this.dimensions.scaledCharLeft = 0;\n    this.dimensions.scaledCharTop = 0;\n    this.dimensions.scaledCanvasWidth = this.dimensions.scaledCellWidth * this._bufferService.cols;\n    this.dimensions.scaledCanvasHeight = this.dimensions.scaledCellHeight * this._bufferService.rows;\n    this.dimensions.canvasWidth = Math.round(this.dimensions.scaledCanvasWidth / window.devicePixelRatio);\n    this.dimensions.canvasHeight = Math.round(this.dimensions.scaledCanvasHeight / window.devicePixelRatio);\n    this.dimensions.actualCellWidth = this.dimensions.canvasWidth / this._bufferService.cols;\n    this.dimensions.actualCellHeight = this.dimensions.canvasHeight / this._bufferService.rows;\n\n    for (const element of this._rowElements) {\n      element.style.width = `${this.dimensions.canvasWidth}px`;\n      element.style.height = `${this.dimensions.actualCellHeight}px`;\n      element.style.lineHeight = `${this.dimensions.actualCellHeight}px`;\n      // Make sure rows don't overflow onto following row\n      element.style.overflow = 'hidden';\n    }\n\n    if (!this._dimensionsStyleElement) {\n      this._dimensionsStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._dimensionsStyleElement);\n    }\n\n    const styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} span {` +\n      ` display: inline-block;` +\n      ` height: 100%;` +\n      ` vertical-align: top;` +\n      ` width: ${this.dimensions.actualCellWidth}px` +\n      `}`;\n\n    this._dimensionsStyleElement.textContent = styles;\n\n    this._selectionContainer.style.height = this._viewportElement.style.height;\n    this._screenElement.style.width = `${this.dimensions.canvasWidth}px`;\n    this._screenElement.style.height = `${this.dimensions.canvasHeight}px`;\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n    this._injectCss();\n  }\n\n  private _injectCss(): void {\n    if (!this._themeStyleElement) {\n      this._themeStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._themeStyleElement);\n    }\n\n    // Base CSS\n    let styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} {` +\n      ` color: ${this._colors.foreground.css};` +\n      ` font-family: ${this._optionsService.rawOptions.fontFamily};` +\n      ` font-size: ${this._optionsService.rawOptions.fontSize}px;` +\n      `}`;\n    // Text styles\n    styles +=\n      `${this._terminalSelector} span:not(.${BOLD_CLASS}) {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeight};` +\n      `}` +\n      `${this._terminalSelector} span.${BOLD_CLASS} {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeightBold};` +\n      `}` +\n      `${this._terminalSelector} span.${ITALIC_CLASS} {` +\n      ` font-style: italic;` +\n      `}`;\n    // Blink animation\n    styles +=\n      `@keyframes blink_box_shadow` + `_` + this._terminalClass + ` {` +\n      ` 50% {` +\n      `  box-shadow: none;` +\n      ` }` +\n      `}`;\n    styles +=\n      `@keyframes blink_block` + `_` + this._terminalClass + ` {` +\n      ` 0% {` +\n      `  background-color: ${this._colors.cursor.css};` +\n      `  color: ${this._colors.cursorAccent.css};` +\n      ` }` +\n      ` 50% {` +\n      `  background-color: ${this._colors.cursorAccent.css};` +\n      `  color: ${this._colors.cursor.css};` +\n      ` }` +\n      `}`;\n    // Cursor\n    styles +=\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}:not(.${FOCUS_CLASS}) .${CURSOR_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` outline: 1px solid ${this._colors.cursor.css};` +\n      ` outline-offset: -1px;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_BLINK_CLASS}:not(.${CURSOR_STYLE_BLOCK_CLASS}) {` +\n      ` animation: blink_box_shadow` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_BLINK_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` animation: blink_block` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` background-color: ${this._colors.cursor.css};` +\n      ` color: ${this._colors.cursorAccent.css};` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BAR_CLASS} {` +\n      ` box-shadow: ${this._optionsService.rawOptions.cursorWidth}px 0 0 ${this._colors.cursor.css} inset;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_UNDERLINE_CLASS} {` +\n      ` box-shadow: 0 -1px 0 ${this._colors.cursor.css} inset;` +\n      `}`;\n    // Selection\n    styles +=\n      `${this._terminalSelector} .${SELECTION_CLASS} {` +\n      ` position: absolute;` +\n      ` top: 0;` +\n      ` left: 0;` +\n      ` z-index: 1;` +\n      ` pointer-events: none;` +\n      `}` +\n      `${this._terminalSelector} .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${this._colors.selectionTransparent.css};` +\n      `}`;\n    // Colors\n    this._colors.ansi.forEach((c, i) => {\n      styles +=\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${i} { color: ${c.css}; }` +\n        `${this._terminalSelector} .${BG_CLASS_PREFIX}${i} { background-color: ${c.css}; }`;\n    });\n    styles +=\n      `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { color: ${color.opaque(this._colors.background).css}; }` +\n      `${this._terminalSelector} .${BG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { background-color: ${this._colors.foreground.css}; }`;\n\n    this._themeStyleElement.textContent = styles;\n  }\n\n  public onDevicePixelRatioChange(): void {\n    this._updateDimensions();\n  }\n\n  private _refreshRowElements(cols: number, rows: number): void {\n    // Add missing elements\n    for (let i = this._rowElements.length; i <= rows; i++) {\n      const row = document.createElement('div');\n      this._rowContainer.appendChild(row);\n      this._rowElements.push(row);\n    }\n    // Remove excess elements\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n  }\n\n  public onResize(cols: number, rows: number): void {\n    this._refreshRowElements(cols, rows);\n    this._updateDimensions();\n  }\n\n  public onCharSizeChanged(): void {\n    this._updateDimensions();\n  }\n\n  public onBlur(): void {\n    this._rowContainer.classList.remove(FOCUS_CLASS);\n  }\n\n  public onFocus(): void {\n    this._rowContainer.classList.add(FOCUS_CLASS);\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    // Remove all selections\n    while (this._selectionContainer.children.length) {\n      this._selectionContainer.removeChild(this._selectionContainer.children[0]);\n    }\n\n    // Selection does not exist\n    if (!start || !end) {\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._bufferService.buffer.ydisp;\n    const viewportEndRow = end[1] - this._bufferService.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._bufferService.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      return;\n    }\n\n    // Create the selections\n    const documentFragment = document.createDocumentFragment();\n\n    if (columnSelectMode) {\n      documentFragment.appendChild(\n        this._createSelectionElement(viewportCappedStartRow, start[0], end[0], viewportCappedEndRow - viewportCappedStartRow + 1)\n      );\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const endCol = viewportCappedStartRow === viewportEndRow ? end[0] : this._bufferService.cols;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow, startCol, endCol));\n      // Draw middle rows\n      const middleRowsCount = viewportCappedEndRow - viewportCappedStartRow - 1;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow + 1, 0, this._bufferService.cols, middleRowsCount));\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewporttartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        documentFragment.appendChild(this._createSelectionElement(viewportCappedEndRow, 0, endCol));\n      }\n    }\n    this._selectionContainer.appendChild(documentFragment);\n  }\n\n  /**\n   * Creates a selection element at the specified position.\n   * @param row The row of the selection.\n   * @param colStart The start column.\n   * @param colEnd The end columns.\n   */\n  private _createSelectionElement(row: number, colStart: number, colEnd: number, rowCount: number = 1): HTMLElement {\n    const element = document.createElement('div');\n    element.style.height = `${rowCount * this.dimensions.actualCellHeight}px`;\n    element.style.top = `${row * this.dimensions.actualCellHeight}px`;\n    element.style.left = `${colStart * this.dimensions.actualCellWidth}px`;\n    element.style.width = `${this.dimensions.actualCellWidth * (colEnd - colStart)}px`;\n    return element;\n  }\n\n  public onCursorMove(): void {\n    // No-op, the cursor is drawn when rows are drawn\n  }\n\n  public onOptionsChanged(): void {\n    // Force a refresh\n    this._updateDimensions();\n    this._injectCss();\n  }\n\n  public clear(): void {\n    for (const e of this._rowElements) {\n      e.innerText = '';\n    }\n  }\n\n  public renderRows(start: number, end: number): void {\n    const cursorAbsoluteY = this._bufferService.buffer.ybase + this._bufferService.buffer.y;\n    const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n    const cursorBlink = this._optionsService.rawOptions.cursorBlink;\n\n    for (let y = start; y <= end; y++) {\n      const rowElement = this._rowElements[y];\n      rowElement.innerText = '';\n\n      const row = y + this._bufferService.buffer.ydisp;\n      const lineData = this._bufferService.buffer.lines.get(row);\n      const cursorStyle = this._optionsService.rawOptions.cursorStyle;\n      rowElement.appendChild(this._rowFactory.createRow(lineData!, row, row === cursorAbsoluteY, cursorStyle, cursorX, cursorBlink, this.dimensions.actualCellWidth, this._bufferService.cols));\n    }\n  }\n\n  private get _terminalSelector(): string {\n    return `.${TERMINAL_CLASS_PREFIX}${this._terminalClass}`;\n  }\n\n  private _onLinkHover(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, true);\n  }\n\n  private _onLinkLeave(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, false);\n  }\n\n  private _setCellUnderline(x: number, x2: number, y: number, y2: number, cols: number, enabled: boolean): void {\n    while (x !== x2 || y !== y2) {\n      const row = this._rowElements[y];\n      if (!row) {\n        return;\n      }\n      const span = row.children[x] as HTMLElement;\n      if (span) {\n        span.style.textDecoration = enabled ? 'underline' : 'none';\n      }\n      if (++x >= cols) {\n        x = 0;\n        y++;\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine } from 'common/Types';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { NULL_CELL_CODE, WHITESPACE_CELL_CHAR, Attributes } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { ICoreService, IOptionsService } from 'common/services/Services';\nimport { color, rgba } from 'browser/Color';\nimport { IColorSet, IColor } from 'browser/Types';\nimport { ICharacterJoinerService } from 'browser/services/Services';\nimport { JoinedCellData } from 'browser/services/CharacterJoinerService';\n\nexport const BOLD_CLASS = 'xterm-bold';\nexport const DIM_CLASS = 'xterm-dim';\nexport const ITALIC_CLASS = 'xterm-italic';\nexport const UNDERLINE_CLASS = 'xterm-underline';\nexport const STRIKETHROUGH_CLASS = 'xterm-strikethrough';\nexport const CURSOR_CLASS = 'xterm-cursor';\nexport const CURSOR_BLINK_CLASS = 'xterm-cursor-blink';\nexport const CURSOR_STYLE_BLOCK_CLASS = 'xterm-cursor-block';\nexport const CURSOR_STYLE_BAR_CLASS = 'xterm-cursor-bar';\nexport const CURSOR_STYLE_UNDERLINE_CLASS = 'xterm-cursor-underline';\n\nexport class DomRendererRowFactory {\n  private _workCell: CellData = new CellData();\n\n  constructor(\n    private readonly _document: Document,\n    private _colors: IColorSet,\n    @ICharacterJoinerService private readonly _characterJoinerService: ICharacterJoinerService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreService private readonly _coreService: ICoreService\n  ) {\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n  }\n\n  public createRow(lineData: IBufferLine, row: number, isCursorRow: boolean, cursorStyle: string | undefined, cursorX: number, cursorBlink: boolean, cellWidth: number, cols: number): DocumentFragment {\n    const fragment = this._document.createDocumentFragment();\n\n    const joinedRanges = this._characterJoinerService.getJoinedCharacters(row);\n    // Find the line length first, this prevents the need to output a bunch of\n    // empty cells at the end. This cannot easily be integrated into the main\n    // loop below because of the colCount feature (which can be removed after we\n    // properly support reflow and disallow data to go beyond the right-side of\n    // the viewport).\n    let lineLength = 0;\n    for (let x = Math.min(lineData.length, cols) - 1; x >= 0; x--) {\n      if (lineData.loadCell(x, this._workCell).getCode() !== NULL_CELL_CODE || (isCursorRow && x === cursorX)) {\n        lineLength = x + 1;\n        break;\n      }\n    }\n\n    for (let x = 0; x < lineLength; x++) {\n      lineData.loadCell(x, this._workCell);\n      let width = this._workCell.getWidth();\n\n      // The character to the left is a wide character, drawing is owned by the char at x-1\n      if (width === 0) {\n        continue;\n      }\n\n      // If true, indicates that the current character(s) to draw were joined.\n      let isJoined = false;\n      let lastCharX = x;\n\n      // Process any joined character ranges as needed. Because of how the\n      // ranges are produced, we know that they are valid for the characters\n      // and attributes of our input.\n      let cell = this._workCell;\n      if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n        isJoined = true;\n        const range = joinedRanges.shift()!;\n\n        // We already know the exact start and end column of the joined range,\n        // so we get the string and width representing it directly\n        cell = new JoinedCellData(\n          this._workCell,\n          lineData.translateToString(true, range[0], range[1]),\n          range[1] - range[0]\n        );\n\n        // Skip over the cells occupied by this range in the loop\n        lastCharX = range[1] - 1;\n\n        // Recalculate width\n        width = cell.getWidth();\n      }\n\n      const charElement = this._document.createElement('span');\n      if (width > 1) {\n        charElement.style.width = `${cellWidth * width}px`;\n      }\n\n      if (isJoined) {\n        // Ligatures in the DOM renderer must use display inline, as they may not show with\n        // inline-block if they are outside the bounds of the element\n        charElement.style.display = 'inline';\n\n        // The DOM renderer colors the background of the cursor but for ligatures all cells are\n        // joined. The workaround here is to show a cursor around the whole ligature so it shows up,\n        // the cursor looks the same when on any character of the ligature though\n        if (cursorX >= x && cursorX <= lastCharX) {\n          cursorX = x;\n        }\n      }\n\n      if (!this._coreService.isCursorHidden && isCursorRow && x === cursorX) {\n        charElement.classList.add(CURSOR_CLASS);\n\n        if (cursorBlink) {\n          charElement.classList.add(CURSOR_BLINK_CLASS);\n        }\n\n        switch (cursorStyle) {\n          case 'bar':\n            charElement.classList.add(CURSOR_STYLE_BAR_CLASS);\n            break;\n          case 'underline':\n            charElement.classList.add(CURSOR_STYLE_UNDERLINE_CLASS);\n            break;\n          default:\n            charElement.classList.add(CURSOR_STYLE_BLOCK_CLASS);\n            break;\n        }\n      }\n\n      if (cell.isBold()) {\n        charElement.classList.add(BOLD_CLASS);\n      }\n\n      if (cell.isItalic()) {\n        charElement.classList.add(ITALIC_CLASS);\n      }\n\n      if (cell.isDim()) {\n        charElement.classList.add(DIM_CLASS);\n      }\n\n      if (cell.isUnderline()) {\n        charElement.classList.add(UNDERLINE_CLASS);\n      }\n\n      if (cell.isInvisible()) {\n        charElement.textContent = WHITESPACE_CELL_CHAR;\n      } else {\n        charElement.textContent = cell.getChars() || WHITESPACE_CELL_CHAR;\n      }\n\n      if (cell.isStrikethrough()) {\n        charElement.classList.add(STRIKETHROUGH_CLASS);\n      }\n\n      let fg = cell.getFgColor();\n      let fgColorMode = cell.getFgColorMode();\n      let bg = cell.getBgColor();\n      let bgColorMode = cell.getBgColorMode();\n      const isInverse = !!cell.isInverse();\n      if (isInverse) {\n        const temp = fg;\n        fg = bg;\n        bg = temp;\n        const temp2 = fgColorMode;\n        fgColorMode = bgColorMode;\n        bgColorMode = temp2;\n      }\n\n      // Foreground\n      switch (fgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          if (cell.isBold() && fg < 8 && this._optionsService.rawOptions.drawBoldTextInBrightColors) {\n            fg += 8;\n          }\n          if (!this._applyMinimumContrast(charElement, this._colors.background, this._colors.ansi[fg])) {\n            charElement.classList.add(`xterm-fg-${fg}`);\n          }\n          break;\n        case Attributes.CM_RGB:\n          const color = rgba.toColor(\n            (fg >> 16) & 0xFF,\n            (fg >>  8) & 0xFF,\n            (fg      ) & 0xFF\n          );\n          if (!this._applyMinimumContrast(charElement, this._colors.background, color)) {\n            this._addStyle(charElement, `color:#${padStart(fg.toString(16), '0', 6)}`);\n          }\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (!this._applyMinimumContrast(charElement, this._colors.background, this._colors.foreground)) {\n            if (isInverse) {\n              charElement.classList.add(`xterm-fg-${INVERTED_DEFAULT_COLOR}`);\n            }\n          }\n      }\n\n      // Background\n      switch (bgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          charElement.classList.add(`xterm-bg-${bg}`);\n          break;\n        case Attributes.CM_RGB:\n          this._addStyle(charElement, `background-color:#${padStart(bg.toString(16), '0', 6)}`);\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (isInverse) {\n            charElement.classList.add(`xterm-bg-${INVERTED_DEFAULT_COLOR}`);\n          }\n      }\n\n      fragment.appendChild(charElement);\n\n      x = lastCharX;\n    }\n    return fragment;\n  }\n\n  private _applyMinimumContrast(element: HTMLElement, bg: IColor, fg: IColor): boolean {\n    if (this._optionsService.rawOptions.minimumContrastRatio === 1) {\n      return false;\n    }\n\n    // Try get from cache first\n    let adjustedColor = this._colors.contrastCache.getColor(this._workCell.bg, this._workCell.fg);\n\n    // Calculate and store in cache\n    if (adjustedColor === undefined) {\n      adjustedColor = color.ensureContrastRatio(bg, fg, this._optionsService.rawOptions.minimumContrastRatio);\n      this._colors.contrastCache.setColor(this._workCell.bg, this._workCell.fg, adjustedColor ?? null);\n    }\n\n    if (adjustedColor) {\n      this._addStyle(element, `color:${adjustedColor.css}`);\n      return true;\n    }\n\n    return false;\n  }\n\n  private _addStyle(element: HTMLElement, style: string): void {\n    element.setAttribute('style', `${element.getAttribute('style') || ''}${style};`);\n  }\n}\n\nfunction padStart(text: string, padChar: string, length: number): string {\n  while (text.length < length) {\n    text = padChar + text;\n  }\n  return text;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService } from 'common/services/Services';\n\n/**\n * Represents a selection within the buffer. This model only cares about column\n * and row coordinates, not wide characters.\n */\nexport class SelectionModel {\n  /**\n   * Whether select all is currently active.\n   */\n  public isSelectAllActive: boolean = false;\n\n  /**\n   * The minimal length of the selection from the start position. When double\n   * clicking on a word, the word will be selected which makes the selection\n   * start at the start of the word and makes this variable the length.\n   */\n  public selectionStartLength: number = 0;\n\n  /**\n   * The [x, y] position the selection starts at.\n   */\n  public selectionStart: [number, number] | undefined;\n\n  /**\n   * The [x, y] position the selection ends at.\n   */\n  public selectionEnd: [number, number] | undefined;\n\n  constructor(\n    private _bufferService: IBufferService\n  ) {\n  }\n\n  /**\n   * Clears the current selection.\n   */\n  public clearSelection(): void {\n    this.selectionStart = undefined;\n    this.selectionEnd = undefined;\n    this.isSelectAllActive = false;\n    this.selectionStartLength = 0;\n  }\n\n  /**\n   * The final selection start, taking into consideration select all.\n   */\n  public get finalSelectionStart(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [0, 0];\n    }\n\n    if (!this.selectionEnd || !this.selectionStart) {\n      return this.selectionStart;\n    }\n\n    return this.areSelectionValuesReversed() ? this.selectionEnd : this.selectionStart;\n  }\n\n  /**\n   * The final selection end, taking into consideration select all, double click\n   * word selection and triple click line selection.\n   */\n  public get finalSelectionEnd(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [this._bufferService.cols, this._bufferService.buffer.ybase + this._bufferService.rows - 1];\n    }\n\n    if (!this.selectionStart) {\n      return undefined;\n    }\n\n    // Use the selection start + length if the end doesn't exist or they're reversed\n    if (!this.selectionEnd || this.areSelectionValuesReversed()) {\n      const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n      if (startPlusLength > this._bufferService.cols) {\n        // Ensure the trailing EOL isn't included when the selection ends on the right edge\n        if (startPlusLength % this._bufferService.cols === 0) {\n          return [this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols) - 1];\n        }\n        return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n      }\n      return [startPlusLength, this.selectionStart[1]];\n    }\n\n    // Ensure the the word/line is selected after a double/triple click\n    if (this.selectionStartLength) {\n      // Select the larger of the two when start and end are on the same line\n      if (this.selectionEnd[1] === this.selectionStart[1]) {\n        return [Math.max(this.selectionStart[0] + this.selectionStartLength, this.selectionEnd[0]), this.selectionEnd[1]];\n      }\n    }\n    return this.selectionEnd;\n  }\n\n  /**\n   * Returns whether the selection start and end are reversed.\n   */\n  public areSelectionValuesReversed(): boolean {\n    const start = this.selectionStart;\n    const end = this.selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[1] > end[1] || (start[1] === end[1] && start[0] > end[0]);\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   * @return Whether a refresh is necessary.\n   */\n  public onTrim(amount: number): boolean {\n    // Adjust the selection position based on the trimmed amount.\n    if (this.selectionStart) {\n      this.selectionStart[1] -= amount;\n    }\n    if (this.selectionEnd) {\n      this.selectionEnd[1] -= amount;\n    }\n\n    // The selection has moved off the buffer, clear it.\n    if (this.selectionEnd && this.selectionEnd[1] < 0) {\n      this.clearSelection();\n      return true;\n    }\n\n    // If the selection start is trimmed, ensure the start column is 0.\n    if (this.selectionStart && this.selectionStart[1] < 0) {\n      this.selectionStart[1] = 0;\n    }\n    return false;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { IEvent, EventEmitter } from 'common/EventEmitter';\nimport { ICharSizeService } from 'browser/services/Services';\n\nexport class CharSizeService implements ICharSizeService {\n  public serviceBrand: undefined;\n\n  public width: number = 0;\n  public height: number = 0;\n  private _measureStrategy: IMeasureStrategy;\n\n  public get hasValidSize(): boolean { return this.width > 0 && this.height > 0; }\n\n  private _onCharSizeChange = new EventEmitter<void>();\n  public get onCharSizeChange(): IEvent<void> { return this._onCharSizeChange.event; }\n\n  constructor(\n    document: Document,\n    parentElement: HTMLElement,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    this._measureStrategy = new DomMeasureStrategy(document, parentElement, this._optionsService);\n  }\n\n  public measure(): void {\n    const result = this._measureStrategy.measure();\n    if (result.width !== this.width || result.height !== this.height) {\n      this.width = result.width;\n      this.height = result.height;\n      this._onCharSizeChange.fire();\n    }\n  }\n}\n\ninterface IMeasureStrategy {\n  measure(): IReadonlyMeasureResult;\n}\n\ninterface IReadonlyMeasureResult {\n  readonly width: number;\n  readonly height: number;\n}\n\ninterface IMeasureResult {\n  width: number;\n  height: number;\n}\n\n// TODO: For supporting browsers we should also provide a CanvasCharDimensionsProvider that uses ctx.measureText\nclass DomMeasureStrategy implements IMeasureStrategy {\n  private _result: IMeasureResult = { width: 0, height: 0 };\n  private _measureElement: HTMLElement;\n\n  constructor(\n    private _document: Document,\n    private _parentElement: HTMLElement,\n    private _optionsService: IOptionsService\n  ) {\n    this._measureElement = this._document.createElement('span');\n    this._measureElement.classList.add('xterm-char-measure-element');\n    this._measureElement.textContent = 'W';\n    this._measureElement.setAttribute('aria-hidden', 'true');\n    this._parentElement.appendChild(this._measureElement);\n  }\n\n  public measure(): IReadonlyMeasureResult {\n    this._measureElement.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n    this._measureElement.style.fontSize = `${this._optionsService.rawOptions.fontSize}px`;\n\n    // Note that this triggers a synchronous layout\n    const geometry = this._measureElement.getBoundingClientRect();\n\n    // If values are 0 then the element is likely currently display:none, in which case we should\n    // retain the previous value.\n    if (geometry.width !== 0 && geometry.height !== 0) {\n      this._result.width = geometry.width;\n      this._result.height = Math.ceil(geometry.height);\n    }\n\n    return this._result;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, CharData } from 'common/Types';\nimport { ICharacterJoiner } from 'browser/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WHITESPACE_CELL_CHAR, Content } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService } from 'common/services/Services';\nimport { ICharacterJoinerService } from 'browser/services/Services';\n\nexport class JoinedCellData extends AttributeData implements ICellData {\n  private _width: number;\n  // .content carries no meaning for joined CellData, simply nullify it\n  // thus we have to overload all other .content accessors\n  public content: number = 0;\n  public fg: number;\n  public bg: number;\n  public combinedData: string = '';\n\n  constructor(firstCell: ICellData, chars: string, width: number) {\n    super();\n    this.fg = firstCell.fg;\n    this.bg = firstCell.bg;\n    this.combinedData = chars;\n    this._width = width;\n  }\n\n  public isCombined(): number {\n    // always mark joined cell data as combined\n    return Content.IS_COMBINED_MASK;\n  }\n\n  public getWidth(): number {\n    return this._width;\n  }\n\n  public getChars(): string {\n    return this.combinedData;\n  }\n\n  public getCode(): number {\n    // code always gets the highest possible fake codepoint (read as -1)\n    // this is needed as code is used by caches as identifier\n    return 0x1FFFFF;\n  }\n\n  public setFromCharData(value: CharData): void {\n    throw new Error('not implemented');\n  }\n\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n\nexport class CharacterJoinerService implements ICharacterJoinerService {\n  public serviceBrand: undefined;\n\n  private _characterJoiners: ICharacterJoiner[] = [];\n  private _nextCharacterJoinerId: number = 0;\n  private _workCell: CellData = new CellData();\n\n  constructor(\n    @IBufferService private _bufferService: IBufferService\n  ) { }\n\n  public register(handler: (text: string) => [number, number][]): number {\n    const joiner: ICharacterJoiner = {\n      id: this._nextCharacterJoinerId++,\n      handler\n    };\n\n    this._characterJoiners.push(joiner);\n    return joiner.id;\n  }\n\n  public deregister(joinerId: number): boolean {\n    for (let i = 0; i < this._characterJoiners.length; i++) {\n      if (this._characterJoiners[i].id === joinerId) {\n        this._characterJoiners.splice(i, 1);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public getJoinedCharacters(row: number): [number, number][] {\n    if (this._characterJoiners.length === 0) {\n      return [];\n    }\n\n    const line = this._bufferService.buffer.lines.get(row);\n    if (!line || line.length === 0) {\n      return [];\n    }\n\n    const ranges: [number, number][] = [];\n    const lineStr = line.translateToString(true);\n\n    // Because some cells can be represented by multiple javascript characters,\n    // we track the cell and the string indexes separately. This allows us to\n    // translate the string ranges we get from the joiners back into cell ranges\n    // for use when rendering\n    let rangeStartColumn = 0;\n    let currentStringIndex = 0;\n    let rangeStartStringIndex = 0;\n    let rangeAttrFG = line.getFg(0);\n    let rangeAttrBG = line.getBg(0);\n\n    for (let x = 0; x < line.getTrimmedLength(); x++) {\n      line.loadCell(x, this._workCell);\n\n      if (this._workCell.getWidth() === 0) {\n        // If this character is of width 0, skip it.\n        continue;\n      }\n\n      // End of range\n      if (this._workCell.fg !== rangeAttrFG || this._workCell.bg !== rangeAttrBG) {\n        // If we ended up with a sequence of more than one character,\n        // look for ranges to join.\n        if (x - rangeStartColumn > 1) {\n          const joinedRanges = this._getJoinedRanges(\n            lineStr,\n            rangeStartStringIndex,\n            currentStringIndex,\n            line,\n            rangeStartColumn\n          );\n          for (let i = 0; i < joinedRanges.length; i++) {\n            ranges.push(joinedRanges[i]);\n          }\n        }\n\n        // Reset our markers for a new range.\n        rangeStartColumn = x;\n        rangeStartStringIndex = currentStringIndex;\n        rangeAttrFG = this._workCell.fg;\n        rangeAttrBG = this._workCell.bg;\n      }\n\n      currentStringIndex += this._workCell.getChars().length || WHITESPACE_CELL_CHAR.length;\n    }\n\n    // Process any trailing ranges.\n    if (this._bufferService.cols - rangeStartColumn > 1) {\n      const joinedRanges = this._getJoinedRanges(\n        lineStr,\n        rangeStartStringIndex,\n        currentStringIndex,\n        line,\n        rangeStartColumn\n      );\n      for (let i = 0; i < joinedRanges.length; i++) {\n        ranges.push(joinedRanges[i]);\n      }\n    }\n\n    return ranges;\n  }\n\n  /**\n   * Given a segment of a line of text, find all ranges of text that should be\n   * joined in a single rendering unit. Ranges are internally converted to\n   * column ranges, rather than string ranges.\n   * @param line String representation of the full line of text\n   * @param startIndex Start position of the range to search in the string (inclusive)\n   * @param endIndex End position of the range to search in the string (exclusive)\n   */\n  private _getJoinedRanges(line: string, startIndex: number, endIndex: number, lineData: IBufferLine, startCol: number): [number, number][] {\n    const text = line.substring(startIndex, endIndex);\n    // At this point we already know that there is at least one joiner so\n    // we can just pull its value and assign it directly rather than\n    // merging it into an empty array, which incurs unnecessary writes.\n    let allJoinedRanges: [number, number][] = [];\n    try {\n      allJoinedRanges = this._characterJoiners[0].handler(text);\n    } catch (error) {\n      console.error(error);\n    }\n    for (let i = 1; i < this._characterJoiners.length; i++) {\n      // We merge any overlapping ranges across the different joiners\n      try {\n        const joinerRanges = this._characterJoiners[i].handler(text);\n        for (let j = 0; j < joinerRanges.length; j++) {\n          CharacterJoinerService._mergeRanges(allJoinedRanges, joinerRanges[j]);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    this._stringRangesToCellRanges(allJoinedRanges, lineData, startCol);\n    return allJoinedRanges;\n  }\n\n  /**\n   * Modifies the provided ranges in-place to adjust for variations between\n   * string length and cell width so that the range represents a cell range,\n   * rather than the string range the joiner provides.\n   * @param ranges String ranges containing start (inclusive) and end (exclusive) index\n   * @param line Cell data for the relevant line in the terminal\n   * @param startCol Offset within the line to start from\n   */\n  private _stringRangesToCellRanges(ranges: [number, number][], line: IBufferLine, startCol: number): void {\n    let currentRangeIndex = 0;\n    let currentRangeStarted = false;\n    let currentStringIndex = 0;\n    let currentRange = ranges[currentRangeIndex];\n\n    // If we got through all of the ranges, stop searching\n    if (!currentRange) {\n      return;\n    }\n\n    for (let x = startCol; x < this._bufferService.cols; x++) {\n      const width = line.getWidth(x);\n      const length = line.getString(x).length || WHITESPACE_CELL_CHAR.length;\n\n      // We skip zero-width characters when creating the string to join the text\n      // so we do the same here\n      if (width === 0) {\n        continue;\n      }\n\n      // Adjust the start of the range\n      if (!currentRangeStarted && currentRange[0] <= currentStringIndex) {\n        currentRange[0] = x;\n        currentRangeStarted = true;\n      }\n\n      // Adjust the end of the range\n      if (currentRange[1] <= currentStringIndex) {\n        currentRange[1] = x;\n\n        // We're finished with this range, so we move to the next one\n        currentRange = ranges[++currentRangeIndex];\n\n        // If there are no more ranges left, stop searching\n        if (!currentRange) {\n          break;\n        }\n\n        // Ranges can be on adjacent characters. Because the end index of the\n        // ranges are exclusive, this means that the index for the start of a\n        // range can be the same as the end index of the previous range. To\n        // account for the start of the next range, we check here just in case.\n        if (currentRange[0] <= currentStringIndex) {\n          currentRange[0] = x;\n          currentRangeStarted = true;\n        } else {\n          currentRangeStarted = false;\n        }\n      }\n\n      // Adjust the string index based on the character length to line up with\n      // the column adjustment\n      currentStringIndex += length;\n    }\n\n    // If there is still a range left at the end, it must extend all the way to\n    // the end of the line.\n    if (currentRange) {\n      currentRange[1] = this._bufferService.cols;\n    }\n  }\n\n  /**\n   * Merges the range defined by the provided start and end into the list of\n   * existing ranges. The merge is done in place on the existing range for\n   * performance and is also returned.\n   * @param ranges Existing range list\n   * @param newRange Tuple of two numbers representing the new range to merge in.\n   * @returns The ranges input with the new range merged in place\n   */\n  private static _mergeRanges(ranges: [number, number][], newRange: [number, number]): [number, number][] {\n    let inRange = false;\n    for (let i = 0; i < ranges.length; i++) {\n      const range = ranges[i];\n      if (!inRange) {\n        if (newRange[1] <= range[0]) {\n          // Case 1: New range is before the search range\n          ranges.splice(i, 0, newRange);\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 2: New range is either wholly contained within the\n          // search range or overlaps with the front of it\n          range[0] = Math.min(newRange[0], range[0]);\n          return ranges;\n        }\n\n        if (newRange[0] < range[1]) {\n          // Case 3: New range either wholly contains the search range\n          // or overlaps with the end of it\n          range[0] = Math.min(newRange[0], range[0]);\n          inRange = true;\n        }\n\n        // Case 4: New range starts after the search range\n        continue;\n      } else {\n        if (newRange[1] <= range[0]) {\n          // Case 5: New range extends from previous range but doesn't\n          // reach the current one\n          ranges[i - 1][1] = newRange[1];\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 6: New range extends from prvious range into the\n          // current range\n          ranges[i - 1][1] = Math.max(newRange[1], range[1]);\n          ranges.splice(i, 1);\n          return ranges;\n        }\n\n        // Case 7: New range extends from previous range past the\n        // end of the current range\n        ranges.splice(i, 1);\n        i--;\n      }\n    }\n\n    if (inRange) {\n      // Case 8: New range extends past the last existing range\n      ranges[ranges.length - 1][1] = newRange[1];\n    } else {\n      // Case 9: New range starts after the last existing range\n      ranges.push(newRange);\n    }\n\n    return ranges;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreBrowserService } from './Services';\n\nexport class CoreBrowserService implements ICoreBrowserService {\n  public serviceBrand: undefined;\n\n  constructor(\n    private _textarea: HTMLTextAreaElement\n  ) {\n  }\n\n  public get isFocused(): boolean {\n    const docOrShadowRoot = this._textarea.getRootNode ? this._textarea.getRootNode() as Document | ShadowRoot : document;\n    return docOrShadowRoot.activeElement === this._textarea && document.hasFocus();\n  }\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDecorationService, IRenderService } from 'browser/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IBufferService, IInstantiationService } from 'common/services/Services';\nimport { IDecorationOptions, IDecoration, IMarker } from 'xterm';\n\nexport class DecorationService extends Disposable implements IDecorationService {\n\n  private readonly _decorations: Decoration[] = [];\n  private _container: HTMLElement | undefined;\n  private _screenElement: HTMLElement | undefined;\n  private _renderService: IRenderService | undefined;\n  private _animationFrame: number | undefined;\n\n  constructor(@IInstantiationService private readonly _instantiationService: IInstantiationService) { super(); }\n\n  public attachToDom(screenElement: HTMLElement, renderService: IRenderService): void {\n    this._renderService = renderService;\n    this._screenElement = screenElement;\n    this._container = document.createElement('div');\n    this._container.classList.add('xterm-decoration-container');\n    screenElement.appendChild(this._container);\n    this.register(this._renderService.onRenderedBufferChange(() => this.refresh()));\n    this.register(this._renderService.onDimensionsChange(() => this.refresh(true)));\n  }\n\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    if (decorationOptions.marker.isDisposed || !this._container) {\n      return undefined;\n    }\n    const decoration = this._instantiationService.createInstance(Decoration, decorationOptions, this._container);\n    this._decorations.push(decoration);\n    decoration.onDispose(() => this._decorations.splice(this._decorations.indexOf(decoration), 1));\n    this._queueRefresh();\n    return decoration;\n  }\n\n  private _queueRefresh(): void {\n    if (this._animationFrame !== undefined) {\n      return;\n    }\n    this._animationFrame = window.requestAnimationFrame(() => {\n      this.refresh();\n      this._animationFrame = undefined;\n    });\n  }\n\n  public refresh(shouldRecreate?: boolean): void {\n    if (!this._renderService) {\n      return;\n    }\n    for (const decoration of this._decorations) {\n      decoration.render(this._renderService, shouldRecreate);\n    }\n  }\n\n  public dispose(): void {\n    for (const decoration of this._decorations) {\n      decoration.dispose();\n    }\n    if (this._screenElement && this._container && this._screenElement.contains(this._container)) {\n      this._screenElement.removeChild(this._container);\n    }\n  }\n}\nexport class Decoration extends Disposable implements IDecoration {\n  private readonly _marker: IMarker;\n  private _element: HTMLElement | undefined;\n\n  public isDisposed: boolean = false;\n\n  public get element(): HTMLElement | undefined { return this._element; }\n  public get marker(): IMarker { return this._marker; }\n\n  private _onDispose = new EventEmitter<void>();\n  public get onDispose(): IEvent<void> { return this._onDispose.event; }\n\n  private _onRender = new EventEmitter<HTMLElement>();\n  public get onRender(): IEvent<HTMLElement> { return this._onRender.event; }\n\n  public x: number;\n  public anchor: 'left' | 'right';\n  public width: number;\n  public height: number;\n\n  constructor(\n    options: IDecorationOptions,\n    private readonly _container: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.x = options.x ?? 0;\n    this._marker = options.marker;\n    this._marker.onDispose(() => this.dispose());\n    this.anchor = options.anchor || 'left';\n    this.width = options.width || 1;\n    this.height = options.height || 1;\n  }\n\n  public render(renderService: IRenderService, shouldRecreate?: boolean): void {\n    if (!this._element || shouldRecreate) {\n      this._createElement(renderService, shouldRecreate);\n    }\n    if (this._container && this._element && !this._container.contains(this._element)) {\n      this._container.append(this._element);\n    }\n    this._refreshStyle(renderService);\n    if (this._element) {\n      this._onRender.fire(this._element);\n    }\n  }\n\n  private _createElement(renderService: IRenderService, shouldRecreate?: boolean): void {\n    if (shouldRecreate && this._element && this._container.contains(this._element)) {\n      this._container.removeChild(this._element);\n    }\n    this._element = document.createElement('div');\n    this._element.classList.add('xterm-decoration');\n    this._element.style.width = `${this.width * renderService.dimensions.actualCellWidth}px`;\n    this._element.style.height = `${this.height * renderService.dimensions.actualCellHeight}px`;\n    this._element.style.top = `${(this.marker.line - this._bufferService.buffers.active.ydisp) * renderService.dimensions.actualCellHeight}px`;\n    this._element.style.lineHeight = `${renderService.dimensions.actualCellHeight}px`;\n\n    if (this.x && this.x > this._bufferService.cols) {\n      // exceeded the container width, so hide\n      this._element.style.display = 'none';\n    }\n    if (this.anchor === 'right') {\n      this._element.style.right = this.x ? `${this.x * renderService.dimensions.actualCellWidth}px` : '';\n    } else {\n      this._element.style.left = this.x ? `${this.x * renderService.dimensions.actualCellWidth}px` : '';\n    }\n  }\n\n  private _refreshStyle(renderService: IRenderService): void {\n    if (!this._element) {\n      return;\n    }\n    const line = this.marker.line - this._bufferService.buffers.active.ydisp;\n    if (line < 0 || line > this._bufferService.rows) {\n      // outside of viewport\n      this._element.style.display = 'none';\n    } else {\n      this._element.style.top = `${line * renderService.dimensions.actualCellHeight}px`;\n      this._element.style.display = this._bufferService.buffer === this._bufferService.buffers.alt ? 'none' : 'block';\n    }\n  }\n\n  public override dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    if (this._element && this._container.contains(this._element)) {\n      this._container.removeChild(this._element);\n    }\n    this.isDisposed = true;\n    this._onDispose.fire();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharSizeService, IRenderService, IMouseService } from './Services';\nimport { getCoords, getRawByteCoords } from 'browser/input/Mouse';\n\nexport class MouseService implements IMouseService {\n  public serviceBrand: undefined;\n\n  constructor(\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService\n  ) {\n  }\n\n  public getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined {\n    return getCoords(\n      event,\n      element,\n      colCount,\n      rowCount,\n      this._charSizeService.hasValidSize,\n      this._renderService.dimensions.actualCellWidth,\n      this._renderService.dimensions.actualCellHeight,\n      isSelection\n    );\n  }\n\n  public getRawByteCoords(event: MouseEvent, element: HTMLElement, colCount: number, rowCount: number): { x: number, y: number } | undefined {\n    const coords = this.getCoords(event, element, colCount, rowCount);\n    return getRawByteCoords(coords);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderer, IRenderDimensions } from 'browser/renderer/Types';\nimport { RenderDebouncer } from 'browser/RenderDebouncer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet, IRenderDebouncer } from 'browser/Types';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { ICharSizeService, IRenderService } from 'browser/services/Services';\n\ninterface ISelectionState {\n  start: [number, number] | undefined;\n  end: [number, number] | undefined;\n  columnSelectMode: boolean;\n}\n\nexport class RenderService extends Disposable implements IRenderService {\n  public serviceBrand: undefined;\n\n  private _renderDebouncer: IRenderDebouncer;\n  private _screenDprMonitor: ScreenDprMonitor;\n\n  private _isPaused: boolean = false;\n  private _needsFullRefresh: boolean = false;\n  private _isNextRenderRedrawOnly: boolean = true;\n  private _needsSelectionRefresh: boolean = false;\n  private _canvasWidth: number = 0;\n  private _canvasHeight: number = 0;\n  private _selectionState: ISelectionState = {\n    start: undefined,\n    end: undefined,\n    columnSelectMode: false\n  };\n\n  private _onDimensionsChange = new EventEmitter<IRenderDimensions>();\n  public get onDimensionsChange(): IEvent<IRenderDimensions> { return this._onDimensionsChange.event; }\n  private _onRender = new EventEmitter<{ start: number, end: number }>();\n  public get onRenderedBufferChange(): IEvent<{ start: number, end: number }> { return this._onRender.event; }\n  private _onRefreshRequest = new EventEmitter<{ start: number, end: number }>();\n  public get onRefreshRequest(): IEvent<{ start: number, end: number }> { return this._onRefreshRequest.event; }\n\n  public get dimensions(): IRenderDimensions { return this._renderer.dimensions; }\n\n  constructor(\n    private _renderer: IRenderer,\n    private _rowCount: number,\n    screenElement: HTMLElement,\n    @IOptionsService optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IBufferService bufferService: IBufferService\n  ) {\n    super();\n\n    this.register({ dispose: () => this._renderer.dispose() });\n\n    this._renderDebouncer = new RenderDebouncer((start, end) => this._renderRows(start, end));\n    this.register(this._renderDebouncer);\n\n    this._screenDprMonitor = new ScreenDprMonitor();\n    this._screenDprMonitor.setListener(() => this.onDevicePixelRatioChange());\n    this.register(this._screenDprMonitor);\n\n    this.register(bufferService.onResize(() => this._fullRefresh()));\n    this.register(bufferService.buffers.onBufferActivate(() => this._renderer?.clear()));\n    this.register(optionsService.onOptionChange(() => this._renderer.onOptionsChanged()));\n    this.register(this._charSizeService.onCharSizeChange(() => this.onCharSizeChanged()));\n\n    // No need to register this as renderer is explicitly disposed in RenderService.dispose\n    this._renderer.onRequestRedraw(e => this.refreshRows(e.start, e.end, true));\n\n    // dprchange should handle this case, we need this as well for browsers that don't support the\n    // matchMedia query.\n    this.register(addDisposableDomListener(window, 'resize', () => this.onDevicePixelRatioChange()));\n\n    // Detect whether IntersectionObserver is detected and enable renderer pause\n    // and resume based on terminal visibility if so\n    if ('IntersectionObserver' in window) {\n      const observer = new IntersectionObserver(e => this._onIntersectionChange(e[e.length - 1]), { threshold: 0 });\n      observer.observe(screenElement);\n      this.register({ dispose: () => observer.disconnect() });\n    }\n  }\n\n  private _onIntersectionChange(entry: IntersectionObserverEntry): void {\n    this._isPaused = entry.isIntersecting === undefined ? (entry.intersectionRatio === 0) : !entry.isIntersecting;\n\n    // Terminal was hidden on open\n    if (!this._isPaused && !this._charSizeService.hasValidSize) {\n      this._charSizeService.measure();\n    }\n\n    if (!this._isPaused && this._needsFullRefresh) {\n      this.refreshRows(0, this._rowCount - 1);\n      this._needsFullRefresh = false;\n    }\n  }\n\n  public refreshRows(start: number, end: number, isRedrawOnly: boolean = false): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n      return;\n    }\n    if (!isRedrawOnly) {\n      this._isNextRenderRedrawOnly = false;\n    }\n    this._renderDebouncer.refresh(start, end, this._rowCount);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    this._renderer.renderRows(start, end);\n\n    // Update selection if needed\n    if (this._needsSelectionRefresh) {\n      this._renderer.onSelectionChanged(this._selectionState.start, this._selectionState.end, this._selectionState.columnSelectMode);\n      this._needsSelectionRefresh = false;\n    }\n\n    // Fire render event only if it was not a redraw\n    if (!this._isNextRenderRedrawOnly) {\n      this._onRender.fire({ start, end });\n    }\n    this._isNextRenderRedrawOnly = true;\n  }\n\n  public resize(cols: number, rows: number): void {\n    this._rowCount = rows;\n    this._fireOnCanvasResize();\n  }\n\n  public changeOptions(): void {\n    this._renderer.onOptionsChanged();\n    this.refreshRows(0, this._rowCount - 1);\n    this._fireOnCanvasResize();\n  }\n\n  private _fireOnCanvasResize(): void {\n    // Don't fire the event if the dimensions haven't changed\n    if (this._renderer.dimensions.canvasWidth === this._canvasWidth && this._renderer.dimensions.canvasHeight === this._canvasHeight) {\n      return;\n    }\n    this._onDimensionsChange.fire(this._renderer.dimensions);\n  }\n\n  public dispose(): void {\n    super.dispose();\n  }\n\n  public setRenderer(renderer: IRenderer): void {\n    // TODO: RenderService should be the only one to dispose the renderer\n    this._renderer.dispose();\n    this._renderer = renderer;\n    this._renderer.onRequestRedraw(e => this.refreshRows(e.start, e.end, true));\n\n    // Force a refresh\n    this._needsSelectionRefresh = true;\n    this._fullRefresh();\n  }\n\n  private _fullRefresh(): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n    } else {\n      this.refreshRows(0, this._rowCount - 1);\n    }\n  }\n\n  public clearTextureAtlas(): void {\n    this._renderer?.clearTextureAtlas?.();\n    this._fullRefresh();\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._renderer.setColors(colors);\n    this._fullRefresh();\n  }\n\n  public onDevicePixelRatioChange(): void {\n    // Force char size measurement as DomMeasureStrategy(getBoundingClientRect) is not stable\n    // when devicePixelRatio changes\n    this._charSizeService.measure();\n\n    this._renderer.onDevicePixelRatioChange();\n    this.refreshRows(0, this._rowCount - 1);\n  }\n\n  public onResize(cols: number, rows: number): void {\n    this._renderer.onResize(cols, rows);\n    this._fullRefresh();\n  }\n\n  // TODO: Is this useful when we have onResize?\n  public onCharSizeChanged(): void {\n    this._renderer.onCharSizeChanged();\n  }\n\n  public onBlur(): void {\n    this._renderer.onBlur();\n  }\n\n  public onFocus(): void {\n    this._renderer.onFocus();\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionState.start = start;\n    this._selectionState.end = end;\n    this._selectionState.columnSelectMode = columnSelectMode;\n    this._renderer.onSelectionChanged(start, end, columnSelectMode);\n  }\n\n  public onCursorMove(): void {\n    this._renderer.onCursorMove();\n  }\n\n  public clear(): void {\n    this._renderer.clear();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionRedrawRequestEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferLine, IDisposable } from 'common/Types';\nimport * as Browser from 'common/Platform';\nimport { SelectionModel } from 'browser/selection/SelectionModel';\nimport { CellData } from 'common/buffer/CellData';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IMouseService, ISelectionService, IRenderService } from 'browser/services/Services';\nimport { ILinkifier2 } from 'browser/Types';\nimport { IBufferService, IOptionsService, ICoreService } from 'common/services/Services';\nimport { getCoordsRelativeToElement } from 'browser/input/Mouse';\nimport { moveToCellSequence } from 'browser/input/MoveToCell';\nimport { Disposable } from 'common/Lifecycle';\nimport { getRangeLength } from 'common/buffer/BufferRange';\n\n/**\n * The number of pixels the mouse needs to be above or below the viewport in\n * order to scroll at the maximum speed.\n */\nconst DRAG_SCROLL_MAX_THRESHOLD = 50;\n\n/**\n * The maximum scrolling speed\n */\nconst DRAG_SCROLL_MAX_SPEED = 15;\n\n/**\n * The number of milliseconds between drag scroll updates.\n */\nconst DRAG_SCROLL_INTERVAL = 50;\n\n/**\n * The maximum amount of time that can have elapsed for an alt click to move the\n * cursor.\n */\nconst ALT_CLICK_MOVE_CURSOR_TIME = 500;\n\nconst NON_BREAKING_SPACE_CHAR = String.fromCharCode(160);\nconst ALL_NON_BREAKING_SPACE_REGEX = new RegExp(NON_BREAKING_SPACE_CHAR, 'g');\n\n/**\n * Represents a position of a word on a line.\n */\ninterface IWordPosition {\n  start: number;\n  length: number;\n}\n\n/**\n * A selection mode, this drives how the selection behaves on mouse move.\n */\nexport const enum SelectionMode {\n  NORMAL,\n  WORD,\n  LINE,\n  COLUMN\n}\n\n/**\n * A class that manages the selection of the terminal. With help from\n * SelectionModel, SelectionService handles with all logic associated with\n * dealing with the selection, including handling mouse interaction, wide\n * characters and fetching the actual text within the selection. Rendering is\n * not handled by the SelectionService but the onRedrawRequest event is fired\n * when the selection is ready to be redrawn (on an animation frame).\n */\nexport class SelectionService extends Disposable implements ISelectionService {\n  public serviceBrand: undefined;\n\n  protected _model: SelectionModel;\n\n  /**\n   * The amount to scroll every drag scroll update (depends on how far the mouse\n   * drag is above or below the terminal).\n   */\n  private _dragScrollAmount: number = 0;\n\n  /**\n   * The current selection mode.\n   */\n  protected _activeSelectionMode: SelectionMode;\n\n  /**\n   * A setInterval timer that is active while the mouse is down whose callback\n   * scrolls the viewport when necessary.\n   */\n  private _dragScrollIntervalTimer: number | undefined;\n\n  /**\n   * The animation frame ID used for refreshing the selection.\n   */\n  private _refreshAnimationFrame: number | undefined;\n\n  /**\n   * Whether selection is enabled.\n   */\n  private _enabled = true;\n\n  private _mouseMoveListener: EventListener;\n  private _mouseUpListener: EventListener;\n  private _trimListener: IDisposable;\n  private _workCell: CellData = new CellData();\n\n  private _mouseDownTimeStamp: number = 0;\n  private _oldHasSelection: boolean = false;\n  private _oldSelectionStart: [number, number] | undefined = undefined;\n  private _oldSelectionEnd: [number, number] | undefined = undefined;\n\n  private _onLinuxMouseSelection = this.register(new EventEmitter<string>());\n  public get onLinuxMouseSelection(): IEvent<string> { return this._onLinuxMouseSelection.event; }\n  private _onRedrawRequest = this.register(new EventEmitter<ISelectionRedrawRequestEvent>());\n  public get onRequestRedraw(): IEvent<ISelectionRedrawRequestEvent> { return this._onRedrawRequest.event; }\n  private _onSelectionChange = this.register(new EventEmitter<void>());\n  public get onSelectionChange(): IEvent<void> { return this._onSelectionChange.event; }\n  private _onRequestScrollLines = this.register(new EventEmitter<ISelectionRequestScrollLinesEvent>());\n  public get onRequestScrollLines(): IEvent<ISelectionRequestScrollLinesEvent> { return this._onRequestScrollLines.event; }\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _linkifier: ILinkifier2,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    // Init listeners\n    this._mouseMoveListener = event => this._onMouseMove(event as MouseEvent);\n    this._mouseUpListener = event => this._onMouseUp(event as MouseEvent);\n    this._coreService.onUserInput(() => {\n      if (this.hasSelection) {\n        this.clearSelection();\n      }\n    });\n    this._trimListener = this._bufferService.buffer.lines.onTrim(amount => this._onTrim(amount));\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._onBufferActivate(e)));\n\n    this.enable();\n\n    this._model = new SelectionModel(this._bufferService);\n    this._activeSelectionMode = SelectionMode.NORMAL;\n  }\n\n  public dispose(): void {\n    this._removeMouseDownListeners();\n  }\n\n  public reset(): void {\n    this.clearSelection();\n  }\n\n  /**\n   * Disables the selection manager. This is useful for when terminal mouse\n   * are enabled.\n   */\n  public disable(): void {\n    this.clearSelection();\n    this._enabled = false;\n  }\n\n  /**\n   * Enable the selection manager.\n   */\n  public enable(): void {\n    this._enabled = true;\n  }\n\n  public get selectionStart(): [number, number] | undefined { return this._model.finalSelectionStart; }\n  public get selectionEnd(): [number, number] | undefined { return this._model.finalSelectionEnd; }\n\n  /**\n   * Gets whether there is an active text selection.\n   */\n  public get hasSelection(): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[0] !== end[0] || start[1] !== end[1];\n  }\n\n  /**\n   * Gets the text currently selected.\n   */\n  public get selectionText(): string {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return '';\n    }\n\n    const buffer = this._bufferService.buffer;\n    const result: string[] = [];\n\n    if (this._activeSelectionMode === SelectionMode.COLUMN) {\n      // Ignore zero width selections\n      if (start[0] === end[0]) {\n        return '';\n      }\n\n      for (let i = start[1]; i <= end[1]; i++) {\n        const lineText = buffer.translateBufferLineToString(i, true, start[0], end[0]);\n        result.push(lineText);\n      }\n    } else {\n      // Get first row\n      const startRowEndCol = start[1] === end[1] ? end[0] : undefined;\n      result.push(buffer.translateBufferLineToString(start[1], true, start[0], startRowEndCol));\n\n      // Get middle rows\n      for (let i = start[1] + 1; i <= end[1] - 1; i++) {\n        const bufferLine = buffer.lines.get(i);\n        const lineText = buffer.translateBufferLineToString(i, true);\n        if (bufferLine?.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n\n      // Get final row\n      if (start[1] !== end[1]) {\n        const bufferLine = buffer.lines.get(end[1]);\n        const lineText = buffer.translateBufferLineToString(end[1], true, 0, end[0]);\n        if (bufferLine && bufferLine!.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n    }\n\n    // Format string by replacing non-breaking space chars with regular spaces\n    // and joining the array into a multi-line string.\n    const formattedResult = result.map(line => {\n      return line.replace(ALL_NON_BREAKING_SPACE_REGEX, ' ');\n    }).join(Browser.isWindows ? '\\r\\n' : '\\n');\n\n    return formattedResult;\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Queues a refresh, redrawing the selection on the next opportunity.\n   * @param isLinuxMouseSelection Whether the selection should be registered as a new\n   * selection on Linux.\n   */\n  public refresh(isLinuxMouseSelection?: boolean): void {\n    // Queue the refresh for the renderer\n    if (!this._refreshAnimationFrame) {\n      this._refreshAnimationFrame = window.requestAnimationFrame(() => this._refresh());\n    }\n\n    // If the platform is Linux and the refresh call comes from a mouse event,\n    // we need to update the selection for middle click to paste selection.\n    if (Browser.isLinux && isLinuxMouseSelection) {\n      const selectionText = this.selectionText;\n      if (selectionText.length) {\n        this._onLinuxMouseSelection.fire(this.selectionText);\n      }\n    }\n  }\n\n  /**\n   * Fires the refresh event, causing consumers to pick it up and redraw the\n   * selection state.\n   */\n  private _refresh(): void {\n    this._refreshAnimationFrame = undefined;\n    this._onRedrawRequest.fire({\n      start: this._model.finalSelectionStart,\n      end: this._model.finalSelectionEnd,\n      columnSelectMode: this._activeSelectionMode === SelectionMode.COLUMN\n    });\n  }\n\n  /**\n   * Checks if the current click was inside the current selection\n   * @param event The mouse event\n   */\n  private _isClickInSelection(event: MouseEvent): boolean {\n    const coords = this._getMouseBufferCoords(event);\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n\n    if (!start || !end || !coords) {\n      return false;\n    }\n\n    return this._areCoordsInSelection(coords, start, end);\n  }\n\n  protected _areCoordsInSelection(coords: [number, number], start: [number, number], end: [number, number]): boolean {\n    return (coords[1] > start[1] && coords[1] < end[1]) ||\n        (start[1] === end[1] && coords[1] === start[1] && coords[0] >= start[0] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === end[1] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === start[1] && coords[0] >= start[0]);\n  }\n\n  /**\n   * Selects word at the current mouse event coordinates.\n   * @param event The mouse event.\n   */\n  private _selectWordAtCursor(event: MouseEvent, allowWhitespaceOnlySelection: boolean): boolean {\n    // Check if there is a link under the cursor first and select that if so\n    const range = this._linkifier.currentLink?.link?.range;\n    if (range) {\n      this._model.selectionStart = [range.start.x - 1, range.start.y - 1];\n      this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._selectWordAt(coords, allowWhitespaceOnlySelection);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._model.isSelectAllActive = true;\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._model.clearSelection();\n    start = Math.max(start, 0);\n    end = Math.min(end, this._bufferService.buffer.lines.length - 1);\n    this._model.selectionStart = [0, start];\n    this._model.selectionEnd = [this._bufferService.cols, end];\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   */\n  private _onTrim(amount: number): void {\n    const needsRefresh = this._model.onTrim(amount);\n    if (needsRefresh) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * Gets the 0-based [x, y] buffer coordinates of the current mouse event.\n   * @param event The mouse event.\n   */\n  private _getMouseBufferCoords(event: MouseEvent): [number, number] | undefined {\n    const coords = this._mouseService.getCoords(event, this._screenElement, this._bufferService.cols, this._bufferService.rows, true);\n    if (!coords) {\n      return undefined;\n    }\n\n    // Convert to 0-based\n    coords[0]--;\n    coords[1]--;\n\n    // Convert viewport coords to buffer coords\n    coords[1] += this._bufferService.buffer.ydisp;\n    return coords;\n  }\n\n  /**\n   * Gets the amount the viewport should be scrolled based on how far out of the\n   * terminal the mouse is.\n   * @param event The mouse event.\n   */\n  private _getMouseEventScrollAmount(event: MouseEvent): number {\n    let offset = getCoordsRelativeToElement(event, this._screenElement)[1];\n    const terminalHeight = this._renderService.dimensions.canvasHeight;\n    if (offset >= 0 && offset <= terminalHeight) {\n      return 0;\n    }\n    if (offset > terminalHeight) {\n      offset -= terminalHeight;\n    }\n\n    offset = Math.min(Math.max(offset, -DRAG_SCROLL_MAX_THRESHOLD), DRAG_SCROLL_MAX_THRESHOLD);\n    offset /= DRAG_SCROLL_MAX_THRESHOLD;\n    return (offset / Math.abs(offset)) + Math.round(offset * (DRAG_SCROLL_MAX_SPEED - 1));\n  }\n\n  /**\n   * Returns whether the selection manager should force selection, regardless of\n   * whether the terminal is in mouse events mode.\n   * @param event The mouse event.\n   */\n  public shouldForceSelection(event: MouseEvent): boolean {\n    if (Browser.isMac) {\n      return event.altKey && this._optionsService.rawOptions.macOptionClickForcesSelection;\n    }\n\n    return event.shiftKey;\n  }\n\n  /**\n   * Handles te mousedown event, setting up for a new selection.\n   * @param event The mousedown event.\n   */\n  public onMouseDown(event: MouseEvent): void {\n    this._mouseDownTimeStamp = event.timeStamp;\n    // If we have selection, we want the context menu on right click even if the\n    // terminal is in mouse mode.\n    if (event.button === 2 && this.hasSelection) {\n      return;\n    }\n\n    // Only action the primary button\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Allow selection when using a specific modifier key, even when disabled\n    if (!this._enabled) {\n      if (!this.shouldForceSelection(event)) {\n        return;\n      }\n\n      // Don't send the mouse down event to the current process, we want to select\n      event.stopPropagation();\n    }\n\n    // Tell the browser not to start a regular selection\n    event.preventDefault();\n\n    // Reset drag scroll state\n    this._dragScrollAmount = 0;\n\n    if (this._enabled && event.shiftKey) {\n      this._onIncrementalClick(event);\n    } else {\n      if (event.detail === 1) {\n        this._onSingleClick(event);\n      } else if (event.detail === 2) {\n        this._onDoubleClick(event);\n      } else if (event.detail === 3) {\n        this._onTripleClick(event);\n      }\n    }\n\n    this._addMouseDownListeners();\n    this.refresh(true);\n  }\n\n  /**\n   * Adds listeners when mousedown is triggered.\n   */\n  private _addMouseDownListeners(): void {\n    // Listen on the document so that dragging outside of viewport works\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.addEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.addEventListener('mouseup', this._mouseUpListener);\n    }\n    this._dragScrollIntervalTimer = window.setInterval(() => this._dragScroll(), DRAG_SCROLL_INTERVAL);\n  }\n\n  /**\n   * Removes the listeners that are registered when mousedown is triggered.\n   */\n  private _removeMouseDownListeners(): void {\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.removeEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.removeEventListener('mouseup', this._mouseUpListener);\n    }\n    clearInterval(this._dragScrollIntervalTimer);\n    this._dragScrollIntervalTimer = undefined;\n  }\n\n  /**\n   * Performs an incremental click, setting the selection end position to the mouse\n   * position.\n   * @param event The mouse event.\n   */\n  private _onIncrementalClick(event: MouseEvent): void {\n    if (this._model.selectionStart) {\n      this._model.selectionEnd = this._getMouseBufferCoords(event);\n    }\n  }\n\n  /**\n   * Performs a single click, resetting relevant state and setting the selection\n   * start position.\n   * @param event The mouse event.\n   */\n  private _onSingleClick(event: MouseEvent): void {\n    this._model.selectionStartLength = 0;\n    this._model.isSelectAllActive = false;\n    this._activeSelectionMode = this.shouldColumnSelect(event) ? SelectionMode.COLUMN : SelectionMode.NORMAL;\n\n    // Initialize the new selection\n    this._model.selectionStart = this._getMouseBufferCoords(event);\n    if (!this._model.selectionStart) {\n      return;\n    }\n    this._model.selectionEnd = undefined;\n\n    // Ensure the line exists\n    const line = this._bufferService.buffer.lines.get(this._model.selectionStart[1]);\n    if (!line) {\n      return;\n    }\n\n    // Return early if the click event is not in the buffer (eg. in scroll bar)\n    if (line.length === this._model.selectionStart[0]) {\n      return;\n    }\n\n    // If the mouse is over the second half of a wide character, adjust the\n    // selection to cover the whole character\n    if (line.hasWidth(this._model.selectionStart[0]) === 0) {\n      this._model.selectionStart[0]++;\n    }\n  }\n\n  /**\n   * Performs a double click, selecting the current word.\n   * @param event The mouse event.\n   */\n  private _onDoubleClick(event: MouseEvent): void {\n    if (this._selectWordAtCursor(event, true)) {\n      this._activeSelectionMode = SelectionMode.WORD;\n    }\n  }\n\n  /**\n   * Performs a triple click, selecting the current line and activating line\n   * select mode.\n   * @param event The mouse event.\n   */\n  private _onTripleClick(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._activeSelectionMode = SelectionMode.LINE;\n      this._selectLineAt(coords[1]);\n    }\n  }\n\n  /**\n   * Returns whether the selection manager should operate in column select mode\n   * @param event the mouse or keyboard event\n   */\n  public shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean {\n    return event.altKey && !(Browser.isMac && this._optionsService.rawOptions.macOptionClickForcesSelection);\n  }\n\n  /**\n   * Handles the mousemove event when the mouse button is down, recording the\n   * end of the selection and refreshing the selection.\n   * @param event The mousemove event.\n   */\n  private _onMouseMove(event: MouseEvent): void {\n    // If the mousemove listener is active it means that a selection is\n    // currently being made, we should stop propagation to prevent mouse events\n    // to be sent to the pty.\n    event.stopImmediatePropagation();\n\n    // Do nothing if there is no selection start, this can happen if the first\n    // click in the terminal is an incremental click\n    if (!this._model.selectionStart) {\n      return;\n    }\n\n    // Record the previous position so we know whether to redraw the selection\n    // at the end.\n    const previousSelectionEnd = this._model.selectionEnd ? [this._model.selectionEnd[0], this._model.selectionEnd[1]] : null;\n\n    // Set the initial selection end based on the mouse coordinates\n    this._model.selectionEnd = this._getMouseBufferCoords(event);\n    if (!this._model.selectionEnd) {\n      this.refresh(true);\n      return;\n    }\n\n    // Select the entire line if line select mode is active.\n    if (this._activeSelectionMode === SelectionMode.LINE) {\n      if (this._model.selectionEnd[1] < this._model.selectionStart[1]) {\n        this._model.selectionEnd[0] = 0;\n      } else {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      }\n    } else if (this._activeSelectionMode === SelectionMode.WORD) {\n      this._selectToWordAt(this._model.selectionEnd);\n    }\n\n    // Determine the amount of scrolling that will happen.\n    this._dragScrollAmount = this._getMouseEventScrollAmount(event);\n\n    // If the cursor was above or below the viewport, make sure it's at the\n    // start or end of the viewport respectively. This should only happen when\n    // NOT in column select mode.\n    if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n      if (this._dragScrollAmount > 0) {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      } else if (this._dragScrollAmount < 0) {\n        this._model.selectionEnd[0] = 0;\n      }\n    }\n\n    // If the character is a wide character include the cell to the right in the\n    // selection. Note that selections at the very end of the line will never\n    // have a character.\n    const buffer = this._bufferService.buffer;\n    if (this._model.selectionEnd[1] < buffer.lines.length) {\n      const line = buffer.lines.get(this._model.selectionEnd[1]);\n      if (line && line.hasWidth(this._model.selectionEnd[0]) === 0) {\n        this._model.selectionEnd[0]++;\n      }\n    }\n\n    // Only draw here if the selection changes.\n    if (!previousSelectionEnd ||\n      previousSelectionEnd[0] !== this._model.selectionEnd[0] ||\n      previousSelectionEnd[1] !== this._model.selectionEnd[1]) {\n      this.refresh(true);\n    }\n  }\n\n  /**\n   * The callback that occurs every DRAG_SCROLL_INTERVAL ms that does the\n   * scrolling of the viewport.\n   */\n  private _dragScroll(): void {\n    if (!this._model.selectionEnd || !this._model.selectionStart) {\n      return;\n    }\n    if (this._dragScrollAmount) {\n      this._onRequestScrollLines.fire({ amount: this._dragScrollAmount, suppressScrollEvent: false });\n      // Re-evaluate selection\n      // If the cursor was above or below the viewport, make sure it's at the\n      // start or end of the viewport respectively. This should only happen when\n      // NOT in column select mode.\n      const buffer = this._bufferService.buffer;\n      if (this._dragScrollAmount > 0) {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = this._bufferService.cols;\n        }\n        this._model.selectionEnd[1] = Math.min(buffer.ydisp + this._bufferService.rows, buffer.lines.length - 1);\n      } else {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = 0;\n        }\n        this._model.selectionEnd[1] = buffer.ydisp;\n      }\n      this.refresh();\n    }\n  }\n\n  /**\n   * Handles the mouseup event, removing the mousedown listeners.\n   * @param event The mouseup event.\n   */\n  private _onMouseUp(event: MouseEvent): void {\n    const timeElapsed = event.timeStamp - this._mouseDownTimeStamp;\n\n    this._removeMouseDownListeners();\n\n    if (this.selectionText.length <= 1 && timeElapsed < ALT_CLICK_MOVE_CURSOR_TIME && event.altKey && this._optionsService.getOption('altClickMovesCursor')) {\n      if (this._bufferService.buffer.ybase === this._bufferService.buffer.ydisp) {\n        const coordinates = this._mouseService.getCoords(\n          event,\n          this._element,\n          this._bufferService.cols,\n          this._bufferService.rows,\n          false\n        );\n        if (coordinates && coordinates[0] !== undefined && coordinates[1] !== undefined) {\n          const sequence = moveToCellSequence(coordinates[0] - 1, coordinates[1] - 1, this._bufferService, this._coreService.decPrivateModes.applicationCursorKeys);\n          this._coreService.triggerDataEvent(sequence, true);\n        }\n      }\n    } else {\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  private _fireEventIfSelectionChanged(): void {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    const hasSelection = !!start && !!end && (start[0] !== end[0] || start[1] !== end[1]);\n\n    if (!hasSelection) {\n      if (this._oldHasSelection) {\n        this._fireOnSelectionChange(start, end, hasSelection);\n      }\n      return;\n    }\n\n    // Sanity check, these should not be undefined as there is a selection\n    if (!start || !end) {\n      return;\n    }\n\n    if (!this._oldSelectionStart || !this._oldSelectionEnd || (\n      start[0] !== this._oldSelectionStart[0] || start[1] !== this._oldSelectionStart[1] ||\n      end[0] !== this._oldSelectionEnd[0] || end[1] !== this._oldSelectionEnd[1])) {\n\n      this._fireOnSelectionChange(start, end, hasSelection);\n    }\n  }\n\n  private _fireOnSelectionChange(start: [number, number] | undefined, end: [number, number] | undefined, hasSelection: boolean): void {\n    this._oldSelectionStart = start;\n    this._oldSelectionEnd = end;\n    this._oldHasSelection = hasSelection;\n    this._onSelectionChange.fire();\n  }\n\n  private _onBufferActivate(e: {activeBuffer: IBuffer, inactiveBuffer: IBuffer}): void {\n    this.clearSelection();\n    // Only adjust the selection on trim, shiftElements is rarely used (only in\n    // reverseIndex) and delete in a splice is only ever used when the same\n    // number of elements was just added. Given this is could actually be\n    // beneficial to leave the selection as is for these cases.\n    this._trimListener.dispose();\n    this._trimListener = e.activeBuffer.lines.onTrim(amount => this._onTrim(amount));\n  }\n\n  /**\n   * Converts a viewport column to the character index on the buffer line, the\n   * latter takes into account wide characters.\n   * @param coords The coordinates to find the 2 index for.\n   */\n  private _convertViewportColToCharacterIndex(bufferLine: IBufferLine, coords: [number, number]): number {\n    let charIndex = coords[0];\n    for (let i = 0; coords[0] >= i; i++) {\n      const length = bufferLine.loadCell(i, this._workCell).getChars().length;\n      if (this._workCell.getWidth() === 0) {\n        // Wide characters aren't included in the line string so decrement the\n        // index so the index is back on the wide character.\n        charIndex--;\n      } else if (length > 1 && coords[0] !== i) {\n        // Emojis take up multiple characters, so adjust accordingly. For these\n        // we don't want ot include the character at the column as we're\n        // returning the start index in the string, not the end index.\n        charIndex += length - 1;\n      }\n    }\n    return charIndex;\n  }\n\n  public setSelection(col: number, row: number, length: number): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this._model.selectionStart = [col, row];\n    this._model.selectionStartLength = length;\n    this.refresh();\n  }\n\n  public rightClickSelect(ev: MouseEvent): void {\n    if (!this._isClickInSelection(ev)) {\n      if (this._selectWordAtCursor(ev, false)) {\n        this.refresh(true);\n      }\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  /**\n   * Gets positional information for the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _getWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean, followWrappedLinesAbove: boolean = true, followWrappedLinesBelow: boolean = true): IWordPosition | undefined {\n    // Ensure coords are within viewport (eg. not within scroll bar)\n    if (coords[0] >= this._bufferService.cols) {\n      return undefined;\n    }\n\n    const buffer = this._bufferService.buffer;\n    const bufferLine = buffer.lines.get(coords[1]);\n    if (!bufferLine) {\n      return undefined;\n    }\n\n    const line = buffer.translateBufferLineToString(coords[1], false);\n\n    // Get actual index, taking into consideration wide characters\n    let startIndex = this._convertViewportColToCharacterIndex(bufferLine, coords);\n    let endIndex = startIndex;\n\n    // Record offset to be used later\n    const charOffset = coords[0] - startIndex;\n    let leftWideCharCount = 0;\n    let rightWideCharCount = 0;\n    let leftLongCharOffset = 0;\n    let rightLongCharOffset = 0;\n\n    if (line.charAt(startIndex) === ' ') {\n      // Expand until non-whitespace is hit\n      while (startIndex > 0 && line.charAt(startIndex - 1) === ' ') {\n        startIndex--;\n      }\n      while (endIndex < line.length && line.charAt(endIndex + 1) === ' ') {\n        endIndex++;\n      }\n    } else {\n      // Expand until whitespace is hit. This algorithm works by scanning left\n      // and right from the starting position, keeping both the index format\n      // (line) and the column format (bufferLine) in sync. When a wide\n      // character is hit, it is recorded and the column index is adjusted.\n      let startCol = coords[0];\n      let endCol = coords[0];\n\n      // Consider the initial position, skip it and increment the wide char\n      // variable\n      if (bufferLine.getWidth(startCol) === 0) {\n        leftWideCharCount++;\n        startCol--;\n      }\n      if (bufferLine.getWidth(endCol) === 2) {\n        rightWideCharCount++;\n        endCol++;\n      }\n\n      // Adjust the end index for characters whose length are > 1 (emojis)\n      const length = bufferLine.getString(endCol).length;\n      if (length > 1) {\n        rightLongCharOffset += length - 1;\n        endIndex += length - 1;\n      }\n\n      // Expand the string in both directions until a space is hit\n      while (startCol > 0 && startIndex > 0 && !this._isCharWordSeparator(bufferLine.loadCell(startCol - 1, this._workCell))) {\n        bufferLine.loadCell(startCol - 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 0) {\n          // If the next character is a wide char, record it and skip the column\n          leftWideCharCount++;\n          startCol--;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          leftLongCharOffset += length - 1;\n          startIndex -= length - 1;\n        }\n        startIndex--;\n        startCol--;\n      }\n      while (endCol < bufferLine.length && endIndex + 1 < line.length && !this._isCharWordSeparator(bufferLine.loadCell(endCol + 1, this._workCell))) {\n        bufferLine.loadCell(endCol + 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 2) {\n          // If the next character is a wide char, record it and skip the column\n          rightWideCharCount++;\n          endCol++;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          rightLongCharOffset += length - 1;\n          endIndex += length - 1;\n        }\n        endIndex++;\n        endCol++;\n      }\n    }\n\n    // Incremenet the end index so it is at the start of the next character\n    endIndex++;\n\n    // Calculate the start _column_, converting the the string indexes back to\n    // column coordinates.\n    let start =\n        startIndex // The index of the selection's start char in the line string\n        + charOffset // The difference between the initial char's column and index\n        - leftWideCharCount // The number of wide chars left of the initial char\n        + leftLongCharOffset; // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n\n    // Calculate the length in _columns_, converting the the string indexes back\n    // to column coordinates.\n    let length = Math.min(this._bufferService.cols, // Disallow lengths larger than the terminal cols\n      endIndex // The index of the selection's end char in the line string\n      - startIndex // The index of the selection's start char in the line string\n      + leftWideCharCount // The number of wide chars left of the initial char\n      + rightWideCharCount // The number of wide chars right of the initial char (inclusive)\n      - leftLongCharOffset // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n      - rightLongCharOffset); // The number of additional chars right of the initial char (inclusive) added by columns with strings longer than 1 (emojis)\n\n    if (!allowWhitespaceOnlySelection && line.slice(startIndex, endIndex).trim() === '') {\n      return undefined;\n    }\n\n    // Recurse upwards if the line is wrapped and the word wraps to the above line\n    if (followWrappedLinesAbove) {\n      if (start === 0 && bufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n        const previousBufferLine = buffer.lines.get(coords[1] - 1);\n        if (previousBufferLine && bufferLine.isWrapped && previousBufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n          const previousLineWordPosition = this._getWordAt([this._bufferService.cols - 1, coords[1] - 1], false, true, false);\n          if (previousLineWordPosition) {\n            const offset = this._bufferService.cols - previousLineWordPosition.start;\n            start -= offset;\n            length += offset;\n          }\n        }\n      }\n    }\n\n    // Recurse downwards if the line is wrapped and the word wraps to the next line\n    if (followWrappedLinesBelow) {\n      if (start + length === this._bufferService.cols && bufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n        const nextBufferLine = buffer.lines.get(coords[1] + 1);\n        if (nextBufferLine?.isWrapped && nextBufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n          const nextLineWordPosition = this._getWordAt([0, coords[1] + 1], false, false, true);\n          if (nextLineWordPosition) {\n            length += nextLineWordPosition.length;\n          }\n        }\n      }\n    }\n\n    return { start, length };\n  }\n\n  /**\n   * Selects the word at the coordinates specified.\n   * @param coords The coordinates to get the word at.\n   * @param allowWhitespaceOnlySelection If whitespace should be selected\n   */\n  protected _selectWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean): void {\n    const wordPosition = this._getWordAt(coords, allowWhitespaceOnlySelection);\n    if (wordPosition) {\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        coords[1]--;\n      }\n      this._model.selectionStart = [wordPosition.start, coords[1]];\n      this._model.selectionStartLength = wordPosition.length;\n    }\n  }\n\n  /**\n   * Sets the selection end to the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _selectToWordAt(coords: [number, number]): void {\n    const wordPosition = this._getWordAt(coords, true);\n    if (wordPosition) {\n      let endRow = coords[1];\n\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        endRow--;\n      }\n\n      // Adjust wrapped length value, this only needs to happen when values are reversed as in that\n      // case we're interested in the start of the word, not the end\n      if (!this._model.areSelectionValuesReversed()) {\n        while (wordPosition.start + wordPosition.length > this._bufferService.cols) {\n          wordPosition.length -= this._bufferService.cols;\n          endRow++;\n        }\n      }\n\n      this._model.selectionEnd = [this._model.areSelectionValuesReversed() ? wordPosition.start : wordPosition.start + wordPosition.length, endRow];\n    }\n  }\n\n  /**\n   * Gets whether the character is considered a word separator by the select\n   * word logic.\n   * @param char The character to check.\n   */\n  private _isCharWordSeparator(cell: CellData): boolean {\n    // Zero width characters are never separators as they are always to the\n    // right of wide characters\n    if (cell.getWidth() === 0) {\n      return false;\n    }\n    return this._optionsService.rawOptions.wordSeparator.indexOf(cell.getChars()) >= 0;\n  }\n\n  /**\n   * Selects the line specified.\n   * @param line The line index.\n   */\n  protected _selectLineAt(line: number): void {\n    const wrappedRange = this._bufferService.buffer.getWrappedRangeForLine(line);\n    this._model.selectionStart = [0, wrappedRange.first];\n    this._model.selectionEnd = [this._bufferService.cols, wrappedRange.last];\n    this._model.selectionStartLength = 0;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { IRenderDimensions, IRenderer } from 'browser/renderer/Types';\nimport { IColorSet } from 'browser/Types';\nimport { ISelectionRedrawRequestEvent as ISelectionRequestRedrawEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { IDisposable } from 'common/Types';\nimport { IDecorationOptions, IDecoration } from 'xterm';\nimport { IBufferService } from 'common/services/Services';\n\nexport const ICharSizeService = createDecorator<ICharSizeService>('CharSizeService');\nexport interface ICharSizeService {\n  serviceBrand: undefined;\n\n  readonly width: number;\n  readonly height: number;\n  readonly hasValidSize: boolean;\n\n  readonly onCharSizeChange: IEvent<void>;\n\n  measure(): void;\n}\n\nexport const ICoreBrowserService = createDecorator<ICoreBrowserService>('CoreBrowserService');\nexport interface ICoreBrowserService {\n  serviceBrand: undefined;\n\n  readonly isFocused: boolean;\n}\n\nexport const IMouseService = createDecorator<IMouseService>('MouseService');\nexport interface IMouseService {\n  serviceBrand: undefined;\n\n  getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined;\n  getRawByteCoords(event: MouseEvent, element: HTMLElement, colCount: number, rowCount: number): { x: number, y: number } | undefined;\n}\n\nexport const IRenderService = createDecorator<IRenderService>('RenderService');\nexport interface IRenderService extends IDisposable {\n  serviceBrand: undefined;\n\n  onDimensionsChange: IEvent<IRenderDimensions>;\n  /**\n   * Fires when buffer changes are rendered. This does not fire when only cursor\n   * or selections are rendered.\n   */\n  onRenderedBufferChange: IEvent<{ start: number, end: number }>;\n  onRefreshRequest: IEvent<{ start: number, end: number }>;\n\n  dimensions: IRenderDimensions;\n\n  refreshRows(start: number, end: number): void;\n  clearTextureAtlas(): void;\n  resize(cols: number, rows: number): void;\n  changeOptions(): void;\n  setRenderer(renderer: IRenderer): void;\n  setColors(colors: IColorSet): void;\n  onDevicePixelRatioChange(): void;\n  onResize(cols: number, rows: number): void;\n  // TODO: Is this useful when we have onResize?\n  onCharSizeChanged(): void;\n  onBlur(): void;\n  onFocus(): void;\n  onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void;\n  onCursorMove(): void;\n  clear(): void;\n}\n\nexport const ISelectionService = createDecorator<ISelectionService>('SelectionService');\nexport interface ISelectionService {\n  serviceBrand: undefined;\n\n  readonly selectionText: string;\n  readonly hasSelection: boolean;\n  readonly selectionStart: [number, number] | undefined;\n  readonly selectionEnd: [number, number] | undefined;\n\n  readonly onLinuxMouseSelection: IEvent<string>;\n  readonly onRequestRedraw: IEvent<ISelectionRequestRedrawEvent>;\n  readonly onRequestScrollLines: IEvent<ISelectionRequestScrollLinesEvent>;\n  readonly onSelectionChange: IEvent<void>;\n\n  disable(): void;\n  enable(): void;\n  reset(): void;\n  setSelection(row: number, col: number, length: number): void;\n  selectAll(): void;\n  selectLines(start: number, end: number): void;\n  clearSelection(): void;\n  rightClickSelect(event: MouseEvent): void;\n  shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean;\n  shouldForceSelection(event: MouseEvent): boolean;\n  refresh(isLinuxMouseSelection?: boolean): void;\n  onMouseDown(event: MouseEvent): void;\n}\n\nexport const ISoundService = createDecorator<ISoundService>('SoundService');\nexport interface ISoundService {\n  serviceBrand: undefined;\n\n  playBellSound(): void;\n}\n\n\nexport const ICharacterJoinerService = createDecorator<ICharacterJoinerService>('CharacterJoinerService');\nexport interface ICharacterJoinerService {\n  serviceBrand: undefined;\n\n  register(handler: (text: string) => [number, number][]): number;\n  deregister(joinerId: number): boolean;\n  getJoinedCharacters(row: number): [number, number][];\n}\n\n\nexport const IDecorationService = createDecorator<IDecorationService>('DecorationService');\nexport interface IDecorationService extends IDisposable {\n  registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined;\n  refresh(): void;\n  attachToDom(screenElement: HTMLElement, renderService: IRenderService, bufferService: IBufferService): void;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { ISoundService } from 'browser/services/Services';\n\nexport class SoundService implements ISoundService {\n  public serviceBrand: undefined;\n\n  private static _audioContext: AudioContext;\n\n  public static get audioContext(): AudioContext | null {\n    if (!SoundService._audioContext) {\n      const audioContextCtor: typeof AudioContext = (window as any).AudioContext || (window as any).webkitAudioContext;\n      if (!audioContextCtor) {\n        console.warn('Web Audio API is not supported by this browser. Consider upgrading to the latest version');\n        return null;\n      }\n      SoundService._audioContext = new audioContextCtor();\n    }\n    return SoundService._audioContext;\n  }\n\n  constructor(\n    @IOptionsService private _optionsService: IOptionsService\n  ) {\n  }\n\n  public playBellSound(): void {\n    const ctx = SoundService.audioContext;\n    if (!ctx) {\n      return;\n    }\n    const bellAudioSource = ctx.createBufferSource();\n    ctx.decodeAudioData(this._base64ToArrayBuffer(this._removeMimeType(this._optionsService.rawOptions.bellSound)), (buffer) => {\n      bellAudioSource.buffer = buffer;\n      bellAudioSource.connect(ctx.destination);\n      bellAudioSource.start(0);\n    });\n  }\n\n  private _base64ToArrayBuffer(base64: string): ArrayBuffer {\n    const binaryString = window.atob(base64);\n    const len = binaryString.length;\n    const bytes = new Uint8Array(len);\n\n    for (let i = 0; i < len; i++) {\n      bytes[i] = binaryString.charCodeAt(i);\n    }\n\n    return bytes.buffer;\n  }\n\n  private _removeMimeType(dataURI: string): string {\n    // Split the input to get the mime-type and the data itself\n    const splitUri = dataURI.split(',');\n\n    // Return only the data\n    return splitUri[1];\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICircularList } from 'common/Types';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\n\nexport interface IInsertEvent {\n  index: number;\n  amount: number;\n}\n\nexport interface IDeleteEvent {\n  index: number;\n  amount: number;\n}\n\n/**\n * Represents a circular list; a list with a maximum size that wraps around when push is called,\n * overriding values at the start of the list.\n */\nexport class CircularList<T> implements ICircularList<T> {\n  protected _array: (T | undefined)[];\n  private _startIndex: number;\n  private _length: number;\n\n  public onDeleteEmitter = new EventEmitter<IDeleteEvent>();\n  public get onDelete(): IEvent<IDeleteEvent> { return this.onDeleteEmitter.event; }\n  public onInsertEmitter = new EventEmitter<IInsertEvent>();\n  public get onInsert(): IEvent<IInsertEvent> { return this.onInsertEmitter.event; }\n  public onTrimEmitter = new EventEmitter<number>();\n  public get onTrim(): IEvent<number> { return this.onTrimEmitter.event; }\n\n  constructor(\n    private _maxLength: number\n  ) {\n    this._array = new Array<T>(this._maxLength);\n    this._startIndex = 0;\n    this._length = 0;\n  }\n\n  public get maxLength(): number {\n    return this._maxLength;\n  }\n\n  public set maxLength(newMaxLength: number) {\n    // There was no change in maxLength, return early.\n    if (this._maxLength === newMaxLength) {\n      return;\n    }\n\n    // Reconstruct array, starting at index 0. Only transfer values from the\n    // indexes 0 to length.\n    const newArray = new Array<T | undefined>(newMaxLength);\n    for (let i = 0; i < Math.min(newMaxLength, this.length); i++) {\n      newArray[i] = this._array[this._getCyclicIndex(i)];\n    }\n    this._array = newArray;\n    this._maxLength = newMaxLength;\n    this._startIndex = 0;\n  }\n\n  public get length(): number {\n    return this._length;\n  }\n\n  public set length(newLength: number) {\n    if (newLength > this._length) {\n      for (let i = this._length; i < newLength; i++) {\n        this._array[i] = undefined;\n      }\n    }\n    this._length = newLength;\n  }\n\n  /**\n   * Gets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index of the value to get.\n   * @return The value corresponding to the index.\n   */\n  public get(index: number): T | undefined {\n    return this._array[this._getCyclicIndex(index)];\n  }\n\n  /**\n   * Sets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index to set.\n   * @param value The value to set.\n   */\n  public set(index: number, value: T | undefined): void {\n    this._array[this._getCyclicIndex(index)] = value;\n  }\n\n  /**\n   * Pushes a new value onto the list, wrapping around to the start of the array, overriding index 0\n   * if the maximum length is reached.\n   * @param value The value to push onto the list.\n   */\n  public push(value: T): void {\n    this._array[this._getCyclicIndex(this._length)] = value;\n    if (this._length === this._maxLength) {\n      this._startIndex = ++this._startIndex % this._maxLength;\n      this.onTrimEmitter.fire(1);\n    } else {\n      this._length++;\n    }\n  }\n\n  /**\n   * Advance ringbuffer index and return current element for recycling.\n   * Note: The buffer must be full for this method to work.\n   * @throws When the buffer is not full.\n   */\n  public recycle(): T {\n    if (this._length !== this._maxLength) {\n      throw new Error('Can only recycle when the buffer is full');\n    }\n    this._startIndex = ++this._startIndex % this._maxLength;\n    this.onTrimEmitter.fire(1);\n    return this._array[this._getCyclicIndex(this._length - 1)]!;\n  }\n\n  /**\n   * Ringbuffer is at max length.\n   */\n  public get isFull(): boolean {\n    return this._length === this._maxLength;\n  }\n\n  /**\n   * Removes and returns the last value on the list.\n   * @return The popped value.\n   */\n  public pop(): T | undefined {\n    return this._array[this._getCyclicIndex(this._length-- - 1)];\n  }\n\n  /**\n   * Deletes and/or inserts items at a particular index (in that order). Unlike\n   * Array.prototype.splice, this operation does not return the deleted items as a new array in\n   * order to save creating a new array. Note that this operation may shift all values in the list\n   * in the worst case.\n   * @param start The index to delete and/or insert.\n   * @param deleteCount The number of elements to delete.\n   * @param items The items to insert.\n   */\n  public splice(start: number, deleteCount: number, ...items: T[]): void {\n    // Delete items\n    if (deleteCount) {\n      for (let i = start; i < this._length - deleteCount; i++) {\n        this._array[this._getCyclicIndex(i)] = this._array[this._getCyclicIndex(i + deleteCount)];\n      }\n      this._length -= deleteCount;\n      this.onDeleteEmitter.fire({ index: start, amount: deleteCount });\n    }\n\n    // Add items\n    for (let i = this._length - 1; i >= start; i--) {\n      this._array[this._getCyclicIndex(i + items.length)] = this._array[this._getCyclicIndex(i)];\n    }\n    for (let i = 0; i < items.length; i++) {\n      this._array[this._getCyclicIndex(start + i)] = items[i];\n    }\n    if (items.length) {\n      this.onInsertEmitter.fire({ index: start, amount: items.length });\n    }\n\n    // Adjust length as needed\n    if (this._length + items.length > this._maxLength) {\n      const countToTrim = (this._length + items.length) - this._maxLength;\n      this._startIndex += countToTrim;\n      this._length = this._maxLength;\n      this.onTrimEmitter.fire(countToTrim);\n    } else {\n      this._length += items.length;\n    }\n  }\n\n  /**\n   * Trims a number of items from the start of the list.\n   * @param count The number of items to remove.\n   */\n  public trimStart(count: number): void {\n    if (count > this._length) {\n      count = this._length;\n    }\n    this._startIndex += count;\n    this._length -= count;\n    this.onTrimEmitter.fire(count);\n  }\n\n  public shiftElements(start: number, count: number, offset: number): void {\n    if (count <= 0) {\n      return;\n    }\n    if (start < 0 || start >= this._length) {\n      throw new Error('start argument out of range');\n    }\n    if (start + offset < 0) {\n      throw new Error('Cannot shift elements in list beyond index 0');\n    }\n\n    if (offset > 0) {\n      for (let i = count - 1; i >= 0; i--) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n      const expandListBy = (start + count + offset) - this._length;\n      if (expandListBy > 0) {\n        this._length += expandListBy;\n        while (this._length > this._maxLength) {\n          this._length--;\n          this._startIndex++;\n          this.onTrimEmitter.fire(1);\n        }\n      }\n    } else {\n      for (let i = 0; i < count; i++) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n    }\n  }\n\n  /**\n   * Gets the cyclic index for the specified regular index. The cyclic index can then be used on the\n   * backing array to get the element associated with the regular index.\n   * @param index The regular index.\n   * @returns The cyclic index.\n   */\n  private _getCyclicIndex(index: number): number {\n    return (this._startIndex + index) % this._maxLength;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/*\n * A simple utility for cloning values\n */\nexport function clone<T>(val: T, depth: number = 5): T {\n  if (typeof val !== 'object') {\n    return val;\n  }\n\n  // If we're cloning an array, use an array as the base, otherwise use an object\n  const clonedObject: any = Array.isArray(val) ? [] : {};\n\n  for (const key in val) {\n    // Recursively clone eack item unless we're at the maximum depth\n    clonedObject[key] = depth <= 1 ? val[key] : (val[key] && clone(val[key], depth - 1));\n  }\n\n  return clonedObject as T;\n}\n","/**\n * Copyright (c) 2014-2020 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { IInstantiationService, IOptionsService, IBufferService, ILogService, ICharsetService, ICoreService, ICoreMouseService, IUnicodeService, IDirtyRowService, LogLevelEnum, ITerminalOptions } from 'common/services/Services';\nimport { InstantiationService } from 'common/services/InstantiationService';\nimport { LogService } from 'common/services/LogService';\nimport { BufferService, MINIMUM_COLS, MINIMUM_ROWS } from 'common/services/BufferService';\nimport { OptionsService } from 'common/services/OptionsService';\nimport { IDisposable, IBufferLine, IAttributeData, ICoreTerminal, IKeyboardEvent, IScrollEvent, ScrollSource, ITerminalOptions as IPublicTerminalOptions } from 'common/Types';\nimport { CoreService } from 'common/services/CoreService';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { CoreMouseService } from 'common/services/CoreMouseService';\nimport { DirtyRowService } from 'common/services/DirtyRowService';\nimport { UnicodeService } from 'common/services/UnicodeService';\nimport { CharsetService } from 'common/services/CharsetService';\nimport { updateWindowsModeWrappedState } from 'common/WindowsMode';\nimport { IFunctionIdentifier, IParams } from 'common/parser/Types';\nimport { IBufferSet } from 'common/buffer/Types';\nimport { InputHandler } from 'common/InputHandler';\nimport { WriteBuffer } from 'common/input/WriteBuffer';\n\n// Only trigger this warning a single time per session\nlet hasWriteSyncWarnHappened = false;\n\nexport abstract class CoreTerminal extends Disposable implements ICoreTerminal {\n  protected readonly _instantiationService: IInstantiationService;\n  protected readonly _bufferService: IBufferService;\n  protected readonly _logService: ILogService;\n  protected readonly _charsetService: ICharsetService;\n  protected readonly _dirtyRowService: IDirtyRowService;\n\n  public readonly coreMouseService: ICoreMouseService;\n  public readonly coreService: ICoreService;\n  public readonly unicodeService: IUnicodeService;\n  public readonly optionsService: IOptionsService;\n\n  protected _inputHandler: InputHandler;\n  private _writeBuffer: WriteBuffer;\n  private _windowsMode: IDisposable | undefined;\n\n  private _onBinary = new EventEmitter<string>();\n  public get onBinary(): IEvent<string> { return this._onBinary.event; }\n  private _onData = new EventEmitter<string>();\n  public get onData(): IEvent<string> { return this._onData.event; }\n  protected _onLineFeed = new EventEmitter<void>();\n  public get onLineFeed(): IEvent<void> { return this._onLineFeed.event; }\n  private _onResize = new EventEmitter<{ cols: number, rows: number }>();\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._onResize.event; }\n  protected _onScroll = new EventEmitter<IScrollEvent, void>();\n  /**\n   * Internally we track the source of the scroll but this is meaningless outside the library so\n   * it's filtered out.\n   */\n  protected _onScrollApi?: EventEmitter<number, void>;\n  public get onScroll(): IEvent<number, void> {\n    if (!this._onScrollApi) {\n      this._onScrollApi = new EventEmitter<number, void>();\n      this.register(this._onScroll.event(ev => {\n        this._onScrollApi?.fire(ev.position);\n      }));\n    }\n    return this._onScrollApi.event;\n  }\n\n  public get cols(): number { return this._bufferService.cols; }\n  public get rows(): number { return this._bufferService.rows; }\n  public get buffers(): IBufferSet { return this._bufferService.buffers; }\n  public get options(): ITerminalOptions { return this.optionsService.options; }\n  public set options(options: ITerminalOptions) {\n    for (const key in options) {\n      this.optionsService.options[key] = options[key];\n    }\n  }\n\n  constructor(\n    options: Partial<ITerminalOptions>\n  ) {\n    super();\n\n    // Setup and initialize services\n    this._instantiationService = new InstantiationService();\n    this.optionsService = new OptionsService(options);\n    this._instantiationService.setService(IOptionsService, this.optionsService);\n    this._bufferService = this.register(this._instantiationService.createInstance(BufferService));\n    this._instantiationService.setService(IBufferService, this._bufferService);\n    this._logService = this._instantiationService.createInstance(LogService);\n    this._instantiationService.setService(ILogService, this._logService);\n    this.coreService = this.register(this._instantiationService.createInstance(CoreService, () => this.scrollToBottom()));\n    this._instantiationService.setService(ICoreService, this.coreService);\n    this.coreMouseService = this._instantiationService.createInstance(CoreMouseService);\n    this._instantiationService.setService(ICoreMouseService, this.coreMouseService);\n    this._dirtyRowService = this._instantiationService.createInstance(DirtyRowService);\n    this._instantiationService.setService(IDirtyRowService, this._dirtyRowService);\n    this.unicodeService = this._instantiationService.createInstance(UnicodeService);\n    this._instantiationService.setService(IUnicodeService, this.unicodeService);\n    this._charsetService = this._instantiationService.createInstance(CharsetService);\n    this._instantiationService.setService(ICharsetService, this._charsetService);\n\n    // Register input handler and handle/forward events\n    this._inputHandler = new InputHandler(this._bufferService, this._charsetService, this.coreService, this._dirtyRowService, this._logService, this.optionsService, this.coreMouseService, this.unicodeService);\n    this.register(forwardEvent(this._inputHandler.onLineFeed, this._onLineFeed));\n    this.register(this._inputHandler);\n\n    // Setup listeners\n    this.register(forwardEvent(this._bufferService.onResize, this._onResize));\n    this.register(forwardEvent(this.coreService.onData, this._onData));\n    this.register(forwardEvent(this.coreService.onBinary, this._onBinary));\n    this.register(this.optionsService.onOptionChange(key => this._updateOptions(key)));\n    this.register(this._bufferService.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._dirtyRowService.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n    this.register(this._inputHandler.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._dirtyRowService.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n\n    // Setup WriteBuffer\n    this._writeBuffer = new WriteBuffer((data, promiseResult) => this._inputHandler.parse(data, promiseResult));\n  }\n\n  public dispose(): void {\n    if (this._isDisposed) {\n      return;\n    }\n    super.dispose();\n    this._windowsMode?.dispose();\n    this._windowsMode = undefined;\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._writeBuffer.write(data, callback);\n  }\n\n  /**\n   * Write data to terminal synchonously.\n   *\n   * This method is unreliable with async parser handlers, thus should not\n   * be used anymore. If you need blocking semantics on data input consider\n   * `write` with a callback instead.\n   *\n   * @deprecated Unreliable, will be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    if (this._logService.logLevel <= LogLevelEnum.WARN && !hasWriteSyncWarnHappened) {\n      this._logService.warn('writeSync is unreliable and will be removed soon.');\n      hasWriteSyncWarnHappened = true;\n    }\n    this._writeBuffer.writeSync(data, maxSubsequentCalls);\n  }\n\n  public resize(x: number, y: number): void {\n    if (isNaN(x) || isNaN(y)) {\n      return;\n    }\n\n    x = Math.max(x, MINIMUM_COLS);\n    y = Math.max(y, MINIMUM_ROWS);\n\n    this._bufferService.resize(x, y);\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    this._bufferService.scroll(eraseAttr, isWrapped);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    this._bufferService.scrollLines(disp, suppressScrollEvent, source);\n  }\n\n  /**\n   * Scroll the display of the terminal by a number of pages.\n   * @param pageCount The number of pages to scroll (negative scrolls up).\n   */\n  public scrollPages(pageCount: number): void {\n    this._bufferService.scrollPages(pageCount);\n  }\n\n  /**\n   * Scrolls the display of the terminal to the top.\n   */\n  public scrollToTop(): void {\n    this._bufferService.scrollToTop();\n  }\n\n  /**\n   * Scrolls the display of the terminal to the bottom.\n   */\n  public scrollToBottom(): void {\n    this._bufferService.scrollToBottom();\n  }\n\n  public scrollToLine(line: number): void {\n    this._bufferService.scrollToLine(line);\n  }\n\n  /** Add handler for ESC escape sequence. See xterm.d.ts for details. */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerEscHandler(id, callback);\n  }\n\n  /** Add handler for DCS escape sequence. See xterm.d.ts for details. */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerDcsHandler(id, callback);\n  }\n\n  /** Add handler for CSI escape sequence. See xterm.d.ts for details. */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerCsiHandler(id, callback);\n  }\n\n  /** Add handler for OSC escape sequence. See xterm.d.ts for details. */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerOscHandler(ident, callback);\n  }\n\n  protected _setup(): void {\n    if (this.optionsService.rawOptions.windowsMode) {\n      this._enableWindowsMode();\n    }\n  }\n\n  public reset(): void {\n    this._inputHandler.reset();\n    this._bufferService.reset();\n    this._charsetService.reset();\n    this.coreService.reset();\n    this.coreMouseService.reset();\n  }\n\n  protected _updateOptions(key: string): void {\n    // TODO: These listeners should be owned by individual components\n    switch (key) {\n      case 'scrollback':\n        this.buffers.resize(this.cols, this.rows);\n        break;\n      case 'windowsMode':\n        if (this.optionsService.rawOptions.windowsMode) {\n          this._enableWindowsMode();\n        } else {\n          this._windowsMode?.dispose();\n          this._windowsMode = undefined;\n        }\n        break;\n    }\n  }\n\n  protected _enableWindowsMode(): void {\n    if (!this._windowsMode) {\n      const disposables: IDisposable[] = [];\n      disposables.push(this.onLineFeed(updateWindowsModeWrappedState.bind(null, this._bufferService)));\n      disposables.push(this.registerCsiHandler({ final: 'H' }, () => {\n        updateWindowsModeWrappedState(this._bufferService);\n        return false;\n      }));\n      this._windowsMode = {\n        dispose: () => {\n          for (const d of disposables) {\n            d.dispose();\n          }\n        }\n      };\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\ninterface IListener<T, U = void> {\n  (arg1: T, arg2: U): void;\n}\n\nexport interface IEvent<T, U = void> {\n  (listener: (arg1: T, arg2: U) => any): IDisposable;\n}\n\nexport interface IEventEmitter<T, U = void> {\n  event: IEvent<T, U>;\n  fire(arg1: T, arg2: U): void;\n  dispose(): void;\n}\n\nexport class EventEmitter<T, U = void> implements IEventEmitter<T, U> {\n  private _listeners: IListener<T, U>[] = [];\n  private _event?: IEvent<T, U>;\n  private _disposed: boolean = false;\n\n  public get event(): IEvent<T, U> {\n    if (!this._event) {\n      this._event = (listener: (arg1: T, arg2: U) => any) => {\n        this._listeners.push(listener);\n        const disposable = {\n          dispose: () => {\n            if (!this._disposed) {\n              for (let i = 0; i < this._listeners.length; i++) {\n                if (this._listeners[i] === listener) {\n                  this._listeners.splice(i, 1);\n                  return;\n                }\n              }\n            }\n          }\n        };\n        return disposable;\n      };\n    }\n    return this._event;\n  }\n\n  public fire(arg1: T, arg2: U): void {\n    const queue: IListener<T, U>[] = [];\n    for (let i = 0; i < this._listeners.length; i++) {\n      queue.push(this._listeners[i]);\n    }\n    for (let i = 0; i < queue.length; i++) {\n      queue[i].call(undefined, arg1, arg2);\n    }\n  }\n\n  public dispose(): void {\n    if (this._listeners) {\n      this._listeners.length = 0;\n    }\n    this._disposed = true;\n  }\n}\n\nexport function forwardEvent<T>(from: IEvent<T>, to: IEventEmitter<T>): IDisposable {\n  return from(e => to.fire(e));\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IInputHandler, IAttributeData, IDisposable, IWindowOptions, IColorEvent, IParseStack, ColorIndex, ColorRequestType } from 'common/Types';\nimport { C0, C1 } from 'common/data/EscapeSequences';\nimport { CHARSETS, DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { EscapeSequenceParser } from 'common/parser/EscapeSequenceParser';\nimport { Disposable } from 'common/Lifecycle';\nimport { concat } from 'common/TypedArrayUtils';\nimport { StringToUtf32, stringFromCodePoint, utf32ToString, Utf8ToUtf32 } from 'common/input/TextDecoder';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IFunctionIdentifier } from 'common/parser/Types';\nimport { NULL_CELL_CODE, NULL_CELL_WIDTH, Attributes, FgFlags, BgFlags, Content, UnderlineStyle } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { ICoreService, IBufferService, IOptionsService, ILogService, IDirtyRowService, ICoreMouseService, ICharsetService, IUnicodeService, LogLevelEnum } from 'common/services/Services';\nimport { OscHandler } from 'common/parser/OscParser';\nimport { DcsHandler } from 'common/parser/DcsParser';\nimport { IBuffer } from 'common/buffer/Types';\nimport { parseColor } from 'common/input/XParseColor';\n\n/**\n * Map collect to glevel. Used in `selectCharset`.\n */\nconst GLEVEL: { [key: string]: number } = { '(': 0, ')': 1, '*': 2, '+': 3, '-': 1, '.': 2 };\n\n/**\n * VT commands done by the parser - FIXME: move this to the parser?\n */\n// @vt: #Y   ESC   CSI   \"Control Sequence Introducer\"   \"ESC [\"   \"Start of a CSI sequence.\"\n// @vt: #Y   ESC   OSC   \"Operating System Command\"      \"ESC ]\"   \"Start of an OSC sequence.\"\n// @vt: #Y   ESC   DCS   \"Device Control String\"         \"ESC P\"   \"Start of a DCS sequence.\"\n// @vt: #Y   ESC   ST    \"String Terminator\"             \"ESC \\\"   \"Terminator used for string type sequences.\"\n// @vt: #Y   ESC   PM    \"Privacy Message\"               \"ESC ^\"   \"Start of a privacy message.\"\n// @vt: #Y   ESC   APC   \"Application Program Command\"   \"ESC _\"   \"Start of an APC sequence.\"\n// @vt: #Y   C1    CSI   \"Control Sequence Introducer\"   \"\\x9B\"    \"Start of a CSI sequence.\"\n// @vt: #Y   C1    OSC   \"Operating System Command\"      \"\\x9D\"    \"Start of an OSC sequence.\"\n// @vt: #Y   C1    DCS   \"Device Control String\"         \"\\x90\"    \"Start of a DCS sequence.\"\n// @vt: #Y   C1    ST    \"String Terminator\"             \"\\x9C\"    \"Terminator used for string type sequences.\"\n// @vt: #Y   C1    PM    \"Privacy Message\"               \"\\x9E\"    \"Start of a privacy message.\"\n// @vt: #Y   C1    APC   \"Application Program Command\"   \"\\x9F\"    \"Start of an APC sequence.\"\n// @vt: #Y   C0    NUL   \"Null\"                          \"\\0, \\x00\"  \"NUL is ignored.\"\n// @vt: #Y   C0    ESC   \"Escape\"                        \"\\e, \\x1B\"  \"Start of a sequence. Cancels any other sequence.\"\n\n/**\n * Document common VT features here that are currently unsupported\n */\n// @vt: #N   DCS   SIXEL   \"SIXEL Graphics\"  \"DCS Ps ; Ps ; Ps ; q \tPt ST\"   \"Draw SIXEL image starting at cursor position.\"\n// @vt: #N   OSC    1   \"Set Icon Name\"  \"OSC 1 ; Pt BEL\"  \"Set icon name.\"\n\n/**\n * Max length of the UTF32 input buffer. Real memory consumption is 4 times higher.\n */\nconst MAX_PARSEBUFFER_LENGTH = 131072;\n\n/**\n * Limit length of title and icon name stacks.\n */\nconst STACK_LIMIT = 10;\n\n// map params to window option\nfunction paramToWindowOption(n: number, opts: IWindowOptions): boolean {\n  if (n > 24) {\n    return opts.setWinLines || false;\n  }\n  switch (n) {\n    case 1: return !!opts.restoreWin;\n    case 2: return !!opts.minimizeWin;\n    case 3: return !!opts.setWinPosition;\n    case 4: return !!opts.setWinSizePixels;\n    case 5: return !!opts.raiseWin;\n    case 6: return !!opts.lowerWin;\n    case 7: return !!opts.refreshWin;\n    case 8: return !!opts.setWinSizeChars;\n    case 9: return !!opts.maximizeWin;\n    case 10: return !!opts.fullscreenWin;\n    case 11: return !!opts.getWinState;\n    case 13: return !!opts.getWinPosition;\n    case 14: return !!opts.getWinSizePixels;\n    case 15: return !!opts.getScreenSizePixels;\n    case 16: return !!opts.getCellSizePixels;\n    case 18: return !!opts.getWinSizeChars;\n    case 19: return !!opts.getScreenSizeChars;\n    case 20: return !!opts.getIconTitle;\n    case 21: return !!opts.getWinTitle;\n    case 22: return !!opts.pushTitle;\n    case 23: return !!opts.popTitle;\n    case 24: return !!opts.setWinLines;\n  }\n  return false;\n}\n\nexport enum WindowsOptionsReportType {\n  GET_WIN_SIZE_PIXELS = 0,\n  GET_CELL_SIZE_PIXELS = 1\n}\n\n// create a warning log if an async handler takes longer than the limit (in ms)\nconst SLOW_ASYNC_LIMIT = 5000;\n\n/**\n * DCS subparser implementations\n */\n\n/**\n * DCS $ q Pt ST\n *   DECRQSS (https://vt100.net/docs/vt510-rm/DECRQSS.html)\n *   Request Status String (DECRQSS), VT420 and up.\n *   Response: DECRPSS (https://vt100.net/docs/vt510-rm/DECRPSS.html)\n *\n * @vt: #P[See limited support below.]  DCS   DECRQSS   \"Request Selection or Setting\"  \"DCS $ q Pt ST\"   \"Request several terminal settings.\"\n * Response is in the form `ESC P 1 $ r Pt ST` for valid requests, where `Pt` contains the corresponding CSI string,\n * `ESC P 0 ST` for invalid requests.\n *\n * Supported requests and responses:\n *\n * | Type                             | Request           | Response (`Pt`)                                       |\n * | -------------------------------- | ----------------- | ----------------------------------------------------- |\n * | Graphic Rendition (SGR)          | `DCS $ q m ST`    | always reporting `0m` (currently broken)              |\n * | Top and Bottom Margins (DECSTBM) | `DCS $ q r ST`    | `Ps ; Ps r`                                           |\n * | Cursor Style (DECSCUSR)          | `DCS $ q SP q ST` | `Ps SP q`                                             |\n * | Protection Attribute (DECSCA)    | `DCS $ q \" q ST`  | always reporting `0 \" q` (DECSCA is unsupported)      |\n * | Conformance Level (DECSCL)       | `DCS $ q \" p ST`  | always reporting `61 ; 1 \" p` (DECSCL is unsupported) |\n *\n *\n * TODO:\n * - fix SGR report\n * - either implement DECSCA or remove the report\n * - either check which conformance is better suited or remove the report completely\n *   --> we are currently a mixture of all up to VT400 but dont follow anyone strictly\n */\nclass DECRQSS implements IDcsHandler {\n  private _data: Uint32Array = new Uint32Array(0);\n\n  constructor(\n    private _bufferService: IBufferService,\n    private _coreService: ICoreService,\n    private _logService: ILogService,\n    private _optionsService: IOptionsService\n  ) { }\n\n  public hook(params: IParams): void {\n    this._data = new Uint32Array(0);\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    this._data = concat(this._data, data.subarray(start, end));\n  }\n\n  public unhook(success: boolean): boolean {\n    if (!success) {\n      this._data = new Uint32Array(0);\n      return true;\n    }\n    const data = utf32ToString(this._data);\n    this._data = new Uint32Array(0);\n    switch (data) {\n      // valid: DCS 1 $ r Pt ST (xterm)\n      case '\"q': // DECSCA\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r0\"q${C0.ESC}\\\\`);\n        break;\n      case '\"p': // DECSCL\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r61;1\"p${C0.ESC}\\\\`);\n        break;\n      case 'r': // DECSTBM\n        const pt = '' + (this._bufferService.buffer.scrollTop + 1) +\n          ';' + (this._bufferService.buffer.scrollBottom + 1) + 'r';\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r${pt}${C0.ESC}\\\\`);\n        break;\n      case 'm': // SGR\n        // TODO: report real settings instead of 0m\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r0m${C0.ESC}\\\\`);\n        break;\n      case ' q': // DECSCUSR\n        const STYLES: { [key: string]: number } = { 'block': 2, 'underline': 4, 'bar': 6 };\n        let style = STYLES[this._optionsService.rawOptions.cursorStyle];\n        style -= this._optionsService.rawOptions.cursorBlink ? 1 : 0;\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r${style} q${C0.ESC}\\\\`);\n        break;\n      default:\n        // invalid: DCS 0 $ r Pt ST (xterm)\n        this._logService.debug('Unknown DCS $q %s', data);\n        this._coreService.triggerDataEvent(`${C0.ESC}P0$r${C0.ESC}\\\\`);\n    }\n    return true;\n  }\n}\n\n/**\n * DCS Ps; Ps| Pt ST\n *   DECUDK (https://vt100.net/docs/vt510-rm/DECUDK.html)\n *   not supported\n *\n * @vt: #N  DCS   DECUDK   \"User Defined Keys\"  \"DCS Ps ; Ps | Pt ST\"   \"Definitions for user-defined keys.\"\n */\n\n/**\n * DCS + q Pt ST (xterm)\n *   Request Terminfo String\n *   not implemented\n *\n * @vt: #N  DCS   XTGETTCAP   \"Request Terminfo String\"  \"DCS + q Pt ST\"   \"Request Terminfo String.\"\n */\n\n/**\n * DCS + p Pt ST (xterm)\n *   Set Terminfo Data\n *   not supported\n *\n * @vt: #N  DCS   XTSETTCAP   \"Set Terminfo Data\"  \"DCS + p Pt ST\"   \"Set Terminfo Data.\"\n */\n\n\n\n/**\n * The terminal's standard implementation of IInputHandler, this handles all\n * input from the Parser.\n *\n * Refer to http://invisible-island.net/xterm/ctlseqs/ctlseqs.html to understand\n * each function's header comment.\n */\nexport class InputHandler extends Disposable implements IInputHandler {\n  private _parseBuffer: Uint32Array = new Uint32Array(4096);\n  private _stringDecoder: StringToUtf32 = new StringToUtf32();\n  private _utf8Decoder: Utf8ToUtf32 = new Utf8ToUtf32();\n  private _workCell: CellData = new CellData();\n  private _windowTitle = '';\n  private _iconName = '';\n  protected _windowTitleStack: string[] = [];\n  protected _iconNameStack: string[] = [];\n\n  private _curAttrData: IAttributeData = DEFAULT_ATTR_DATA.clone();\n  private _eraseAttrDataInternal: IAttributeData = DEFAULT_ATTR_DATA.clone();\n\n  private _activeBuffer: IBuffer;\n\n  private _onRequestBell = new EventEmitter<void>();\n  public get onRequestBell(): IEvent<void> { return this._onRequestBell.event; }\n  private _onRequestRefreshRows = new EventEmitter<number, number>();\n  public get onRequestRefreshRows(): IEvent<number, number> { return this._onRequestRefreshRows.event; }\n  private _onRequestReset = new EventEmitter<void>();\n  public get onRequestReset(): IEvent<void> { return this._onRequestReset.event; }\n  private _onRequestSendFocus = new EventEmitter<void>();\n  public get onRequestSendFocus(): IEvent<void> { return this._onRequestSendFocus.event; }\n  private _onRequestSyncScrollBar = new EventEmitter<void>();\n  public get onRequestSyncScrollBar(): IEvent<void> { return this._onRequestSyncScrollBar.event; }\n  private _onRequestWindowsOptionsReport = new EventEmitter<WindowsOptionsReportType>();\n  public get onRequestWindowsOptionsReport(): IEvent<WindowsOptionsReportType> { return this._onRequestWindowsOptionsReport.event; }\n\n  private _onA11yChar = new EventEmitter<string>();\n  public get onA11yChar(): IEvent<string> { return this._onA11yChar.event; }\n  private _onA11yTab = new EventEmitter<number>();\n  public get onA11yTab(): IEvent<number> { return this._onA11yTab.event; }\n  private _onCursorMove = new EventEmitter<void>();\n  public get onCursorMove(): IEvent<void> { return this._onCursorMove.event; }\n  private _onLineFeed = new EventEmitter<void>();\n  public get onLineFeed(): IEvent<void> { return this._onLineFeed.event; }\n  private _onScroll = new EventEmitter<number>();\n  public get onScroll(): IEvent<number> { return this._onScroll.event; }\n  private _onTitleChange = new EventEmitter<string>();\n  public get onTitleChange(): IEvent<string> { return this._onTitleChange.event; }\n  private _onColor = new EventEmitter<IColorEvent>();\n  public get onColor(): IEvent<IColorEvent> { return this._onColor.event; }\n\n  private _parseStack: IParseStack = {\n    paused: false,\n    cursorStartX: 0,\n    cursorStartY: 0,\n    decodedLength: 0,\n    position: 0\n  };\n\n  constructor(\n    private readonly _bufferService: IBufferService,\n    private readonly _charsetService: ICharsetService,\n    private readonly _coreService: ICoreService,\n    private readonly _dirtyRowService: IDirtyRowService,\n    private readonly _logService: ILogService,\n    private readonly _optionsService: IOptionsService,\n    private readonly _coreMouseService: ICoreMouseService,\n    private readonly _unicodeService: IUnicodeService,\n    private readonly _parser: IEscapeSequenceParser = new EscapeSequenceParser()\n  ) {\n    super();\n    this.register(this._parser);\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n\n    /**\n     * custom fallback handlers\n     */\n    this._parser.setCsiHandlerFallback((ident, params) => {\n      this._logService.debug('Unknown CSI code: ', { identifier: this._parser.identToString(ident), params: params.toArray() });\n    });\n    this._parser.setEscHandlerFallback(ident => {\n      this._logService.debug('Unknown ESC code: ', { identifier: this._parser.identToString(ident) });\n    });\n    this._parser.setExecuteHandlerFallback(code => {\n      this._logService.debug('Unknown EXECUTE code: ', { code });\n    });\n    this._parser.setOscHandlerFallback((identifier, action, data) => {\n      this._logService.debug('Unknown OSC code: ', { identifier, action, data });\n    });\n    this._parser.setDcsHandlerFallback((ident, action, payload) => {\n      if (action === 'HOOK') {\n        payload = payload.toArray();\n      }\n      this._logService.debug('Unknown DCS code: ', { identifier: this._parser.identToString(ident), action, payload });\n    });\n\n    /**\n     * print handler\n     */\n    this._parser.setPrintHandler((data, start, end) => this.print(data, start, end));\n\n    /**\n     * CSI handler\n     */\n    this._parser.registerCsiHandler({ final: '@' }, params => this.insertChars(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: '@' }, params => this.scrollLeft(params));\n    this._parser.registerCsiHandler({ final: 'A' }, params => this.cursorUp(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'A' }, params => this.scrollRight(params));\n    this._parser.registerCsiHandler({ final: 'B' }, params => this.cursorDown(params));\n    this._parser.registerCsiHandler({ final: 'C' }, params => this.cursorForward(params));\n    this._parser.registerCsiHandler({ final: 'D' }, params => this.cursorBackward(params));\n    this._parser.registerCsiHandler({ final: 'E' }, params => this.cursorNextLine(params));\n    this._parser.registerCsiHandler({ final: 'F' }, params => this.cursorPrecedingLine(params));\n    this._parser.registerCsiHandler({ final: 'G' }, params => this.cursorCharAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'H' }, params => this.cursorPosition(params));\n    this._parser.registerCsiHandler({ final: 'I' }, params => this.cursorForwardTab(params));\n    this._parser.registerCsiHandler({ final: 'J' }, params => this.eraseInDisplay(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'J' }, params => this.eraseInDisplay(params));\n    this._parser.registerCsiHandler({ final: 'K' }, params => this.eraseInLine(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'K' }, params => this.eraseInLine(params));\n    this._parser.registerCsiHandler({ final: 'L' }, params => this.insertLines(params));\n    this._parser.registerCsiHandler({ final: 'M' }, params => this.deleteLines(params));\n    this._parser.registerCsiHandler({ final: 'P' }, params => this.deleteChars(params));\n    this._parser.registerCsiHandler({ final: 'S' }, params => this.scrollUp(params));\n    this._parser.registerCsiHandler({ final: 'T' }, params => this.scrollDown(params));\n    this._parser.registerCsiHandler({ final: 'X' }, params => this.eraseChars(params));\n    this._parser.registerCsiHandler({ final: 'Z' }, params => this.cursorBackwardTab(params));\n    this._parser.registerCsiHandler({ final: '`' }, params => this.charPosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'a' }, params => this.hPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'b' }, params => this.repeatPrecedingCharacter(params));\n    this._parser.registerCsiHandler({ final: 'c' }, params => this.sendDeviceAttributesPrimary(params));\n    this._parser.registerCsiHandler({ prefix: '>', final: 'c' }, params => this.sendDeviceAttributesSecondary(params));\n    this._parser.registerCsiHandler({ final: 'd' }, params => this.linePosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'e' }, params => this.vPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'f' }, params => this.hVPosition(params));\n    this._parser.registerCsiHandler({ final: 'g' }, params => this.tabClear(params));\n    this._parser.registerCsiHandler({ final: 'h' }, params => this.setMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'h' }, params => this.setModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'l' }, params => this.resetMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'l' }, params => this.resetModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'm' }, params => this.charAttributes(params));\n    this._parser.registerCsiHandler({ final: 'n' }, params => this.deviceStatus(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'n' }, params => this.deviceStatusPrivate(params));\n    this._parser.registerCsiHandler({ intermediates: '!', final: 'p' }, params => this.softReset(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'q' }, params => this.setCursorStyle(params));\n    this._parser.registerCsiHandler({ final: 'r' }, params => this.setScrollRegion(params));\n    this._parser.registerCsiHandler({ final: 's' }, params => this.saveCursor(params));\n    this._parser.registerCsiHandler({ final: 't' }, params => this.windowOptions(params));\n    this._parser.registerCsiHandler({ final: 'u' }, params => this.restoreCursor(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '}' }, params => this.insertColumns(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '~' }, params => this.deleteColumns(params));\n\n    /**\n     * execute handler\n     */\n    this._parser.setExecuteHandler(C0.BEL, () => this.bell());\n    this._parser.setExecuteHandler(C0.LF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.VT, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.FF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.CR, () => this.carriageReturn());\n    this._parser.setExecuteHandler(C0.BS, () => this.backspace());\n    this._parser.setExecuteHandler(C0.HT, () => this.tab());\n    this._parser.setExecuteHandler(C0.SO, () => this.shiftOut());\n    this._parser.setExecuteHandler(C0.SI, () => this.shiftIn());\n    // FIXME:   What do to with missing? Old code just added those to print.\n\n    this._parser.setExecuteHandler(C1.IND, () => this.index());\n    this._parser.setExecuteHandler(C1.NEL, () => this.nextLine());\n    this._parser.setExecuteHandler(C1.HTS, () => this.tabSet());\n\n    /**\n     * OSC handler\n     */\n    //   0 - icon name + title\n    this._parser.registerOscHandler(0, new OscHandler(data => { this.setTitle(data); this.setIconName(data); return true; }));\n    //   1 - icon name\n    this._parser.registerOscHandler(1, new OscHandler(data => this.setIconName(data)));\n    //   2 - title\n    this._parser.registerOscHandler(2, new OscHandler(data => this.setTitle(data)));\n    //   3 - set property X in the form \"prop=value\"\n    //   4 - Change Color Number\n    this._parser.registerOscHandler(4, new OscHandler(data => this.setOrReportIndexedColor(data)));\n    //   5 - Change Special Color Number\n    //   6 - Enable/disable Special Color Number c\n    //   7 - current directory? (not in xterm spec, see https://gitlab.com/gnachman/iterm2/issues/3939)\n    //  10 - Change VT100 text foreground color to Pt.\n    this._parser.registerOscHandler(10, new OscHandler(data => this.setOrReportFgColor(data)));\n    //  11 - Change VT100 text background color to Pt.\n    this._parser.registerOscHandler(11, new OscHandler(data => this.setOrReportBgColor(data)));\n    //  12 - Change text cursor color to Pt.\n    this._parser.registerOscHandler(12, new OscHandler(data => this.setOrReportCursorColor(data)));\n    //  13 - Change mouse foreground color to Pt.\n    //  14 - Change mouse background color to Pt.\n    //  15 - Change Tektronix foreground color to Pt.\n    //  16 - Change Tektronix background color to Pt.\n    //  17 - Change highlight background color to Pt.\n    //  18 - Change Tektronix cursor color to Pt.\n    //  19 - Change highlight foreground color to Pt.\n    //  46 - Change Log File to Pt.\n    //  50 - Set Font to Pt.\n    //  51 - reserved for Emacs shell.\n    //  52 - Manipulate Selection Data.\n    // 104 ; c - Reset Color Number c.\n    this._parser.registerOscHandler(104, new OscHandler(data => this.restoreIndexedColor(data)));\n    // 105 ; c - Reset Special Color Number c.\n    // 106 ; c; f - Enable/disable Special Color Number c.\n    // 110 - Reset VT100 text foreground color.\n    this._parser.registerOscHandler(110, new OscHandler(data => this.restoreFgColor(data)));\n    // 111 - Reset VT100 text background color.\n    this._parser.registerOscHandler(111, new OscHandler(data => this.restoreBgColor(data)));\n    // 112 - Reset text cursor color.\n    this._parser.registerOscHandler(112, new OscHandler(data => this.restoreCursorColor(data)));\n    // 113 - Reset mouse foreground color.\n    // 114 - Reset mouse background color.\n    // 115 - Reset Tektronix foreground color.\n    // 116 - Reset Tektronix background color.\n    // 117 - Reset highlight color.\n    // 118 - Reset Tektronix cursor color.\n    // 119 - Reset highlight foreground color.\n\n    /**\n     * ESC handlers\n     */\n    this._parser.registerEscHandler({ final: '7' }, () => this.saveCursor());\n    this._parser.registerEscHandler({ final: '8' }, () => this.restoreCursor());\n    this._parser.registerEscHandler({ final: 'D' }, () => this.index());\n    this._parser.registerEscHandler({ final: 'E' }, () => this.nextLine());\n    this._parser.registerEscHandler({ final: 'H' }, () => this.tabSet());\n    this._parser.registerEscHandler({ final: 'M' }, () => this.reverseIndex());\n    this._parser.registerEscHandler({ final: '=' }, () => this.keypadApplicationMode());\n    this._parser.registerEscHandler({ final: '>' }, () => this.keypadNumericMode());\n    this._parser.registerEscHandler({ final: 'c' }, () => this.fullReset());\n    this._parser.registerEscHandler({ final: 'n' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: 'o' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '|' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '}' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: '~' }, () => this.setgLevel(1));\n    this._parser.registerEscHandler({ intermediates: '%', final: '@' }, () => this.selectDefaultCharset());\n    this._parser.registerEscHandler({ intermediates: '%', final: 'G' }, () => this.selectDefaultCharset());\n    for (const flag in CHARSETS) {\n      this._parser.registerEscHandler({ intermediates: '(', final: flag }, () => this.selectCharset('(' + flag));\n      this._parser.registerEscHandler({ intermediates: ')', final: flag }, () => this.selectCharset(')' + flag));\n      this._parser.registerEscHandler({ intermediates: '*', final: flag }, () => this.selectCharset('*' + flag));\n      this._parser.registerEscHandler({ intermediates: '+', final: flag }, () => this.selectCharset('+' + flag));\n      this._parser.registerEscHandler({ intermediates: '-', final: flag }, () => this.selectCharset('-' + flag));\n      this._parser.registerEscHandler({ intermediates: '.', final: flag }, () => this.selectCharset('.' + flag));\n      this._parser.registerEscHandler({ intermediates: '/', final: flag }, () => this.selectCharset('/' + flag)); // TODO: supported?\n    }\n    this._parser.registerEscHandler({ intermediates: '#', final: '8' }, () => this.screenAlignmentPattern());\n\n    /**\n     * error handler\n     */\n    this._parser.setErrorHandler((state: IParsingState) => {\n      this._logService.error('Parsing error: ', state);\n      return state;\n    });\n\n    /**\n     * DCS handler\n     */\n    this._parser.registerDcsHandler({ intermediates: '$', final: 'q' }, new DECRQSS(this._bufferService, this._coreService, this._logService, this._optionsService));\n  }\n\n  public dispose(): void {\n    super.dispose();\n  }\n\n  /**\n   * Async parse support.\n   */\n  private _preserveStack(cursorStartX: number, cursorStartY: number, decodedLength: number, position: number): void {\n    this._parseStack.paused = true;\n    this._parseStack.cursorStartX = cursorStartX;\n    this._parseStack.cursorStartY = cursorStartY;\n    this._parseStack.decodedLength = decodedLength;\n    this._parseStack.position = position;\n  }\n\n  private _logSlowResolvingAsync(p: Promise<boolean>): void {\n    // log a limited warning about an async handler taking too long\n    if (this._logService.logLevel <= LogLevelEnum.WARN) {\n      Promise.race([p, new Promise((res, rej) => setTimeout(() => rej('#SLOW_TIMEOUT'), SLOW_ASYNC_LIMIT))])\n        .catch(err => {\n          if (err !== '#SLOW_TIMEOUT') {\n            throw err;\n          }\n          console.warn(`async parser handler taking longer than ${SLOW_ASYNC_LIMIT} ms`);\n        });\n    }\n  }\n\n  /**\n   * Parse call with async handler support.\n   *\n   * Whether the stack state got preserved for the next call, is indicated by the return value:\n   * - undefined (void):\n   *   all handlers were sync, no stack save, continue normally with next chunk\n   * - Promise\\<boolean\\>:\n   *   execution stopped at async handler, stack saved, continue with\n   *   same chunk and the promise resolve value as `promiseResult` until the method returns `undefined`\n   *\n   * Note: This method should only be called by `Terminal.write` to ensure correct execution order and\n   * proper continuation of async parser handlers.\n   */\n  public parse(data: string | Uint8Array, promiseResult?: boolean): void | Promise<boolean> {\n    let result: void | Promise<boolean>;\n    let cursorStartX = this._activeBuffer.x;\n    let cursorStartY = this._activeBuffer.y;\n    let start = 0;\n    const wasPaused = this._parseStack.paused;\n\n    if (wasPaused) {\n      // assumption: _parseBuffer never mutates between async calls\n      if (result = this._parser.parse(this._parseBuffer, this._parseStack.decodedLength, promiseResult)) {\n        this._logSlowResolvingAsync(result);\n        return result;\n      }\n      cursorStartX = this._parseStack.cursorStartX;\n      cursorStartY = this._parseStack.cursorStartY;\n      this._parseStack.paused = false;\n      if (data.length > MAX_PARSEBUFFER_LENGTH) {\n        start = this._parseStack.position + MAX_PARSEBUFFER_LENGTH;\n      }\n    }\n\n    // Log debug data, the log level gate is to prevent extra work in this hot path\n    if (this._logService.logLevel <= LogLevelEnum.DEBUG) {\n      this._logService.debug(`parsing data${typeof data === 'string' ? ` \"${data}\"` : ` \"${Array.prototype.map.call(data, e => String.fromCharCode(e)).join('')}\"`}`, typeof data === 'string'\n        ? data.split('').map(e => e.charCodeAt(0))\n        : data\n      );\n    }\n\n    // resize input buffer if needed\n    if (this._parseBuffer.length < data.length) {\n      if (this._parseBuffer.length < MAX_PARSEBUFFER_LENGTH) {\n        this._parseBuffer = new Uint32Array(Math.min(data.length, MAX_PARSEBUFFER_LENGTH));\n      }\n    }\n\n    // Clear the dirty row service so we know which lines changed as a result of parsing\n    // Important: do not clear between async calls, otherwise we lost pending update information.\n    if (!wasPaused) {\n      this._dirtyRowService.clearRange();\n    }\n\n    // process big data in smaller chunks\n    if (data.length > MAX_PARSEBUFFER_LENGTH) {\n      for (let i = start; i < data.length; i += MAX_PARSEBUFFER_LENGTH) {\n        const end = i + MAX_PARSEBUFFER_LENGTH < data.length ? i + MAX_PARSEBUFFER_LENGTH : data.length;\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data.substring(i, end), this._parseBuffer)\n          : this._utf8Decoder.decode(data.subarray(i, end), this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, i);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    } else {\n      if (!wasPaused) {\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data, this._parseBuffer)\n          : this._utf8Decoder.decode(data, this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, 0);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    }\n\n    if (this._activeBuffer.x !== cursorStartX || this._activeBuffer.y !== cursorStartY) {\n      this._onCursorMove.fire();\n    }\n\n    // Refresh any dirty rows accumulated as part of parsing\n    this._onRequestRefreshRows.fire(this._dirtyRowService.start, this._dirtyRowService.end);\n  }\n\n  public print(data: Uint32Array, start: number, end: number): void {\n    let code: number;\n    let chWidth: number;\n    const charset = this._charsetService.charset;\n    const screenReaderMode = this._optionsService.rawOptions.screenReaderMode;\n    const cols = this._bufferService.cols;\n    const wraparoundMode = this._coreService.decPrivateModes.wraparound;\n    const insertMode = this._coreService.modes.insertMode;\n    const curAttr = this._curAttrData;\n    let bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n\n    // handle wide chars: reset start_cell-1 if we would overwrite the second cell of a wide char\n    if (this._activeBuffer.x && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x - 1) === 2) {\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x - 1, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    for (let pos = start; pos < end; ++pos) {\n      code = data[pos];\n\n      // calculate print space\n      // expensive call, therefore we save width in line buffer\n      chWidth = this._unicodeService.wcwidth(code);\n\n      // get charset replacement character\n      // charset is only defined for ASCII, therefore we only\n      // search for an replacement char if code < 127\n      if (code < 127 && charset) {\n        const ch = charset[String.fromCharCode(code)];\n        if (ch) {\n          code = ch.charCodeAt(0);\n        }\n      }\n\n      if (screenReaderMode) {\n        this._onA11yChar.fire(stringFromCodePoint(code));\n      }\n\n      // insert combining char at last cursor position\n      // this._activeBuffer.x should never be 0 for a combining char\n      // since they always follow a cell consuming char\n      // therefore we can test for this._activeBuffer.x to avoid overflow left\n      if (!chWidth && this._activeBuffer.x) {\n        if (!bufferRow.getWidth(this._activeBuffer.x - 1)) {\n          // found empty cell after fullwidth, need to go 2 cells back\n          // it is save to step 2 cells back here\n          // since an empty cell is only set by fullwidth chars\n          bufferRow.addCodepointToCell(this._activeBuffer.x - 2, code);\n        } else {\n          bufferRow.addCodepointToCell(this._activeBuffer.x - 1, code);\n        }\n        continue;\n      }\n\n      // goto next line if ch would overflow\n      // NOTE: To avoid costly width checks here,\n      // the terminal does not allow a cols < 2.\n      if (this._activeBuffer.x + chWidth - 1 >= cols) {\n        // autowrap - DECAWM\n        // automatically wraps to the beginning of the next line\n        if (wraparoundMode) {\n          // clear left over cells to the right\n          while (this._activeBuffer.x < cols) {\n            bufferRow.setCellFromCodePoint(this._activeBuffer.x++, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n          }\n          this._activeBuffer.x = 0;\n          this._activeBuffer.y++;\n          if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n            this._activeBuffer.y--;\n            this._bufferService.scroll(this._eraseAttrData(), true);\n          } else {\n            if (this._activeBuffer.y >= this._bufferService.rows) {\n              this._activeBuffer.y = this._bufferService.rows - 1;\n            }\n            // The line already exists (eg. the initial viewport), mark it as a\n            // wrapped line\n            this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = true;\n          }\n          // row changed, get it again\n          bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        } else {\n          this._activeBuffer.x = cols - 1;\n          if (chWidth === 2) {\n            // FIXME: check for xterm behavior\n            // What to do here? We got a wide char that does not fit into last cell\n            continue;\n          }\n        }\n      }\n\n      // insert mode: move characters to right\n      if (insertMode) {\n        // right shift cells according to the width\n        bufferRow.insertCells(this._activeBuffer.x, chWidth, this._activeBuffer.getNullCell(curAttr), curAttr);\n        // test last cell - since the last cell has only room for\n        // a halfwidth char any fullwidth shifted there is lost\n        // and will be set to empty cell\n        if (bufferRow.getWidth(cols - 1) === 2) {\n          bufferRow.setCellFromCodePoint(cols - 1, NULL_CELL_CODE, NULL_CELL_WIDTH, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n\n      // write current char to buffer and advance cursor\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x++, code, chWidth, curAttr.fg, curAttr.bg, curAttr.extended);\n\n      // fullwidth char - also set next cell to placeholder stub and advance cursor\n      // for graphemes bigger than fullwidth we can simply loop to zero\n      // we already made sure above, that this._activeBuffer.x + chWidth will not overflow right\n      if (chWidth > 0) {\n        while (--chWidth) {\n          // other than a regular empty cell a cell following a wide char has no width\n          bufferRow.setCellFromCodePoint(this._activeBuffer.x++, 0, 0, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n    }\n    // store last char in Parser.precedingCodepoint for REP to work correctly\n    // This needs to check whether:\n    //  - fullwidth + surrogates: reset\n    //  - combining: only base char gets carried on (bug in xterm?)\n    if (end - start > 0) {\n      bufferRow.loadCell(this._activeBuffer.x - 1, this._workCell);\n      if (this._workCell.getWidth() === 2 || this._workCell.getCode() > 0xFFFF) {\n        this._parser.precedingCodepoint = 0;\n      } else if (this._workCell.isCombined()) {\n        this._parser.precedingCodepoint = this._workCell.getChars().charCodeAt(0);\n      } else {\n        this._parser.precedingCodepoint = this._workCell.content;\n      }\n    }\n\n    // handle wide chars: reset cell to the right if it is second cell of a wide char\n    if (this._activeBuffer.x < cols && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x) === 0 && !bufferRow.hasContent(this._activeBuffer.x)) {\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Forward registerCsiHandler from parser.\n   */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    if (id.final === 't' && !id.prefix && !id.intermediates) {\n      // security: always check whether window option is allowed\n      return this._parser.registerCsiHandler(id, params => {\n        if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n          return true;\n        }\n        return callback(params);\n      });\n    }\n    return this._parser.registerCsiHandler(id, callback);\n  }\n\n  /**\n   * Forward registerDcsHandler from parser.\n   */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerDcsHandler(id, new DcsHandler(callback));\n  }\n\n  /**\n   * Forward registerEscHandler from parser.\n   */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerEscHandler(id, callback);\n  }\n\n  /**\n   * Forward registerOscHandler from parser.\n   */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerOscHandler(ident, new OscHandler(callback));\n  }\n\n  /**\n   * BEL\n   * Bell (Ctrl-G).\n   *\n   * @vt: #Y   C0    BEL   \"Bell\"  \"\\a, \\x07\"  \"Ring the bell.\"\n   * The behavior of the bell is further customizable with `ITerminalOptions.bellStyle`\n   * and `ITerminalOptions.bellSound`.\n   */\n  public bell(): boolean {\n    this._onRequestBell.fire();\n    return true;\n  }\n\n  /**\n   * LF\n   * Line Feed or New Line (NL).  (LF  is Ctrl-J).\n   *\n   * @vt: #Y   C0    LF   \"Line Feed\"            \"\\n, \\x0A\"  \"Move the cursor one row down, scrolling if needed.\"\n   * Scrolling is restricted to scroll margins and will only happen on the bottom line.\n   *\n   * @vt: #Y   C0    VT   \"Vertical Tabulation\"  \"\\v, \\x0B\"  \"Treated as LF.\"\n   * @vt: #Y   C0    FF   \"Form Feed\"            \"\\f, \\x0C\"  \"Treated as LF.\"\n   */\n  public lineFeed(): boolean {\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n    if (this._optionsService.rawOptions.convertEol) {\n      this._activeBuffer.x = 0;\n    }\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    }\n    // If the end of the line is hit, prevent this action from wrapping around to the next line.\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      this._activeBuffer.x--;\n    }\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n\n    this._onLineFeed.fire();\n    return true;\n  }\n\n  /**\n   * CR\n   * Carriage Return (Ctrl-M).\n   *\n   * @vt: #Y   C0    CR   \"Carriage Return\"  \"\\r, \\x0D\"  \"Move the cursor to the beginning of the row.\"\n   */\n  public carriageReturn(): boolean {\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * BS\n   * Backspace (Ctrl-H).\n   *\n   * @vt: #Y   C0    BS   \"Backspace\"  \"\\b, \\x08\"  \"Move the cursor one position to the left.\"\n   * By default it is not possible to move the cursor past the leftmost position.\n   * If `reverse wrap-around` (`CSI ? 45 h`) is set, a previous soft line wrap (DECAWM)\n   * can be undone with BS within the scroll margins. In that case the cursor will wrap back\n   * to the end of the previous row. Note that it is not possible to peek back into the scrollbuffer\n   * with the cursor, thus at the home position (top-leftmost cell) this has no effect.\n   */\n  public backspace(): boolean {\n    // reverse wrap-around is disabled\n    if (!this._coreService.decPrivateModes.reverseWraparound) {\n      this._restrictCursor();\n      if (this._activeBuffer.x > 0) {\n        this._activeBuffer.x--;\n      }\n      return true;\n    }\n\n    // reverse wrap-around is enabled\n    // other than for normal operation mode, reverse wrap-around allows the cursor\n    // to be at x=cols to be able to address the last cell of a row by BS\n    this._restrictCursor(this._bufferService.cols);\n\n    if (this._activeBuffer.x > 0) {\n      this._activeBuffer.x--;\n    } else {\n      /**\n       * reverse wrap-around handling:\n       * Our implementation deviates from xterm on purpose. Details:\n       * - only previous soft NLs can be reversed (isWrapped=true)\n       * - only works within scrollborders (top/bottom, left/right not yet supported)\n       * - cannot peek into scrollbuffer\n       * - any cursor movement sequence keeps working as expected\n       */\n      if (this._activeBuffer.x === 0\n        && this._activeBuffer.y > this._activeBuffer.scrollTop\n        && this._activeBuffer.y <= this._activeBuffer.scrollBottom\n        && this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)?.isWrapped) {\n        this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = false;\n        this._activeBuffer.y--;\n        this._activeBuffer.x = this._bufferService.cols - 1;\n        // find last taken cell - last cell can have 3 different states:\n        // - hasContent(true) + hasWidth(1): narrow char - we are done\n        // - hasWidth(0): second part of wide char - we are done\n        // - hasContent(false) + hasWidth(1): empty cell due to early wrapping wide char, go one cell further back\n        const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        if (line.hasWidth(this._activeBuffer.x) && !line.hasContent(this._activeBuffer.x)) {\n          this._activeBuffer.x--;\n          // We do this only once, since width=1 + hasContent=false currently happens only once before\n          // early wrapping of a wide char.\n          // This needs to be fixed once we support graphemes taking more than 2 cells.\n        }\n      }\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * TAB\n   * Horizontal Tab (HT) (Ctrl-I).\n   *\n   * @vt: #Y   C0    HT   \"Horizontal Tabulation\"  \"\\t, \\x09\"  \"Move the cursor to the next character tab stop.\"\n   */\n  public tab(): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    const originalX = this._activeBuffer.x;\n    this._activeBuffer.x = this._activeBuffer.nextStop();\n    if (this._optionsService.rawOptions.screenReaderMode) {\n      this._onA11yTab.fire(this._activeBuffer.x - originalX);\n    }\n    return true;\n  }\n\n  /**\n   * SO\n   * Shift Out (Ctrl-N) -> Switch to Alternate Character Set.  This invokes the\n   * G1 character set.\n   *\n   * @vt: #P[Only limited ISO-2022 charset support.]  C0    SO   \"Shift Out\"  \"\\x0E\"  \"Switch to an alternative character set.\"\n   */\n  public shiftOut(): boolean {\n    this._charsetService.setgLevel(1);\n    return true;\n  }\n\n  /**\n   * SI\n   * Shift In (Ctrl-O) -> Switch to Standard Character Set.  This invokes the G0\n   * character set (the default).\n   *\n   * @vt: #Y   C0    SI   \"Shift In\"   \"\\x0F\"  \"Return to regular character set after Shift Out.\"\n   */\n  public shiftIn(): boolean {\n    this._charsetService.setgLevel(0);\n    return true;\n  }\n\n  /**\n   * Restrict cursor to viewport size / scroll margin (origin mode).\n   */\n  private _restrictCursor(maxCol: number = this._bufferService.cols - 1): void {\n    this._activeBuffer.x = Math.min(maxCol, Math.max(0, this._activeBuffer.x));\n    this._activeBuffer.y = this._coreService.decPrivateModes.origin\n      ? Math.min(this._activeBuffer.scrollBottom, Math.max(this._activeBuffer.scrollTop, this._activeBuffer.y))\n      : Math.min(this._bufferService.rows - 1, Math.max(0, this._activeBuffer.y));\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set absolute cursor position.\n   */\n  private _setCursor(x: number, y: number): void {\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n    if (this._coreService.decPrivateModes.origin) {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = this._activeBuffer.scrollTop + y;\n    } else {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = y;\n    }\n    this._restrictCursor();\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set relative cursor position.\n   */\n  private _moveCursor(x: number, y: number): void {\n    // for relative changes we have to make sure we are within 0 .. cols/rows - 1\n    // before calculating the new position\n    this._restrictCursor();\n    this._setCursor(this._activeBuffer.x + x, this._activeBuffer.y + y);\n  }\n\n  /**\n   * CSI Ps A\n   * Cursor Up Ps Times (default = 1) (CUU).\n   *\n   * @vt: #Y CSI CUU   \"Cursor Up\"   \"CSI Ps A\"  \"Move cursor `Ps` times up (default=1).\"\n   * If the cursor would pass the top scroll margin, it will stop there.\n   */\n  public cursorUp(params: IParams): boolean {\n    // stop at scrollTop\n    const diffToTop = this._activeBuffer.y - this._activeBuffer.scrollTop;\n    if (diffToTop >= 0) {\n      this._moveCursor(0, -Math.min(diffToTop, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, -(params.params[0] || 1));\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps B\n   * Cursor Down Ps Times (default = 1) (CUD).\n   *\n   * @vt: #Y CSI CUD   \"Cursor Down\"   \"CSI Ps B\"  \"Move cursor `Ps` times down (default=1).\"\n   * If the cursor would pass the bottom scroll margin, it will stop there.\n   */\n  public cursorDown(params: IParams): boolean {\n    // stop at scrollBottom\n    const diffToBottom = this._activeBuffer.scrollBottom - this._activeBuffer.y;\n    if (diffToBottom >= 0) {\n      this._moveCursor(0, Math.min(diffToBottom, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, params.params[0] || 1);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps C\n   * Cursor Forward Ps Times (default = 1) (CUF).\n   *\n   * @vt: #Y CSI CUF   \"Cursor Forward\"    \"CSI Ps C\"  \"Move cursor `Ps` times forward (default=1).\"\n   */\n  public cursorForward(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps D\n   * Cursor Backward Ps Times (default = 1) (CUB).\n   *\n   * @vt: #Y CSI CUB   \"Cursor Backward\"   \"CSI Ps D\"  \"Move cursor `Ps` times backward (default=1).\"\n   */\n  public cursorBackward(params: IParams): boolean {\n    this._moveCursor(-(params.params[0] || 1), 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps E\n   * Cursor Next Line Ps Times (default = 1) (CNL).\n   * Other than cursorDown (CUD) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CNL   \"Cursor Next Line\"  \"CSI Ps E\"  \"Move cursor `Ps` times down (default=1) and to the first column.\"\n   * Same as CUD, additionally places the cursor at the first column.\n   */\n  public cursorNextLine(params: IParams): boolean {\n    this.cursorDown(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps F\n   * Cursor Previous Line Ps Times (default = 1) (CPL).\n   * Other than cursorUp (CUU) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CPL   \"Cursor Backward\"   \"CSI Ps F\"  \"Move cursor `Ps` times up (default=1) and to the first column.\"\n   * Same as CUU, additionally places the cursor at the first column.\n   */\n  public cursorPrecedingLine(params: IParams): boolean {\n    this.cursorUp(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps G\n   * Cursor Character Absolute  [column] (default = [row,1]) (CHA).\n   *\n   * @vt: #Y CSI CHA   \"Cursor Horizontal Absolute\" \"CSI Ps G\" \"Move cursor to `Ps`-th column of the active row (default=1).\"\n   */\n  public cursorCharAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps H\n   * Cursor Position [row;column] (default = [1,1]) (CUP).\n   *\n   * @vt: #Y CSI CUP   \"Cursor Position\"   \"CSI Ps ; Ps H\"  \"Set cursor to position [`Ps`, `Ps`] (default = [1, 1]).\"\n   * If ORIGIN mode is set, places the cursor to the absolute position within the scroll margins.\n   * If ORIGIN mode is not set, places the cursor to the absolute position within the viewport.\n   * Note that the coordinates are 1-based, thus the top left position starts at `1 ; 1`.\n   */\n  public cursorPosition(params: IParams): boolean {\n    this._setCursor(\n      // col\n      (params.length >= 2) ? (params.params[1] || 1) - 1 : 0,\n      // row\n      (params.params[0] || 1) - 1\n    );\n    return true;\n  }\n\n  /**\n   * CSI Pm `  Character Position Absolute\n   *   [column] (default = [row,1]) (HPA).\n   * Currently same functionality as CHA.\n   *\n   * @vt: #Y CSI HPA   \"Horizontal Position Absolute\"  \"CSI Ps ` \" \"Same as CHA.\"\n   */\n  public charPosAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Pm a  Character Position Relative\n   *   [columns] (default = [row,col+1]) (HPR)\n   *\n   * @vt: #Y CSI HPR   \"Horizontal Position Relative\"  \"CSI Ps a\"  \"Same as CUF.\"\n   */\n  public hPositionRelative(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Pm d  Vertical Position Absolute (VPA)\n   *   [row] (default = [1,column])\n   *\n   * @vt: #Y CSI VPA   \"Vertical Position Absolute\"    \"CSI Ps d\"  \"Move cursor to `Ps`-th row (default=1).\"\n   */\n  public linePosAbsolute(params: IParams): boolean {\n    this._setCursor(this._activeBuffer.x, (params.params[0] || 1) - 1);\n    return true;\n  }\n\n  /**\n   * CSI Pm e  Vertical Position Relative (VPR)\n   *   [rows] (default = [row+1,column])\n   * reuse CSI Ps B ?\n   *\n   * @vt: #Y CSI VPR   \"Vertical Position Relative\"    \"CSI Ps e\"  \"Move cursor `Ps` times down (default=1).\"\n   */\n  public vPositionRelative(params: IParams): boolean {\n    this._moveCursor(0, params.params[0] || 1);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps f\n   *   Horizontal and Vertical Position [row;column] (default =\n   *   [1,1]) (HVP).\n   *   Same as CUP.\n   *\n   * @vt: #Y CSI HVP   \"Horizontal and Vertical Position\" \"CSI Ps ; Ps f\"  \"Same as CUP.\"\n   */\n  public hVPosition(params: IParams): boolean {\n    this.cursorPosition(params);\n    return true;\n  }\n\n  /**\n   * CSI Ps g  Tab Clear (TBC).\n   *     Ps = 0  -> Clear Current Column (default).\n   *     Ps = 3  -> Clear All.\n   * Potentially:\n   *   Ps = 2  -> Clear Stops on Line.\n   *   http://vt100.net/annarbor/aaa-ug/section6.html\n   *\n   * @vt: #Y CSI TBC   \"Tab Clear\" \"CSI Ps g\"  \"Clear tab stops at current position (0) or all (3) (default=0).\"\n   * Clearing tabstops off the active row (Ps = 2, VT100) is currently not supported.\n   */\n  public tabClear(params: IParams): boolean {\n    const param = params.params[0];\n    if (param === 0) {\n      delete this._activeBuffer.tabs[this._activeBuffer.x];\n    } else if (param === 3) {\n      this._activeBuffer.tabs = {};\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps I\n   *   Cursor Forward Tabulation Ps tab stops (default = 1) (CHT).\n   *\n   * @vt: #Y CSI CHT   \"Cursor Horizontal Tabulation\" \"CSI Ps I\" \"Move cursor `Ps` times tabs forward (default=1).\"\n   */\n  public cursorForwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.nextStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps Z  Cursor Backward Tabulation Ps tab stops (default = 1) (CBT).\n   *\n   * @vt: #Y CSI CBT   \"Cursor Backward Tabulation\"  \"CSI Ps Z\"  \"Move cursor `Ps` tabs backward (default=1).\"\n   */\n  public cursorBackwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.prevStop();\n    }\n    return true;\n  }\n\n\n  /**\n   * Helper method to erase cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal.\n   * @param y row index\n   * @param start first cell index to be erased\n   * @param end   end - 1 is last erased cell\n   * @param cleanWrap clear the isWrapped flag\n   */\n  private _eraseInBufferLine(y: number, start: number, end: number, clearWrap: boolean = false): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n    line.replaceCells(\n      start,\n      end,\n      this._activeBuffer.getNullCell(this._eraseAttrData()),\n      this._eraseAttrData()\n    );\n    if (clearWrap) {\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * Helper method to reset cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal and the isWrapped property is set to false.\n   * @param y row index\n   */\n  private _resetBufferLine(y: number): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n    line.fill(this._activeBuffer.getNullCell(this._eraseAttrData()));\n    this._bufferService.buffer.clearMarkers(this._activeBuffer.ybase + y);\n    line.isWrapped = false;\n  }\n\n  /**\n   * CSI Ps J  Erase in Display (ED).\n   *     Ps = 0  -> Erase Below (default).\n   *     Ps = 1  -> Erase Above.\n   *     Ps = 2  -> Erase All.\n   *     Ps = 3  -> Erase Saved Lines (xterm).\n   * CSI ? Ps J\n   *   Erase in Display (DECSED).\n   *     Ps = 0  -> Selective Erase Below (default).\n   *     Ps = 1  -> Selective Erase Above.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI ED  \"Erase In Display\"  \"CSI Ps J\"  \"Erase various parts of the viewport.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                       |\n   * | -- | ------------------------------------------------------------ |\n   * | 0  | Erase from the cursor through the end of the viewport.       |\n   * | 1  | Erase from the beginning of the viewport through the cursor. |\n   * | 2  | Erase complete viewport.                                     |\n   * | 3  | Erase scrollback.                                            |\n   *\n   * @vt: #P[Protection attributes are not supported.] CSI DECSED   \"Selective Erase In Display\"  \"CSI ? Ps J\"  \"Currently the same as ED.\"\n   */\n  public eraseInDisplay(params: IParams): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    let j;\n    switch (params.params[0]) {\n      case 0:\n        j = this._activeBuffer.y;\n        this._dirtyRowService.markDirty(j);\n        this._eraseInBufferLine(j++, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0);\n        for (; j < this._bufferService.rows; j++) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(j);\n        break;\n      case 1:\n        j = this._activeBuffer.y;\n        this._dirtyRowService.markDirty(j);\n        // Deleted front part of line and everything before. This line will no longer be wrapped.\n        this._eraseInBufferLine(j, 0, this._activeBuffer.x + 1, true);\n        if (this._activeBuffer.x + 1 >= this._bufferService.cols) {\n          // Deleted entire previous line. This next line can no longer be wrapped.\n          this._activeBuffer.lines.get(j + 1)!.isWrapped = false;\n        }\n        while (j--) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(0);\n        break;\n      case 2:\n        j = this._bufferService.rows;\n        this._dirtyRowService.markDirty(j - 1);\n        while (j--) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(0);\n        break;\n      case 3:\n        // Clear scrollback (everything not in viewport)\n        const scrollBackSize = this._activeBuffer.lines.length - this._bufferService.rows;\n        if (scrollBackSize > 0) {\n          this._activeBuffer.lines.trimStart(scrollBackSize);\n          this._activeBuffer.ybase = Math.max(this._activeBuffer.ybase - scrollBackSize, 0);\n          this._activeBuffer.ydisp = Math.max(this._activeBuffer.ydisp - scrollBackSize, 0);\n          // Force a scroll event to refresh viewport\n          this._onScroll.fire(0);\n        }\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps K  Erase in Line (EL).\n   *     Ps = 0  -> Erase to Right (default).\n   *     Ps = 1  -> Erase to Left.\n   *     Ps = 2  -> Erase All.\n   * CSI ? Ps K\n   *   Erase in Line (DECSEL).\n   *     Ps = 0  -> Selective Erase to Right (default).\n   *     Ps = 1  -> Selective Erase to Left.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI EL    \"Erase In Line\"  \"CSI Ps K\"  \"Erase various parts of the active row.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                   |\n   * | -- | -------------------------------------------------------- |\n   * | 0  | Erase from the cursor through the end of the row.        |\n   * | 1  | Erase from the beginning of the line through the cursor. |\n   * | 2  | Erase complete line.                                     |\n   *\n   * @vt: #P[Protection attributes are not supported.] CSI DECSEL   \"Selective Erase In Line\"  \"CSI ? Ps K\"  \"Currently the same as EL.\"\n   */\n  public eraseInLine(params: IParams): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    switch (params.params[0]) {\n      case 0:\n        this._eraseInBufferLine(this._activeBuffer.y, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0);\n        break;\n      case 1:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._activeBuffer.x + 1, false);\n        break;\n      case 2:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._bufferService.cols, true);\n        break;\n    }\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps L\n   * Insert Ps Line(s) (default = 1) (IL).\n   *\n   * @vt: #Y CSI IL  \"Insert Line\"   \"CSI Ps L\"  \"Insert `Ps` blank lines at active row (default=1).\"\n   * For every inserted line at the scroll top one line at the scroll bottom gets removed.\n   * The cursor is set to the first column.\n   * IL has no effect if the cursor is outside the scroll margins.\n   */\n  public insertLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    const scrollBottomRowsOffset = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    const scrollBottomAbsolute = this._bufferService.rows - 1 + this._activeBuffer.ybase - scrollBottomRowsOffset + 1;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1L\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(scrollBottomAbsolute - 1, 1);\n      this._activeBuffer.lines.splice(row, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps M\n   * Delete Ps Line(s) (default = 1) (DL).\n   *\n   * @vt: #Y CSI DL  \"Delete Line\"   \"CSI Ps M\"  \"Delete `Ps` lines at active row (default=1).\"\n   * For every deleted line at the scroll top one blank line at the scroll bottom gets appended.\n   * The cursor is set to the first column.\n   * DL has no effect if the cursor is outside the scroll margins.\n   */\n  public deleteLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    let j: number;\n    j = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    j = this._bufferService.rows - 1 + this._activeBuffer.ybase - j;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1M\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(row, 1);\n      this._activeBuffer.lines.splice(j, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps @\n   * Insert Ps (Blank) Character(s) (default = 1) (ICH).\n   *\n   * @vt: #Y CSI ICH  \"Insert Characters\"   \"CSI Ps @\"  \"Insert `Ps` (blank) characters (default = 1).\"\n   * The ICH sequence inserts `Ps` blank characters. The cursor remains at the beginning of the blank characters.\n   * Text between the cursor and right margin moves to the right. Characters moved past the right margin are lost.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public insertChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.insertCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowService.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps P\n   * Delete Ps Character(s) (default = 1) (DCH).\n   *\n   * @vt: #Y CSI DCH   \"Delete Character\"  \"CSI Ps P\"  \"Delete `Ps` characters (default=1).\"\n   * As characters are deleted, the remaining characters between the cursor and right margin move to the left.\n   * Character attributes move with the characters. The terminal adds blank characters at the right margin.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public deleteChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.deleteCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowService.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps S  Scroll up Ps lines (default = 1) (SU).\n   *\n   * @vt: #Y CSI SU  \"Scroll Up\"   \"CSI Ps S\"  \"Scroll `Ps` lines up (default=1).\"\n   *\n   *\n   * FIXME: scrolled out lines at top = 1 should add to scrollback (xterm)\n   */\n  public scrollUp(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps T  Scroll down Ps lines (default = 1) (SD).\n   *\n   * @vt: #Y CSI SD  \"Scroll Down\"   \"CSI Ps T\"  \"Scroll `Ps` lines down (default=1).\"\n   */\n  public scrollDown(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 0, this._activeBuffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP @  Scroll left Ps columns (default = 1) (SL) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/00\n   * Parameter default value: Pn = 1\n   * SL causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the left; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always left shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SL  \"Scroll Left\" \"CSI Ps SP @\" \"Scroll viewport `Ps` times to the left.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the left.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollLeft(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP A  Scroll right Ps columns (default = 1) (SR) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/01\n   * Parameter default value: Pn = 1\n   * SR causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the right; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always right shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SR  \"Scroll Right\"  \"CSI Ps SP A\"   \"Scroll viewport `Ps` times to the right.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the right.\n   * Content at the right margin is lost.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollRight(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' }\n   * Insert Ps Column(s) (default = 1) (DECIC), VT420 and up.\n   *\n   * @vt: #Y CSI DECIC \"Insert Columns\"  \"CSI Ps ' }\"  \"Insert `Ps` columns at cursor position.\"\n   * DECIC inserts `Ps` times blank columns at the cursor position for all lines with the scroll margins,\n   * moving content to the right. Content at the right margin is lost.\n   * DECIC has no effect outside the scrolling margins.\n   */\n  public insertColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' ~\n   * Delete Ps Column(s) (default = 1) (DECDC), VT420 and up.\n   *\n   * @vt: #Y CSI DECDC \"Delete Columns\"  \"CSI Ps ' ~\"  \"Delete `Ps` columns at cursor position.\"\n   * DECDC deletes `Ps` times columns at the cursor position for all lines with the scroll margins,\n   * moving content to the left. Blank columns are added at the right margin.\n   * DECDC has no effect outside the scrolling margins.\n   */\n  public deleteColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps X\n   * Erase Ps Character(s) (default = 1) (ECH).\n   *\n   * @vt: #Y CSI ECH   \"Erase Character\"   \"CSI Ps X\"  \"Erase `Ps` characters from current cursor position to the right (default=1).\"\n   * ED erases `Ps` characters from current cursor position to the right.\n   * ED works inside or outside the scrolling margins.\n   */\n  public eraseChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.replaceCells(\n        this._activeBuffer.x,\n        this._activeBuffer.x + (params.params[0] || 1),\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowService.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps b  Repeat the preceding graphic character Ps times (REP).\n   * From ECMA 48 (@see http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-048.pdf)\n   *    Notation: (Pn)\n   *    Representation: CSI Pn 06/02\n   *    Parameter default value: Pn = 1\n   *    REP is used to indicate that the preceding character in the data stream,\n   *    if it is a graphic character (represented by one or more bit combinations) including SPACE,\n   *    is to be repeated n times, where n equals the value of Pn.\n   *    If the character preceding REP is a control function or part of a control function,\n   *    the effect of REP is not defined by this Standard.\n   *\n   * Since we propagate the terminal as xterm-256color we have to follow xterm's behavior:\n   *    - fullwidth + surrogate chars are ignored\n   *    - for combining chars only the base char gets repeated\n   *    - text attrs are applied normally\n   *    - wrap around is respected\n   *    - any valid sequence resets the carried forward char\n   *\n   * Note: To get reset on a valid sequence working correctly without much runtime penalty,\n   * the preceding codepoint is stored on the parser in `this.print` and reset during `parser.parse`.\n   *\n   * @vt: #Y CSI REP   \"Repeat Preceding Character\"    \"CSI Ps b\"  \"Repeat preceding character `Ps` times (default=1).\"\n   * REP repeats the previous character `Ps` times advancing the cursor, also wrapping if DECAWM is set.\n   * REP has no effect if the sequence does not follow a printable ASCII character\n   * (NOOP for any other sequence in between or NON ASCII characters).\n   */\n  public repeatPrecedingCharacter(params: IParams): boolean {\n    if (!this._parser.precedingCodepoint) {\n      return true;\n    }\n    // call print to insert the chars and handle correct wrapping\n    const length = params.params[0] || 1;\n    const data = new Uint32Array(length);\n    for (let i = 0; i < length; ++i) {\n      data[i] = this._parser.precedingCodepoint;\n    }\n    this.print(data, 0, data.length);\n    return true;\n  }\n\n  /**\n   * CSI Ps c  Send Device Attributes (Primary DA).\n   *     Ps = 0  or omitted -> request attributes from terminal.  The\n   *     response depends on the decTerminalID resource setting.\n   *     -> CSI ? 1 ; 2 c  (``VT100 with Advanced Video Option'')\n   *     -> CSI ? 1 ; 0 c  (``VT101 with No Options'')\n   *     -> CSI ? 6 c  (``VT102'')\n   *     -> CSI ? 6 0 ; 1 ; 2 ; 6 ; 8 ; 9 ; 1 5 ; c  (``VT220'')\n   *   The VT100-style response parameters do not mean anything by\n   *   themselves.  VT220 parameters do, telling the host what fea-\n   *   tures the terminal supports:\n   *     Ps = 1  -> 132-columns.\n   *     Ps = 2  -> Printer.\n   *     Ps = 6  -> Selective erase.\n   *     Ps = 8  -> User-defined keys.\n   *     Ps = 9  -> National replacement character sets.\n   *     Ps = 1 5  -> Technical characters.\n   *     Ps = 2 2  -> ANSI color, e.g., VT525.\n   *     Ps = 2 9  -> ANSI text locator (i.e., DEC Locator mode).\n   *\n   * @vt: #Y CSI DA1   \"Primary Device Attributes\"     \"CSI c\"  \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesPrimary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    if (this._is('xterm') || this._is('rxvt-unicode') || this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?1;2c');\n    } else if (this._is('linux')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?6c');\n    }\n    return true;\n  }\n\n  /**\n   * CSI > Ps c\n   *   Send Device Attributes (Secondary DA).\n   *     Ps = 0  or omitted -> request the terminal's identification\n   *     code.  The response depends on the decTerminalID resource set-\n   *     ting.  It should apply only to VT220 and up, but xterm extends\n   *     this to VT100.\n   *     -> CSI  > Pp ; Pv ; Pc c\n   *   where Pp denotes the terminal type\n   *     Pp = 0  -> ``VT100''.\n   *     Pp = 1  -> ``VT220''.\n   *   and Pv is the firmware version (for xterm, this was originally\n   *   the XFree86 patch number, starting with 95).  In a DEC termi-\n   *   nal, Pc indicates the ROM cartridge registration number and is\n   *   always zero.\n   * More information:\n   *   xterm/charproc.c - line 2012, for more information.\n   *   vim responds with ^[[?0c or ^[[?1c after the terminal's response (?)\n   *\n   * @vt: #Y CSI DA2   \"Secondary Device Attributes\"   \"CSI > c\" \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesSecondary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    // xterm and urxvt\n    // seem to spit this\n    // out around ~370 times (?).\n    if (this._is('xterm')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>0;276;0c');\n    } else if (this._is('rxvt-unicode')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>85;95;0c');\n    } else if (this._is('linux')) {\n      // not supported by linux console.\n      // linux console echoes parameters.\n      this._coreService.triggerDataEvent(params.params[0] + 'c');\n    } else if (this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>83;40003;0c');\n    }\n    return true;\n  }\n\n  /**\n   * Evaluate if the current terminal is the given argument.\n   * @param term The terminal name to evaluate\n   */\n  private _is(term: string): boolean {\n    return (this._optionsService.rawOptions.termName + '').indexOf(term) === 0;\n  }\n\n  /**\n   * CSI Pm h  Set Mode (SM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Insert Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Automatic Newline (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI SM    \"Set Mode\"  \"CSI Pm h\"  \"Set various terminal modes.\"\n   * Supported param values by SM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Insert Mode (IRM).                     | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Automatic Newline (LNM). Always off.   | #N      |\n   */\n  public setMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = true;\n          break;\n        case 20:\n          // this._t.convertEol = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm h\n   *   DEC Private Mode Set (DECSET).\n   *     Ps = 1  -> Application Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate USASCII for character sets G0-G3\n   *     (DECANM), and set VT100 mode.\n   *     Ps = 3  -> 132 Column Mode (DECCOLM).\n   *     Ps = 4  -> Smooth (Slow) Scroll (DECSCLM).\n   *     Ps = 5  -> Reverse Video (DECSCNM).\n   *     Ps = 6  -> Origin Mode (DECOM).\n   *     Ps = 7  -> Wraparound Mode (DECAWM).\n   *     Ps = 8  -> Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Send Mouse X & Y on button press.  See the sec-\n   *     tion Mouse Tracking.\n   *     Ps = 1 0  -> Show toolbar (rxvt).\n   *     Ps = 1 2  -> Start Blinking Cursor (att610).\n   *     Ps = 1 8  -> Print form feed (DECPFF).\n   *     Ps = 1 9  -> Set print extent to full screen (DECPEX).\n   *     Ps = 2 5  -> Show Cursor (DECTCEM).\n   *     Ps = 3 0  -> Show scrollbar (rxvt).\n   *     Ps = 3 5  -> Enable font-shifting functions (rxvt).\n   *     Ps = 3 8  -> Enter Tektronix Mode (DECTEK).\n   *     Ps = 4 0  -> Allow 80 -> 132 Mode.\n   *     Ps = 4 1  -> more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Enable Nation Replacement Character sets (DECN-\n   *     RCM).\n   *     Ps = 4 4  -> Turn On Margin Bell.\n   *     Ps = 4 5  -> Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Start Logging.  This is normally disabled by a\n   *     compile-time option.\n   *     Ps = 4 7  -> Use Alternate Screen Buffer.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 6 6  -> Application keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends backspace (DECBKM).\n   *     Ps = 1 0 0 0  -> Send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Enable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Scroll to bottom on tty output (rxvt).\n   *     Ps = 1 0 1 1  -> Scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Interpret \"meta\" key, sets eighth bit.\n   *     (enables the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Enable special modifiers for Alt and Num-\n   *     Lock keys.  (This enables the numLock resource).\n   *     Ps = 1 0 3 6  -> Send ESC   when Meta modifies a key.  (This\n   *     enables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send DEL from the editing-keypad Delete\n   *     key.\n   *     Ps = 1 0 3 9  -> Send ESC  when Alt modifies a key.  (This\n   *     enables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Keep selection even if not highlighted.\n   *     (This enables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the CLIPBOARD selection.  (This enables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Enable Urgency window manager hint when\n   *     Control-G is received.  (This enables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Enable raising of the window when Control-G\n   *     is received.  (enables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Alternate Screen Buffer.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Save cursor as in DECSC.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Save cursor as in DECSC and use Alternate\n   *     Screen Buffer, clearing it first.  (This may be disabled by\n   *     the titeInhibit resource).  This combines the effects of the 1\n   *     0 4 7  and 1 0 4 8  modes.  Use this with terminfo-based\n   *     applications rather than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Set terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Set Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Set HP function-key mode.\n   *     Ps = 1 0 5 3  -> Set SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Set legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Set VT220 keyboard emulation.\n   *     Ps = 2 0 0 4  -> Set bracketed paste mode.\n   * Modes:\n   *   http: *vt100.net/docs/vt220-rm/chapter4.html\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECSET  \"DEC Private Set Mode\" \"CSI ? Pm h\"  \"Set various terminal attributes.\"\n   * Supported param values by DECSET:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | --------|\n   * | 1     | Application Cursor Keys (DECCKM).                       | #Y      |\n   * | 2     | Designate US-ASCII for character sets G0-G3 (DECANM).   | #Y      |\n   * | 3     | 132 Column Mode (DECCOLM).                              | #Y      |\n   * | 6     | Origin Mode (DECOM).                                    | #Y      |\n   * | 7     | Auto-wrap Mode (DECAWM).                                | #Y      |\n   * | 8     | Auto-repeat Keys (DECARM). Always on.                   | #N      |\n   * | 9     | X10 xterm mouse protocol.                               | #Y      |\n   * | 12    | Start Blinking Cursor.                                  | #Y      |\n   * | 25    | Show Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | Reverse wrap-around.                                    | #Y      |\n   * | 47    | Use Alternate Screen Buffer.                            | #Y      |\n   * | 66    | Application keypad (DECNKM).                            | #Y      |\n   * | 1000  | X11 xterm mouse protocol.                               | #Y      |\n   * | 1002  | Use Cell Motion Mouse Tracking.                         | #Y      |\n   * | 1003  | Use All Motion Mouse Tracking.                          | #Y      |\n   * | 1004  | Send FocusIn/FocusOut events                            | #Y      |\n   * | 1005  | Enable UTF-8 Mouse Mode.                                | #N      |\n   * | 1006  | Enable SGR Mouse Mode.                                  | #Y      |\n   * | 1015  | Enable urxvt Mouse Mode.                                | #N      |\n   * | 1047  | Use Alternate Screen Buffer.                            | #Y      |\n   * | 1048  | Save cursor as in DECSC.                                | #Y      |\n   * | 1049  | Save cursor and switch to alternate buffer clearing it. | #P[Does not clear the alternate buffer.] |\n   * | 2004  | Set bracketed paste mode.                               | #Y      |\n   *\n   *\n   * FIXME: implement DECSCNM, 1049 should clear altbuffer\n   */\n  public setModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = true;\n          break;\n        case 2:\n          this._charsetService.setgCharset(0, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(1, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(2, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(3, DEFAULT_CHARSET);\n          // set VT100 mode here\n          break;\n        case 3:\n          /**\n           * DECCOLM - 132 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(132, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = true;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = true;\n          break;\n        case 12:\n          // this.cursorBlink = true;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = true;\n          break;\n        case 66:\n          this._logService.debug('Serial port requested application keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = true;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n          // no release, no motion, no wheel, no modifiers.\n          this._coreMouseService.activeProtocol = 'X10';\n          break;\n        case 1000: // vt200 mouse\n          // no motion.\n          this._coreMouseService.activeProtocol = 'VT200';\n          break;\n        case 1002: // button event mouse\n          this._coreMouseService.activeProtocol = 'DRAG';\n          break;\n        case 1003: // any event mouse\n          // any event - sends motion events,\n          // even if there is no button held down.\n          this._coreMouseService.activeProtocol = 'ANY';\n          break;\n        case 1004: // send focusin/focusout events\n          // focusin: ^[[I\n          // focusout: ^[[O\n          this._coreService.decPrivateModes.sendFocus = true;\n          this._onRequestSendFocus.fire();\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'SGR';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1015 not supported (see #2507)');\n          break;\n        case 25: // show cursor\n          this._coreService.isCursorHidden = false;\n          break;\n        case 1048: // alt screen cursor\n          this.saveCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n          this.saveCursor();\n        // FALL-THROUGH\n        case 47: // alt screen buffer\n        case 1047: // alt screen buffer\n          this._bufferService.buffers.activateAltBuffer(this._eraseAttrData());\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI Pm l  Reset Mode (RM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Replace Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Normal Linefeed (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI RM    \"Reset Mode\"  \"CSI Pm l\"  \"Set various terminal attributes.\"\n   * Supported param values by RM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Replace Mode (IRM). (default)          | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Normal Linefeed (LNM). Always off.     | #N      |\n   *\n   *\n   * FIXME: why is LNM commented out?\n   */\n  public resetMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = false;\n          break;\n        case 20:\n          // this._t.convertEol = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm l\n   *   DEC Private Mode Reset (DECRST).\n   *     Ps = 1  -> Normal Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate VT52 mode (DECANM).\n   *     Ps = 3  -> 80 Column Mode (DECCOLM).\n   *     Ps = 4  -> Jump (Fast) Scroll (DECSCLM).\n   *     Ps = 5  -> Normal Video (DECSCNM).\n   *     Ps = 6  -> Normal Cursor Mode (DECOM).\n   *     Ps = 7  -> No Wraparound Mode (DECAWM).\n   *     Ps = 8  -> No Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Don't send Mouse X & Y on button press.\n   *     Ps = 1 0  -> Hide toolbar (rxvt).\n   *     Ps = 1 2  -> Stop Blinking Cursor (att610).\n   *     Ps = 1 8  -> Don't print form feed (DECPFF).\n   *     Ps = 1 9  -> Limit print to scrolling region (DECPEX).\n   *     Ps = 2 5  -> Hide Cursor (DECTCEM).\n   *     Ps = 3 0  -> Don't show scrollbar (rxvt).\n   *     Ps = 3 5  -> Disable font-shifting functions (rxvt).\n   *     Ps = 4 0  -> Disallow 80 -> 132 Mode.\n   *     Ps = 4 1  -> No more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Disable Nation Replacement Character sets (DEC-\n   *     NRCM).\n   *     Ps = 4 4  -> Turn Off Margin Bell.\n   *     Ps = 4 5  -> No Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Stop Logging.  (This is normally disabled by a\n   *     compile-time option).\n   *     Ps = 4 7  -> Use Normal Screen Buffer.\n   *     Ps = 6 6  -> Numeric keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends delete (DECBKM).\n   *     Ps = 1 0 0 0  -> Don't send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Don't use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Don't use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Don't use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Don't send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Disable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Don't scroll to bottom on tty output\n   *     (rxvt).\n   *     Ps = 1 0 1 1  -> Don't scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Don't interpret \"meta\" key.  (This disables\n   *     the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Disable special modifiers for Alt and Num-\n   *     Lock keys.  (This disables the numLock resource).\n   *     Ps = 1 0 3 6  -> Don't send ESC  when Meta modifies a key.\n   *     (This disables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send VT220 Remove from the editing-keypad\n   *     Delete key.\n   *     Ps = 1 0 3 9  -> Don't send ESC  when Alt modifies a key.\n   *     (This disables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Do not keep selection when not highlighted.\n   *     (This disables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the PRIMARY selection.  (This disables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Disable Urgency window manager hint when\n   *     Control-G is received.  (This disables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Disable raising of the window when Control-\n   *     G is received.  (This disables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Normal Screen Buffer, clearing screen\n   *     first if in the Alternate Screen.  (This may be disabled by\n   *     the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Restore cursor as in DECRC.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Use Normal Screen Buffer and restore cursor\n   *     as in DECRC.  (This may be disabled by the titeInhibit\n   *     resource).  This combines the effects of the 1 0 4 7  and 1 0\n   *     4 8  modes.  Use this with terminfo-based applications rather\n   *     than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Reset terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Reset Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Reset HP function-key mode.\n   *     Ps = 1 0 5 3  -> Reset SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Reset legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Reset keyboard emulation to Sun/PC style.\n   *     Ps = 2 0 0 4  -> Reset bracketed paste mode.\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECRST  \"DEC Private Reset Mode\" \"CSI ? Pm l\"  \"Reset various terminal attributes.\"\n   * Supported param values by DECRST:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | ------- |\n   * | 1     | Normal Cursor Keys (DECCKM).                            | #Y      |\n   * | 2     | Designate VT52 mode (DECANM).                           | #N      |\n   * | 3     | 80 Column Mode (DECCOLM).                               | #B[Switches to old column width instead of 80.] |\n   * | 6     | Normal Cursor Mode (DECOM).                             | #Y      |\n   * | 7     | No Wraparound Mode (DECAWM).                            | #Y      |\n   * | 8     | No Auto-repeat Keys (DECARM).                           | #N      |\n   * | 9     | Don't send Mouse X & Y on button press.                 | #Y      |\n   * | 12    | Stop Blinking Cursor.                                   | #Y      |\n   * | 25    | Hide Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | No reverse wrap-around.                                 | #Y      |\n   * | 47    | Use Normal Screen Buffer.                               | #Y      |\n   * | 66    | Numeric keypad (DECNKM).                                | #Y      |\n   * | 1000  | Don't send Mouse reports.                               | #Y      |\n   * | 1002  | Don't use Cell Motion Mouse Tracking.                   | #Y      |\n   * | 1003  | Don't use All Motion Mouse Tracking.                    | #Y      |\n   * | 1004  | Don't send FocusIn/FocusOut events.                     | #Y      |\n   * | 1005  | Disable UTF-8 Mouse Mode.                               | #N      |\n   * | 1006  | Disable SGR Mouse Mode.                                 | #Y      |\n   * | 1015  | Disable urxvt Mouse Mode.                               | #N      |\n   * | 1047  | Use Normal Screen Buffer (clearing screen if in alt).   | #Y      |\n   * | 1048  | Restore cursor as in DECRC.                             | #Y      |\n   * | 1049  | Use Normal Screen Buffer and restore cursor.            | #Y      |\n   * | 2004  | Reset bracketed paste mode.                             | #Y      |\n   *\n   *\n   * FIXME: DECCOLM is currently broken (already fixed in window options PR)\n   */\n  public resetModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = false;\n          break;\n        case 3:\n          /**\n           * DECCOLM - 80 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(80, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = false;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = false;\n          break;\n        case 12:\n          // this.cursorBlink = false;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = false;\n          break;\n        case 66:\n          this._logService.debug('Switching back to normal keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = false;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n        case 1000: // vt200 mouse\n        case 1002: // button event mouse\n        case 1003: // any event mouse\n          this._coreMouseService.activeProtocol = 'NONE';\n          break;\n        case 1004: // send focusin/focusout events\n          this._coreService.decPrivateModes.sendFocus = false;\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1015 not supported (see #2507)');\n          break;\n        case 25: // hide cursor\n          this._coreService.isCursorHidden = true;\n          break;\n        case 1048: // alt screen cursor\n          this.restoreCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n        // FALL-THROUGH\n        case 47: // normal screen buffer\n        case 1047: // normal screen buffer - clearing it first\n          // Ensure the selection manager has the correct buffer\n          this._bufferService.buffers.activateNormalBuffer();\n          if (params.params[i] === 1049) {\n            this.restoreCursor();\n          }\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Helper to write color information packed with color mode.\n   */\n  private _updateAttrColor(color: number, mode: number, c1: number, c2: number, c3: number): number {\n    if (mode === 2) {\n      color |= Attributes.CM_RGB;\n      color &= ~Attributes.RGB_MASK;\n      color |= AttributeData.fromColorRGB([c1, c2, c3]);\n    } else if (mode === 5) {\n      color &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n      color |= Attributes.CM_P256 | (c1 & 0xff);\n    }\n    return color;\n  }\n\n  /**\n   * Helper to extract and apply color params/subparams.\n   * Returns advance for params index.\n   */\n  private _extractColor(params: IParams, pos: number, attr: IAttributeData): number {\n    // normalize params\n    // meaning: [target, CM, ign, val, val, val]\n    // RGB    : [ 38/48,  2, ign,   r,   g,   b]\n    // P256   : [ 38/48,  5, ign,   v, ign, ign]\n    const accu = [0, 0, -1, 0, 0, 0];\n\n    // alignment placeholder for non color space sequences\n    let cSpace = 0;\n\n    // return advance we took in params\n    let advance = 0;\n\n    do {\n      accu[advance + cSpace] = params.params[pos + advance];\n      if (params.hasSubParams(pos + advance)) {\n        const subparams = params.getSubParams(pos + advance)!;\n        let i = 0;\n        do {\n          if (accu[1] === 5) {\n            cSpace = 1;\n          }\n          accu[advance + i + 1 + cSpace] = subparams[i];\n        } while (++i < subparams.length && i + advance + 1 + cSpace < accu.length);\n        break;\n      }\n      // exit early if can decide color mode with semicolons\n      if ((accu[1] === 5 && advance + cSpace >= 2)\n        || (accu[1] === 2 && advance + cSpace >= 5)) {\n        break;\n      }\n      // offset colorSpace slot for semicolon mode\n      if (accu[1]) {\n        cSpace = 1;\n      }\n    } while (++advance + pos < params.length && advance + cSpace < accu.length);\n\n    // set default values to 0\n    for (let i = 2; i < accu.length; ++i) {\n      if (accu[i] === -1) {\n        accu[i] = 0;\n      }\n    }\n\n    // apply colors\n    switch (accu[0]) {\n      case 38:\n        attr.fg = this._updateAttrColor(attr.fg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 48:\n        attr.bg = this._updateAttrColor(attr.bg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 58:\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = this._updateAttrColor(attr.extended.underlineColor, accu[1], accu[3], accu[4], accu[5]);\n    }\n\n    return advance;\n  }\n\n  /**\n   * SGR 4 subparams:\n   *    4:0   -   equal to SGR 24 (turn off all underline)\n   *    4:1   -   equal to SGR 4 (single underline)\n   *    4:2   -   equal to SGR 21 (double underline)\n   *    4:3   -   curly underline\n   *    4:4   -   dotted underline\n   *    4:5   -   dashed underline\n   */\n  private _processUnderline(style: number, attr: IAttributeData): void {\n    // treat extended attrs as immutable, thus always clone from old one\n    // this is needed since the buffer only holds references to it\n    attr.extended = attr.extended.clone();\n\n    // default to 1 == single underline\n    if (!~style || style > 5) {\n      style = 1;\n    }\n    attr.extended.underlineStyle = style;\n    attr.fg |= FgFlags.UNDERLINE;\n\n    // 0 deactivates underline\n    if (style === 0) {\n      attr.fg &= ~FgFlags.UNDERLINE;\n    }\n\n    // update HAS_EXTENDED in BG\n    attr.updateExtended();\n  }\n\n  /**\n   * CSI Pm m  Character Attributes (SGR).\n   *\n   * @vt: #P[See below for supported attributes.]    CSI SGR   \"Select Graphic Rendition\"  \"CSI Pm m\"  \"Set/Reset various text attributes.\"\n   * SGR selects one or more character attributes at the same time. Multiple params (up to 32)\n   * are applied in order from left to right. The changed attributes are applied to all new\n   * characters received. If you move characters in the viewport by scrolling or any other means,\n   * then the attributes move with the characters.\n   *\n   * Supported param values by SGR:\n   *\n   * | Param     | Meaning                                                  | Support |\n   * | --------- | -------------------------------------------------------- | ------- |\n   * | 0         | Normal (default). Resets any other preceding SGR.        | #Y      |\n   * | 1         | Bold. (also see `options.drawBoldTextInBrightColors`)    | #Y      |\n   * | 2         | Faint, decreased intensity.                              | #Y      |\n   * | 3         | Italic.                                                  | #Y      |\n   * | 4         | Underlined (see below for style support).                | #Y      |\n   * | 5         | Slowly blinking.                                         | #N      |\n   * | 6         | Rapidly blinking.                                        | #N      |\n   * | 7         | Inverse. Flips foreground and background color.          | #Y      |\n   * | 8         | Invisible (hidden).                                      | #Y      |\n   * | 9         | Crossed-out characters (strikethrough).                  | #Y      |\n   * | 21        | Doubly underlined.                                       | #P[Currently outputs a single underline.] |\n   * | 22        | Normal (neither bold nor faint).                         | #Y      |\n   * | 23        | No italic.                                               | #Y      |\n   * | 24        | Not underlined.                                          | #Y      |\n   * | 25        | Steady (not blinking).                                   | #Y      |\n   * | 27        | Positive (not inverse).                                  | #Y      |\n   * | 28        | Visible (not hidden).                                    | #Y      |\n   * | 29        | Not Crossed-out (strikethrough).                         | #Y      |\n   * | 30        | Foreground color: Black.                                 | #Y      |\n   * | 31        | Foreground color: Red.                                   | #Y      |\n   * | 32        | Foreground color: Green.                                 | #Y      |\n   * | 33        | Foreground color: Yellow.                                | #Y      |\n   * | 34        | Foreground color: Blue.                                  | #Y      |\n   * | 35        | Foreground color: Magenta.                               | #Y      |\n   * | 36        | Foreground color: Cyan.                                  | #Y      |\n   * | 37        | Foreground color: White.                                 | #Y      |\n   * | 38        | Foreground color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 39        | Foreground color: Default (original).                    | #Y      |\n   * | 40        | Background color: Black.                                 | #Y      |\n   * | 41        | Background color: Red.                                   | #Y      |\n   * | 42        | Background color: Green.                                 | #Y      |\n   * | 43        | Background color: Yellow.                                | #Y      |\n   * | 44        | Background color: Blue.                                  | #Y      |\n   * | 45        | Background color: Magenta.                               | #Y      |\n   * | 46        | Background color: Cyan.                                  | #Y      |\n   * | 47        | Background color: White.                                 | #Y      |\n   * | 48        | Background color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 49        | Background color: Default (original).                    | #Y      |\n   * | 90 - 97   | Bright foreground color (analogous to 30 - 37).          | #Y      |\n   * | 100 - 107 | Bright background color (analogous to 40 - 47).          | #Y      |\n   *\n   * Underline supports subparams to denote the style in the form `4 : x`:\n   *\n   * | x      | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | No underline. Same as `SGR 24 m`.                             | #Y      |\n   * | 1      | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   * | 2      | Double underline.                                             | #P[Currently outputs a single underline.] |\n   * | 3      | Curly underline.                                              | #P[Currently outputs a single underline.] |\n   * | 4      | Dotted underline.                                             | #P[Currently outputs a single underline.] |\n   * | 5      | Dashed underline.                                             | #P[Currently outputs a single underline.] |\n   * | other  | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   *\n   * Extended colors are supported for foreground (Ps=38) and background (Ps=48) as follows:\n   *\n   * | Ps + 1 | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | Implementation defined.                                       | #N      |\n   * | 1      | Transparent.                                                  | #N      |\n   * | 2      | RGB color as `Ps ; 2 ; R ; G ; B` or `Ps : 2 : : R : G : B`.  | #Y      |\n   * | 3      | CMY color.                                                    | #N      |\n   * | 4      | CMYK color.                                                   | #N      |\n   * | 5      | Indexed (256 colors) as `Ps ; 5 ; INDEX` or `Ps : 5 : INDEX`. | #Y      |\n   *\n   *\n   * FIXME: blinking is implemented in attrs, but not working in renderers?\n   * FIXME: remove dead branch for p=100\n   */\n  public charAttributes(params: IParams): boolean {\n    // Optimize a single SGR0.\n    if (params.length === 1 && params.params[0] === 0) {\n      this._curAttrData.fg = DEFAULT_ATTR_DATA.fg;\n      this._curAttrData.bg = DEFAULT_ATTR_DATA.bg;\n      return true;\n    }\n\n    const l = params.length;\n    let p;\n    const attr = this._curAttrData;\n\n    for (let i = 0; i < l; i++) {\n      p = params.params[i];\n      if (p >= 30 && p <= 37) {\n        // fg color 8\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 30);\n      } else if (p >= 40 && p <= 47) {\n        // bg color 8\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 40);\n      } else if (p >= 90 && p <= 97) {\n        // fg color 16\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 90) | 8;\n      } else if (p >= 100 && p <= 107) {\n        // bg color 16\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 100) | 8;\n      } else if (p === 0) {\n        // default\n        attr.fg = DEFAULT_ATTR_DATA.fg;\n        attr.bg = DEFAULT_ATTR_DATA.bg;\n      } else if (p === 1) {\n        // bold text\n        attr.fg |= FgFlags.BOLD;\n      } else if (p === 3) {\n        // italic text\n        attr.bg |= BgFlags.ITALIC;\n      } else if (p === 4) {\n        // underlined text\n        attr.fg |= FgFlags.UNDERLINE;\n        this._processUnderline(params.hasSubParams(i) ? params.getSubParams(i)![0] : UnderlineStyle.SINGLE, attr);\n      } else if (p === 5) {\n        // blink\n        attr.fg |= FgFlags.BLINK;\n      } else if (p === 7) {\n        // inverse and positive\n        // test with: echo -e '\\e[31m\\e[42mhello\\e[7mworld\\e[27mhi\\e[m'\n        attr.fg |= FgFlags.INVERSE;\n      } else if (p === 8) {\n        // invisible\n        attr.fg |= FgFlags.INVISIBLE;\n      } else if (p === 9) {\n        // strikethrough\n        attr.fg |= FgFlags.STRIKETHROUGH;\n      } else if (p === 2) {\n        // dimmed text\n        attr.bg |= BgFlags.DIM;\n      } else if (p === 21) {\n        // double underline\n        this._processUnderline(UnderlineStyle.DOUBLE, attr);\n      } else if (p === 22) {\n        // not bold nor faint\n        attr.fg &= ~FgFlags.BOLD;\n        attr.bg &= ~BgFlags.DIM;\n      } else if (p === 23) {\n        // not italic\n        attr.bg &= ~BgFlags.ITALIC;\n      } else if (p === 24) {\n        // not underlined\n        attr.fg &= ~FgFlags.UNDERLINE;\n      } else if (p === 25) {\n        // not blink\n        attr.fg &= ~FgFlags.BLINK;\n      } else if (p === 27) {\n        // not inverse\n        attr.fg &= ~FgFlags.INVERSE;\n      } else if (p === 28) {\n        // not invisible\n        attr.fg &= ~FgFlags.INVISIBLE;\n      } else if (p === 29) {\n        // not strikethrough\n        attr.fg &= ~FgFlags.STRIKETHROUGH;\n      } else if (p === 39) {\n        // reset fg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 49) {\n        // reset bg\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 38 || p === 48 || p === 58) {\n        // fg color 256 and RGB\n        i += this._extractColor(params, i, attr);\n      } else if (p === 59) {\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = -1;\n        attr.updateExtended();\n      } else if (p === 100) { // FIXME: dead branch, p=100 already handled above!\n        // reset fg/bg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else {\n        this._logService.debug('Unknown SGR attribute: %d.', p);\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps n  Device Status Report (DSR).\n   *     Ps = 5  -> Status Report.  Result (``OK'') is\n   *   CSI 0 n\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column].\n   *   Result is\n   *   CSI r ; c R\n   * CSI ? Ps n\n   *   Device Status Report (DSR, DEC-specific).\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column] as CSI\n   *     ? r ; c R (assumes page is zero).\n   *     Ps = 1 5  -> Report Printer status as CSI ? 1 0  n  (ready).\n   *     or CSI ? 1 1  n  (not ready).\n   *     Ps = 2 5  -> Report UDK status as CSI ? 2 0  n  (unlocked)\n   *     or CSI ? 2 1  n  (locked).\n   *     Ps = 2 6  -> Report Keyboard status as\n   *   CSI ? 2 7  ;  1  ;  0  ;  0  n  (North American).\n   *   The last two parameters apply to VT400 & up, and denote key-\n   *   board ready and LK01 respectively.\n   *     Ps = 5 3  -> Report Locator status as\n   *   CSI ? 5 3  n  Locator available, if compiled-in, or\n   *   CSI ? 5 0  n  No Locator, if not.\n   *\n   * @vt: #Y CSI DSR   \"Device Status Report\"  \"CSI Ps n\"  \"Request cursor position (CPR) with `Ps` = 6.\"\n   */\n  public deviceStatus(params: IParams): boolean {\n    switch (params.params[0]) {\n      case 5:\n        // status report\n        this._coreService.triggerDataEvent(`${C0.ESC}[0n`);\n        break;\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[${y};${x}R`);\n        break;\n    }\n    return true;\n  }\n\n  // @vt: #P[Only CPR is supported.]  CSI DECDSR  \"DEC Device Status Report\"  \"CSI ? Ps n\"  \"Only CPR is supported (same as DSR).\"\n  public deviceStatusPrivate(params: IParams): boolean {\n    // modern xterm doesnt seem to\n    // respond to any of these except ?6, 6, and 5\n    switch (params.params[0]) {\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[?${y};${x}R`);\n        break;\n      case 15:\n        // no printer\n        // this.handler(C0.ESC + '[?11n');\n        break;\n      case 25:\n        // dont support user defined keys\n        // this.handler(C0.ESC + '[?21n');\n        break;\n      case 26:\n        // north american keyboard\n        // this.handler(C0.ESC + '[?27;1;0;0n');\n        break;\n      case 53:\n        // no dec locator/mouse\n        // this.handler(C0.ESC + '[?50n');\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI ! p   Soft terminal reset (DECSTR).\n   * http://vt100.net/docs/vt220-rm/table4-10.html\n   *\n   * @vt: #Y CSI DECSTR  \"Soft Terminal Reset\"   \"CSI ! p\"   \"Reset several terminal attributes to initial state.\"\n   * There are two terminal reset sequences - RIS and DECSTR. While RIS performs almost a full terminal bootstrap,\n   * DECSTR only resets certain attributes. For most needs DECSTR should be sufficient.\n   *\n   * The following terminal attributes are reset to default values:\n   * - IRM is reset (dafault = false)\n   * - scroll margins are reset (default = viewport size)\n   * - erase attributes are reset to default\n   * - charsets are reset\n   * - DECSC data is reset to initial values\n   * - DECOM is reset to absolute mode\n   *\n   *\n   * FIXME: there are several more attributes missing (see VT520 manual)\n   */\n  public softReset(params: IParams): boolean {\n    this._coreService.isCursorHidden = false;\n    this._onRequestSyncScrollBar.fire();\n    this._activeBuffer.scrollTop = 0;\n    this._activeBuffer.scrollBottom = this._bufferService.rows - 1;\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._coreService.reset();\n    this._charsetService.reset();\n\n    // reset DECSC data\n    this._activeBuffer.savedX = 0;\n    this._activeBuffer.savedY = this._activeBuffer.ybase;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n\n    // reset DECOM\n    this._coreService.decPrivateModes.origin = false;\n    return true;\n  }\n\n  /**\n   * CSI Ps SP q  Set cursor style (DECSCUSR, VT520).\n   *   Ps = 0  -> blinking block.\n   *   Ps = 1  -> blinking block (default).\n   *   Ps = 2  -> steady block.\n   *   Ps = 3  -> blinking underline.\n   *   Ps = 4  -> steady underline.\n   *   Ps = 5  -> blinking bar (xterm).\n   *   Ps = 6  -> steady bar (xterm).\n   *\n   * @vt: #Y CSI DECSCUSR  \"Set Cursor Style\"  \"CSI Ps SP q\"   \"Set cursor style.\"\n   * Supported cursor styles:\n   *  - empty, 0 or 1: steady block\n   *  - 2: blink block\n   *  - 3: steady underline\n   *  - 4: blink underline\n   *  - 5: steady bar\n   *  - 6: blink bar\n   */\n  public setCursorStyle(params: IParams): boolean {\n    const param = params.params[0] || 1;\n    switch (param) {\n      case 1:\n      case 2:\n        this._optionsService.options.cursorStyle = 'block';\n        break;\n      case 3:\n      case 4:\n        this._optionsService.options.cursorStyle = 'underline';\n        break;\n      case 5:\n      case 6:\n        this._optionsService.options.cursorStyle = 'bar';\n        break;\n    }\n    const isBlinking = param % 2 === 1;\n    this._optionsService.options.cursorBlink = isBlinking;\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps r\n   *   Set Scrolling Region [top;bottom] (default = full size of win-\n   *   dow) (DECSTBM).\n   *\n   * @vt: #Y CSI DECSTBM \"Set Top and Bottom Margin\" \"CSI Ps ; Ps r\" \"Set top and bottom margins of the viewport [top;bottom] (default = viewport size).\"\n   */\n  public setScrollRegion(params: IParams): boolean {\n    const top = params.params[0] || 1;\n    let bottom: number;\n\n    if (params.length < 2 || (bottom = params.params[1]) > this._bufferService.rows || bottom === 0) {\n      bottom = this._bufferService.rows;\n    }\n\n    if (bottom > top) {\n      this._activeBuffer.scrollTop = top - 1;\n      this._activeBuffer.scrollBottom = bottom - 1;\n      this._setCursor(0, 0);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps ; Ps t - Various window manipulations and reports (xterm)\n   *\n   * Note: Only those listed below are supported. All others are left to integrators and\n   * need special treatment based on the embedding environment.\n   *\n   *    Ps = 1 4                                                          supported\n   *      Report xterm text area size in pixels.\n   *      Result is CSI 4 ; height ; width t\n   *    Ps = 14 ; 2                                                       not implemented\n   *    Ps = 16                                                           supported\n   *      Report xterm character cell size in pixels.\n   *      Result is CSI 6 ; height ; width t\n   *    Ps = 18                                                           supported\n   *      Report the size of the text area in characters.\n   *      Result is CSI 8 ; height ; width t\n   *    Ps = 20                                                           supported\n   *      Report xterm window's icon label.\n   *      Result is OSC L label ST\n   *    Ps = 21                                                           supported\n   *      Report xterm window's title.\n   *      Result is OSC l label ST\n   *    Ps = 22 ; 0  -> Save xterm icon and window title on stack.        supported\n   *    Ps = 22 ; 1  -> Save xterm icon title on stack.                   supported\n   *    Ps = 22 ; 2  -> Save xterm window title on stack.                 supported\n   *    Ps = 23 ; 0  -> Restore xterm icon and window title from stack.   supported\n   *    Ps = 23 ; 1  -> Restore xterm icon title from stack.              supported\n   *    Ps = 23 ; 2  -> Restore xterm window title from stack.            supported\n   *    Ps >= 24                                                          not implemented\n   */\n  public windowOptions(params: IParams): boolean {\n    if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n      return true;\n    }\n    const second = (params.length > 1) ? params.params[1] : 0;\n    switch (params.params[0]) {\n      case 14:  // GetWinSizePixels, returns CSI 4 ; height ; width t\n        if (second !== 2) {\n          this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_WIN_SIZE_PIXELS);\n        }\n        break;\n      case 16:  // GetCellSizePixels, returns CSI 6 ; height ; width t\n        this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_CELL_SIZE_PIXELS);\n        break;\n      case 18:  // GetWinSizeChars, returns CSI 8 ; height ; width t\n        if (this._bufferService) {\n          this._coreService.triggerDataEvent(`${C0.ESC}[8;${this._bufferService.rows};${this._bufferService.cols}t`);\n        }\n        break;\n      case 22:  // PushTitle\n        if (second === 0 || second === 2) {\n          this._windowTitleStack.push(this._windowTitle);\n          if (this._windowTitleStack.length > STACK_LIMIT) {\n            this._windowTitleStack.shift();\n          }\n        }\n        if (second === 0 || second === 1) {\n          this._iconNameStack.push(this._iconName);\n          if (this._iconNameStack.length > STACK_LIMIT) {\n            this._iconNameStack.shift();\n          }\n        }\n        break;\n      case 23:  // PopTitle\n        if (second === 0 || second === 2) {\n          if (this._windowTitleStack.length) {\n            this.setTitle(this._windowTitleStack.pop()!);\n          }\n        }\n        if (second === 0 || second === 1) {\n          if (this._iconNameStack.length) {\n            this.setIconName(this._iconNameStack.pop()!);\n          }\n        }\n        break;\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI s\n   * ESC 7\n   *   Save cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCOSC   \"Save Cursor\"   \"CSI s\"   \"Save cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  SC   \"Save Cursor\"   \"ESC 7\"   \"Save cursor position, charmap and text attributes.\"\n   */\n  public saveCursor(params?: IParams): boolean {\n    this._activeBuffer.savedX = this._activeBuffer.x;\n    this._activeBuffer.savedY = this._activeBuffer.ybase + this._activeBuffer.y;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n    return true;\n  }\n\n\n  /**\n   * CSI u\n   * ESC 8\n   *   Restore cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCORC \"Restore Cursor\"  \"CSI u\"   \"Restore cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  RC \"Restore Cursor\"  \"ESC 8\"   \"Restore cursor position, charmap and text attributes.\"\n   */\n  public restoreCursor(params?: IParams): boolean {\n    this._activeBuffer.x = this._activeBuffer.savedX || 0;\n    this._activeBuffer.y = Math.max(this._activeBuffer.savedY - this._activeBuffer.ybase, 0);\n    this._curAttrData.fg = this._activeBuffer.savedCurAttrData.fg;\n    this._curAttrData.bg = this._activeBuffer.savedCurAttrData.bg;\n    this._charsetService.charset = (this as any)._savedCharset;\n    if (this._activeBuffer.savedCharset) {\n      this._charsetService.charset = this._activeBuffer.savedCharset;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n\n  /**\n   * OSC 2; <data> ST (set window title)\n   *   Proxy to set window title.\n   *\n   * @vt: #P[Icon name is not exposed.]   OSC    0   \"Set Windows Title and Icon Name\"  \"OSC 0 ; Pt BEL\"  \"Set window title and icon name.\"\n   * Icon name is not supported. For Window Title see below.\n   *\n   * @vt: #Y     OSC    2   \"Set Windows Title\"  \"OSC 2 ; Pt BEL\"  \"Set window title.\"\n   * xterm.js does not manipulate the title directly, instead exposes changes via the event `Terminal.onTitleChange`.\n   */\n  public setTitle(data: string): boolean {\n    this._windowTitle = data;\n    this._onTitleChange.fire(data);\n    return true;\n  }\n\n  /**\n   * OSC 1; <data> ST\n   * Note: Icon name is not exposed.\n   */\n  public setIconName(data: string): boolean {\n    this._iconName = data;\n    return true;\n  }\n\n  /**\n   * OSC 4; <num> ; <text> ST (set ANSI color <num> to <text>)\n   *\n   * @vt: #Y    OSC    4    \"Set ANSI color\"   \"OSC 4 ; c ; spec BEL\" \"Change color number `c` to the color specified by `spec`.\"\n   * `c` is the color index between 0 and 255. The color format of `spec` is derived from `XParseColor` (see OSC 10 for supported formats).\n   * There may be multipe `c ; spec` pairs present in the same instruction.\n   * If `spec` contains `?` the terminal returns a sequence with the currently set color.\n   */\n  public setOrReportIndexedColor(data: string): boolean {\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    while (slots.length > 1) {\n      const idx = slots.shift() as string;\n      const spec = slots.shift() as string;\n      if (/^\\d+$/.exec(idx)) {\n        const index = parseInt(idx);\n        if (0 <= index && index < 256) {\n          if (spec === '?') {\n            event.push({ type: ColorRequestType.REPORT, index });\n          } else {\n            const color = parseColor(spec);\n            if (color) {\n              event.push({ type: ColorRequestType.SET, index, color });\n            }\n          }\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  // special colors - OSC 10 | 11 | 12\n  private _specialColors = [ColorIndex.FOREGROUND, ColorIndex.BACKGROUND, ColorIndex.CURSOR];\n\n  /**\n   * Apply colors requests for special colors in OSC 10 | 11 | 12.\n   * Since these commands are stacking from multiple parameters,\n   * we handle them in a loop with an entry offset to `_specialColors`.\n   */\n  private _setOrReportSpecialColor(data: string, offset: number): boolean {\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i, ++offset) {\n      if (offset >= this._specialColors.length) break;\n      if (slots[i] === '?') {\n        this._onColor.fire([{ type: ColorRequestType.REPORT, index: this._specialColors[offset] }]);\n      } else {\n        const color = parseColor(slots[i]);\n        if (color) {\n          this._onColor.fire([{ type: ColorRequestType.SET, index: this._specialColors[offset], color }]);\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * OSC 10 ; <xcolor name>|<?> ST - set or query default foreground color\n   *\n   * @vt: #Y  OSC   10    \"Set or query default foreground color\"   \"OSC 10 ; Pt BEL\"  \"Set or query default foreground color.\"\n   * To set the color, the following color specification formats are supported:\n   * - `rgb:<red>/<green>/<blue>` for  `<red>, <green>, <blue>` in `h | hh | hhh | hhhh`, where\n   *   `h` is a single hexadecimal digit (case insignificant). The different widths scale\n   *   from 4 bit (`h`) to 16 bit (`hhhh`) and get converted to 8 bit (`hh`).\n   * - `#RGB` - 4 bits per channel, expanded to `#R0G0B0`\n   * - `#RRGGBB` - 8 bits per channel\n   * - `#RRRGGGBBB` - 12 bits per channel, truncated to `#RRGGBB`\n   * - `#RRRRGGGGBBBB` - 16 bits per channel, truncated to `#RRGGBB`\n   *\n   * **Note:** X11 named colors are currently unsupported.\n   *\n   * If `Pt` contains `?` instead of a color specification, the terminal\n   * returns a sequence with the current default foreground color\n   * (use that sequence to restore the color after changes).\n   *\n   * **Note:** Other than xterm, xterm.js does not support OSC 12 - 19.\n   * Therefore stacking multiple `Pt` separated by `;` only works for the first two entries.\n   */\n  public setOrReportFgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 0);\n  }\n\n  /**\n   * OSC 11 ; <xcolor name>|<?> ST - set or query default background color\n   *\n   * @vt: #Y  OSC   11    \"Set or query default background color\"   \"OSC 11 ; Pt BEL\"  \"Same as OSC 10, but for default background.\"\n   */\n  public setOrReportBgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 1);\n  }\n\n  /**\n   * OSC 12 ; <xcolor name>|<?> ST - set or query default cursor color\n   *\n   * @vt: #Y  OSC   12    \"Set or query default cursor color\"   \"OSC 12 ; Pt BEL\"  \"Same as OSC 10, but for default cursor color.\"\n   */\n  public setOrReportCursorColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 2);\n  }\n\n  /**\n   * OSC 104 ; <num> ST - restore ANSI color <num>\n   *\n   * @vt: #Y  OSC   104    \"Reset ANSI color\"   \"OSC 104 ; c BEL\" \"Reset color number `c` to themed color.\"\n   * `c` is the color index between 0 and 255. This function restores the default color for `c` as\n   * specified by the loaded theme. Any number of `c` parameters may be given.\n   * If no parameters are given, the entire indexed color table will be reset.\n   */\n  public restoreIndexedColor(data: string): boolean {\n    if (!data) {\n      this._onColor.fire([{ type: ColorRequestType.RESTORE }]);\n      return true;\n    }\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i) {\n      if (/^\\d+$/.exec(slots[i])) {\n        const index = parseInt(slots[i]);\n        if (0 <= index && index < 256) {\n          event.push({ type: ColorRequestType.RESTORE, index });\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  /**\n   * OSC 110 ST - restore default foreground color\n   *\n   * @vt: #Y  OSC   110    \"Restore default foreground color\"   \"OSC 110 BEL\"  \"Restore default foreground to themed color.\"\n   */\n  public restoreFgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: ColorIndex.FOREGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 111 ST - restore default background color\n   *\n   * @vt: #Y  OSC   111    \"Restore default background color\"   \"OSC 111 BEL\"  \"Restore default background to themed color.\"\n   */\n  public restoreBgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: ColorIndex.BACKGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 112 ST - restore default cursor color\n   *\n   * @vt: #Y  OSC   112    \"Restore default cursor color\"   \"OSC 112 BEL\"  \"Restore default cursor to themed color.\"\n   */\n  public restoreCursorColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: ColorIndex.CURSOR }]);\n    return true;\n  }\n\n  /**\n   * ESC E\n   * C1.NEL\n   *   DEC mnemonic: NEL (https://vt100.net/docs/vt510-rm/NEL)\n   *   Moves cursor to first position on next line.\n   *\n   * @vt: #Y   C1    NEL   \"Next Line\"   \"\\x85\"    \"Move the cursor to the beginning of the next row.\"\n   * @vt: #Y   ESC   NEL   \"Next Line\"   \"ESC E\"   \"Move the cursor to the beginning of the next row.\"\n   */\n  public nextLine(): boolean {\n    this._activeBuffer.x = 0;\n    this.index();\n    return true;\n  }\n\n  /**\n   * ESC =\n   *   DEC mnemonic: DECKPAM (https://vt100.net/docs/vt510-rm/DECKPAM.html)\n   *   Enables the numeric keypad to send application sequences to the host.\n   */\n  public keypadApplicationMode(): boolean {\n    this._logService.debug('Serial port requested application keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = true;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC >\n   *   DEC mnemonic: DECKPNM (https://vt100.net/docs/vt510-rm/DECKPNM.html)\n   *   Enables the keypad to send numeric characters to the host.\n   */\n  public keypadNumericMode(): boolean {\n    this._logService.debug('Switching back to normal keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = false;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC % @\n   * ESC % G\n   *   Select default character set. UTF-8 is not supported (string are unicode anyways)\n   *   therefore ESC % G does the same.\n   */\n  public selectDefaultCharset(): boolean {\n    this._charsetService.setgLevel(0);\n    this._charsetService.setgCharset(0, DEFAULT_CHARSET); // US (default)\n    return true;\n  }\n\n  /**\n   * ESC ( C\n   *   Designate G0 Character Set, VT100, ISO 2022.\n   * ESC ) C\n   *   Designate G1 Character Set (ISO 2022, VT100).\n   * ESC * C\n   *   Designate G2 Character Set (ISO 2022, VT220).\n   * ESC + C\n   *   Designate G3 Character Set (ISO 2022, VT220).\n   * ESC - C\n   *   Designate G1 Character Set (VT300).\n   * ESC . C\n   *   Designate G2 Character Set (VT300).\n   * ESC / C\n   *   Designate G3 Character Set (VT300). C = A  -> ISO Latin-1 Supplemental. - Supported?\n   */\n  public selectCharset(collectAndFlag: string): boolean {\n    if (collectAndFlag.length !== 2) {\n      this.selectDefaultCharset();\n      return true;\n    }\n    if (collectAndFlag[0] === '/') {\n      return true;  // TODO: Is this supported?\n    }\n    this._charsetService.setgCharset(GLEVEL[collectAndFlag[0]], CHARSETS[collectAndFlag[1]] || DEFAULT_CHARSET);\n    return true;\n  }\n\n  /**\n   * ESC D\n   * C1.IND\n   *   DEC mnemonic: IND (https://vt100.net/docs/vt510-rm/IND.html)\n   *   Moves the cursor down one line in the same column.\n   *\n   * @vt: #Y   C1    IND   \"Index\"   \"\\x84\"    \"Move the cursor one line down scrolling if needed.\"\n   * @vt: #Y   ESC   IND   \"Index\"   \"ESC D\"   \"Move the cursor one line down scrolling if needed.\"\n   */\n  public index(): boolean {\n    this._restrictCursor();\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * ESC H\n   * C1.HTS\n   *   DEC mnemonic: HTS (https://vt100.net/docs/vt510-rm/HTS.html)\n   *   Sets a horizontal tab stop at the column position indicated by\n   *   the value of the active column when the terminal receives an HTS.\n   *\n   * @vt: #Y   C1    HTS   \"Horizontal Tabulation Set\" \"\\x88\"    \"Places a tab stop at the current cursor position.\"\n   * @vt: #Y   ESC   HTS   \"Horizontal Tabulation Set\" \"ESC H\"   \"Places a tab stop at the current cursor position.\"\n   */\n  public tabSet(): boolean {\n    this._activeBuffer.tabs[this._activeBuffer.x] = true;\n    return true;\n  }\n\n  /**\n   * ESC M\n   * C1.RI\n   *   DEC mnemonic: HTS\n   *   Moves the cursor up one line in the same column. If the cursor is at the top margin,\n   *   the page scrolls down.\n   *\n   * @vt: #Y ESC  IR \"Reverse Index\" \"ESC M\"  \"Move the cursor one line up scrolling if needed.\"\n   */\n  public reverseIndex(): boolean {\n    this._restrictCursor();\n    if (this._activeBuffer.y === this._activeBuffer.scrollTop) {\n      // possibly move the code below to term.reverseScroll();\n      // test: echo -ne '\\e[1;1H\\e[44m\\eM\\e[0m'\n      // blankLine(true) is xterm/linux behavior\n      const scrollRegionHeight = this._activeBuffer.scrollBottom - this._activeBuffer.scrollTop;\n      this._activeBuffer.lines.shiftElements(this._activeBuffer.ybase + this._activeBuffer.y, scrollRegionHeight, 1);\n      this._activeBuffer.lines.set(this._activeBuffer.ybase + this._activeBuffer.y, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n      this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    } else {\n      this._activeBuffer.y--;\n      this._restrictCursor(); // quickfix to not run out of bounds\n    }\n    return true;\n  }\n\n  /**\n   * ESC c\n   *   DEC mnemonic: RIS (https://vt100.net/docs/vt510-rm/RIS.html)\n   *   Reset to initial state.\n   */\n  public fullReset(): boolean {\n    this._parser.reset();\n    this._onRequestReset.fire();\n    return true;\n  }\n\n  public reset(): void {\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._eraseAttrDataInternal = DEFAULT_ATTR_DATA.clone();\n  }\n\n  /**\n   * back_color_erase feature for xterm.\n   */\n  private _eraseAttrData(): IAttributeData {\n    this._eraseAttrDataInternal.bg &= ~(Attributes.CM_MASK | 0xFFFFFF);\n    this._eraseAttrDataInternal.bg |= this._curAttrData.bg & ~0xFC000000;\n    return this._eraseAttrDataInternal;\n  }\n\n  /**\n   * ESC n\n   * ESC o\n   * ESC |\n   * ESC }\n   * ESC ~\n   *   DEC mnemonic: LS (https://vt100.net/docs/vt510-rm/LS.html)\n   *   When you use a locking shift, the character set remains in GL or GR until\n   *   you use another locking shift. (partly supported)\n   */\n  public setgLevel(level: number): boolean {\n    this._charsetService.setgLevel(level);\n    return true;\n  }\n\n  /**\n   * ESC # 8\n   *   DEC mnemonic: DECALN (https://vt100.net/docs/vt510-rm/DECALN.html)\n   *   This control function fills the complete screen area with\n   *   a test pattern (E) used for adjusting screen alignment.\n   *\n   * @vt: #Y   ESC   DECALN   \"Screen Alignment Pattern\"  \"ESC # 8\"  \"Fill viewport with a test pattern (E).\"\n   */\n  public screenAlignmentPattern(): boolean {\n    // prepare cell data\n    const cell = new CellData();\n    cell.content = 1 << Content.WIDTH_SHIFT | 'E'.charCodeAt(0);\n    cell.fg = this._curAttrData.fg;\n    cell.bg = this._curAttrData.bg;\n\n\n    this._setCursor(0, 0);\n    for (let yOffset = 0; yOffset < this._bufferService.rows; ++yOffset) {\n      const row = this._activeBuffer.ybase + this._activeBuffer.y + yOffset;\n      const line = this._activeBuffer.lines.get(row);\n      if (line) {\n        line.fill(cell);\n        line.isWrapped = false;\n      }\n    }\n    this._dirtyRowService.markAllDirty();\n    this._setCursor(0, 0);\n    return true;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * A base class that can be extended to provide convenience methods for managing the lifecycle of an\n * object and its components.\n */\nexport abstract class Disposable implements IDisposable {\n  protected _disposables: IDisposable[] = [];\n  protected _isDisposed: boolean = false;\n\n  constructor() {\n  }\n\n  /**\n   * Disposes the object, triggering the `dispose` method on all registered IDisposables.\n   */\n  public dispose(): void {\n    this._isDisposed = true;\n    for (const d of this._disposables) {\n      d.dispose();\n    }\n    this._disposables.length = 0;\n  }\n\n  /**\n   * Registers a disposable object.\n   * @param d The disposable to register.\n   * @returns The disposable.\n   */\n  public register<T extends IDisposable>(d: T): T {\n    this._disposables.push(d);\n    return d;\n  }\n\n  /**\n   * Unregisters a disposable object if it has been registered, if not do\n   * nothing.\n   * @param d The disposable to unregister.\n   */\n  public unregister<T extends IDisposable>(d: T): void {\n    const index = this._disposables.indexOf(d);\n    if (index !== -1) {\n      this._disposables.splice(index, 1);\n    }\n  }\n}\n\n/**\n * Dispose of all disposables in an array and set its length to 0.\n */\nexport function disposeArray(disposables: IDisposable[]): void {\n  for (const d of disposables) {\n    d.dispose();\n  }\n  disposables.length = 0;\n}\n\n/**\n * Creates a disposable that will dispose of an array of disposables when disposed.\n */\nexport function getDisposeArrayDisposable(array: IDisposable[]): IDisposable {\n  return { dispose: () => disposeArray(array) };\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface INavigator {\n  userAgent: string;\n  language: string;\n  platform: string;\n}\n\n// We're declaring a navigator global here as we expect it in all runtimes (node and browser), but\n// we want this module to live in common.\ndeclare const navigator: INavigator;\n\nconst isNode = (typeof navigator === 'undefined') ? true : false;\nconst userAgent = (isNode) ? 'node' : navigator.userAgent;\nconst platform = (isNode) ? 'node' : navigator.platform;\n\nexport const isFirefox = userAgent.includes('Firefox');\nexport const isLegacyEdge = userAgent.includes('Edge');\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(userAgent);\n\n// Find the users platform. We use this to interpret the meta key\n// and ISO third level shifts.\n// http://stackoverflow.com/q/19877924/577598\nexport const isMac = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'].includes(platform);\nexport const isIpad = platform === 'iPad';\nexport const isIphone = platform === 'iPhone';\nexport const isWindows = ['Windows', 'Win16', 'Win32', 'WinCE'].includes(platform);\nexport const isLinux = platform.indexOf('Linux') >= 0;\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport type TypedArray = Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Int8Array | Int16Array | Int32Array | Float32Array | Float64Array;\n\n\n/**\n * polyfill for TypedArray.fill\n * This is needed to support .fill in all safari versions and IE 11.\n */\nexport function fill<T extends TypedArray>(array: T, value: number, start?: number, end?: number): T {\n  // all modern engines that support .fill\n  if (array.fill) {\n    return array.fill(value, start, end) as T;\n  }\n  return fillFallback(array, value, start, end);\n}\n\nexport function fillFallback<T extends TypedArray>(array: T, value: number, start: number = 0, end: number = array.length): T {\n  // safari and IE 11\n  // since IE 11 does not support Array.prototype.fill either\n  // we cannot use the suggested polyfill from MDN\n  // instead we simply fall back to looping\n  if (start >= array.length) {\n    return array;\n  }\n  start = (array.length + start) % array.length;\n  if (end >= array.length) {\n    end = array.length;\n  } else {\n    end = (array.length + end) % array.length;\n  }\n  for (let i = start; i < end; ++i) {\n    array[i] = value;\n  }\n  return array;\n}\n\n/**\n * Concat two typed arrays `a` and `b`.\n * Returns a new typed array.\n */\nexport function concat<T extends TypedArray>(a: T, b: T): T {\n  const result = new (a.constructor as any)(a.length + b.length);\n  result.set(a);\n  result.set(b, a.length);\n  return result;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CHAR_DATA_CODE_INDEX, NULL_CELL_CODE, WHITESPACE_CELL_CODE } from 'common/buffer/Constants';\nimport { IBufferService } from 'common/services/Services';\n\nexport function updateWindowsModeWrappedState(bufferService: IBufferService): void {\n  // Winpty does not support wraparound mode which means that lines will never\n  // be marked as wrapped. This causes issues for things like copying a line\n  // retaining the wrapped new line characters or if consumers are listening\n  // in on the data stream.\n  //\n  // The workaround for this is to listen to every incoming line feed and mark\n  // the line as wrapped if the last character in the previous line is not a\n  // space. This is certainly not without its problems, but generally on\n  // Windows when text reaches the end of the terminal it's likely going to be\n  // wrapped.\n  const line = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y - 1);\n  const lastChar = line?.get(bufferService.cols - 1);\n\n  const nextLine = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y);\n  if (nextLine && lastChar) {\n    nextLine.isWrapped = (lastChar[CHAR_DATA_CODE_INDEX] !== NULL_CELL_CODE && lastChar[CHAR_DATA_CODE_INDEX] !== WHITESPACE_CELL_CODE);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IAttributeData, IColorRGB, IExtendedAttrs } from 'common/Types';\nimport { Attributes, FgFlags, BgFlags, UnderlineStyle } from 'common/buffer/Constants';\n\nexport class AttributeData implements IAttributeData {\n  public static toColorRGB(value: number): IColorRGB {\n    return [\n      value >>> Attributes.RED_SHIFT & 255,\n      value >>> Attributes.GREEN_SHIFT & 255,\n      value & 255\n    ];\n  }\n\n  public static fromColorRGB(value: IColorRGB): number {\n    return (value[0] & 255) << Attributes.RED_SHIFT | (value[1] & 255) << Attributes.GREEN_SHIFT | value[2] & 255;\n  }\n\n  public clone(): IAttributeData {\n    const newObj = new AttributeData();\n    newObj.fg = this.fg;\n    newObj.bg = this.bg;\n    newObj.extended = this.extended.clone();\n    return newObj;\n  }\n\n  // data\n  public fg = 0;\n  public bg = 0;\n  public extended = new ExtendedAttrs();\n\n  // flags\n  public isInverse(): number       { return this.fg & FgFlags.INVERSE; }\n  public isBold(): number          { return this.fg & FgFlags.BOLD; }\n  public isUnderline(): number     { return this.fg & FgFlags.UNDERLINE; }\n  public isBlink(): number         { return this.fg & FgFlags.BLINK; }\n  public isInvisible(): number     { return this.fg & FgFlags.INVISIBLE; }\n  public isItalic(): number        { return this.bg & BgFlags.ITALIC; }\n  public isDim(): number           { return this.bg & BgFlags.DIM; }\n  public isStrikethrough(): number { return this.fg & FgFlags.STRIKETHROUGH; }\n\n  // color modes\n  public getFgColorMode(): number { return this.fg & Attributes.CM_MASK; }\n  public getBgColorMode(): number { return this.bg & Attributes.CM_MASK; }\n  public isFgRGB(): boolean       { return (this.fg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isBgRGB(): boolean       { return (this.bg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isFgPalette(): boolean   { return (this.fg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.fg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isBgPalette(): boolean   { return (this.bg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.bg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isFgDefault(): boolean   { return (this.fg & Attributes.CM_MASK) === 0; }\n  public isBgDefault(): boolean   { return (this.bg & Attributes.CM_MASK) === 0; }\n  public isAttributeDefault(): boolean { return this.fg === 0 && this.bg === 0; }\n\n  // colors\n  public getFgColor(): number {\n    switch (this.fg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.fg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.fg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n  public getBgColor(): number {\n    switch (this.bg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.bg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.bg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n\n  // extended attrs\n  public hasExtendedAttrs(): number {\n    return this.bg & BgFlags.HAS_EXTENDED;\n  }\n  public updateExtended(): void {\n    if (this.extended.isEmpty()) {\n      this.bg &= ~BgFlags.HAS_EXTENDED;\n    } else {\n      this.bg |= BgFlags.HAS_EXTENDED;\n    }\n  }\n  public getUnderlineColor(): number {\n    if ((this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor) {\n      switch (this.extended.underlineColor & Attributes.CM_MASK) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:  return this.extended.underlineColor & Attributes.PCOLOR_MASK;\n        case Attributes.CM_RGB:   return this.extended.underlineColor & Attributes.RGB_MASK;\n        default:                  return this.getFgColor();\n      }\n    }\n    return this.getFgColor();\n  }\n  public getUnderlineColorMode(): number {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? this.extended.underlineColor & Attributes.CM_MASK\n      : this.getFgColorMode();\n  }\n  public isUnderlineColorRGB(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_RGB\n      : this.isFgRGB();\n  }\n  public isUnderlineColorPalette(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P16\n          || (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P256\n      : this.isFgPalette();\n  }\n  public isUnderlineColorDefault(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === 0\n      : this.isFgDefault();\n  }\n  public getUnderlineStyle(): UnderlineStyle {\n    return this.fg & FgFlags.UNDERLINE\n      ? (this.bg & BgFlags.HAS_EXTENDED ? this.extended.underlineStyle : UnderlineStyle.SINGLE)\n      : UnderlineStyle.NONE;\n  }\n}\n\n\n/**\n * Extended attributes for a cell.\n * Holds information about different underline styles and color.\n */\nexport class ExtendedAttrs implements IExtendedAttrs {\n  constructor(\n    // underline style, NONE is empty\n    public underlineStyle: UnderlineStyle = UnderlineStyle.NONE,\n    // underline color, -1 is empty (same as FG)\n    public underlineColor: number = -1\n  ) {}\n\n  public clone(): IExtendedAttrs {\n    return new ExtendedAttrs(this.underlineStyle, this.underlineColor);\n  }\n\n  /**\n   * Convenient method to indicate whether the object holds no additional information,\n   * that needs to be persistant in the buffer.\n   */\n  public isEmpty(): boolean {\n    return this.underlineStyle === UnderlineStyle.NONE;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CircularList, IInsertEvent } from 'common/CircularList';\nimport { IBuffer, BufferIndex, IBufferStringIterator, IBufferStringIteratorResult } from 'common/buffer/Types';\nimport { IBufferLine, ICellData, IAttributeData, ICharset } from 'common/Types';\nimport { BufferLine, DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { CellData } from 'common/buffer/CellData';\nimport { NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_CHAR_INDEX } from 'common/buffer/Constants';\nimport { reflowLargerApplyNewLayout, reflowLargerCreateNewLayout, reflowLargerGetLinesToRemove, reflowSmallerGetNewLineLengths, getWrappedLineTrimmedLength } from 'common/buffer/BufferReflow';\nimport { Marker } from 'common/buffer/Marker';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { ExtendedAttrs } from 'common/buffer/AttributeData';\n\nexport const MAX_BUFFER_SIZE = 4294967295; // 2^32 - 1\n\n/**\n * This class represents a terminal buffer (an internal state of the terminal), where the\n * following information is stored (in high-level):\n *   - text content of this particular buffer\n *   - cursor position\n *   - scroll position\n */\nexport class Buffer implements IBuffer {\n  public lines: CircularList<IBufferLine>;\n  public ydisp: number = 0;\n  public ybase: number = 0;\n  public y: number = 0;\n  public x: number = 0;\n  public scrollBottom: number;\n  public scrollTop: number;\n  // TODO: Type me\n  public tabs: any;\n  public savedY: number = 0;\n  public savedX: number = 0;\n  public savedCurAttrData = DEFAULT_ATTR_DATA.clone();\n  public savedCharset: ICharset | undefined = DEFAULT_CHARSET;\n  public markers: Marker[] = [];\n  private _nullCell: ICellData = CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n  private _whitespaceCell: ICellData = CellData.fromCharData([0, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE]);\n  private _cols: number;\n  private _rows: number;\n  private _isClearing: boolean = false;\n\n  constructor(\n    private _hasScrollback: boolean,\n    private _optionsService: IOptionsService,\n    private _bufferService: IBufferService\n  ) {\n    this._cols = this._bufferService.cols;\n    this._rows = this._bufferService.rows;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  public getNullCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._nullCell.fg = attr.fg;\n      this._nullCell.bg = attr.bg;\n      this._nullCell.extended = attr.extended;\n    } else {\n      this._nullCell.fg = 0;\n      this._nullCell.bg = 0;\n      this._nullCell.extended = new ExtendedAttrs();\n    }\n    return this._nullCell;\n  }\n\n  public getWhitespaceCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._whitespaceCell.fg = attr.fg;\n      this._whitespaceCell.bg = attr.bg;\n      this._whitespaceCell.extended = attr.extended;\n    } else {\n      this._whitespaceCell.fg = 0;\n      this._whitespaceCell.bg = 0;\n      this._whitespaceCell.extended = new ExtendedAttrs();\n    }\n    return this._whitespaceCell;\n  }\n\n  public getBlankLine(attr: IAttributeData, isWrapped?: boolean): IBufferLine {\n    return new BufferLine(this._bufferService.cols, this.getNullCell(attr), isWrapped);\n  }\n\n  public get hasScrollback(): boolean {\n    return this._hasScrollback && this.lines.maxLength > this._rows;\n  }\n\n  public get isCursorInViewport(): boolean {\n    const absoluteY = this.ybase + this.y;\n    const relativeY = absoluteY - this.ydisp;\n    return (relativeY >= 0 && relativeY < this._rows);\n  }\n\n  /**\n   * Gets the correct buffer length based on the rows provided, the terminal's\n   * scrollback and whether this buffer is flagged to have scrollback or not.\n   * @param rows The terminal rows to use in the calculation.\n   */\n  private _getCorrectBufferLength(rows: number): number {\n    if (!this._hasScrollback) {\n      return rows;\n    }\n\n    const correctBufferLength = rows + this._optionsService.rawOptions.scrollback;\n\n    return correctBufferLength > MAX_BUFFER_SIZE ? MAX_BUFFER_SIZE : correctBufferLength;\n  }\n\n  /**\n   * Fills the buffer's viewport with blank lines.\n   */\n  public fillViewportRows(fillAttr?: IAttributeData): void {\n    if (this.lines.length === 0) {\n      if (fillAttr === undefined) {\n        fillAttr = DEFAULT_ATTR_DATA;\n      }\n      let i = this._rows;\n      while (i--) {\n        this.lines.push(this.getBlankLine(fillAttr));\n      }\n    }\n  }\n\n  /**\n   * Clears the buffer to it's initial state, discarding all previous data.\n   */\n  public clear(): void {\n    this.ydisp = 0;\n    this.ybase = 0;\n    this.y = 0;\n    this.x = 0;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  /**\n   * Resizes the buffer, adjusting its data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    // store reference to null cell with default attrs\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n\n    // Increase max length if needed before adjustments to allow space to fill\n    // as required.\n    const newMaxLength = this._getCorrectBufferLength(newRows);\n    if (newMaxLength > this.lines.maxLength) {\n      this.lines.maxLength = newMaxLength;\n    }\n\n    // The following adjustments should only happen if the buffer has been\n    // initialized/filled.\n    if (this.lines.length > 0) {\n      // Deal with columns increasing (reducing needs to happen after reflow)\n      if (this._cols < newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n\n      // Resize rows in both directions as needed\n      let addToY = 0;\n      if (this._rows < newRows) {\n        for (let y = this._rows; y < newRows; y++) {\n          if (this.lines.length < newRows + this.ybase) {\n            if (this._optionsService.rawOptions.windowsMode) {\n              // Just add the new missing rows on Windows as conpty reprints the screen with it's\n              // view of the world. Once a line enters scrollback for conpty it remains there\n              this.lines.push(new BufferLine(newCols, nullCell));\n            } else {\n              if (this.ybase > 0 && this.lines.length <= this.ybase + this.y + addToY + 1) {\n                // There is room above the buffer and there are no empty elements below the line,\n                // scroll up\n                this.ybase--;\n                addToY++;\n                if (this.ydisp > 0) {\n                  // Viewport is at the top of the buffer, must increase downwards\n                  this.ydisp--;\n                }\n              } else {\n                // Add a blank line if there is no buffer left at the top to scroll to, or if there\n                // are blank lines after the cursor\n                this.lines.push(new BufferLine(newCols, nullCell));\n              }\n            }\n          }\n        }\n      } else { // (this._rows >= newRows)\n        for (let y = this._rows; y > newRows; y--) {\n          if (this.lines.length > newRows + this.ybase) {\n            if (this.lines.length > this.ybase + this.y + 1) {\n              // The line is a blank line below the cursor, remove it\n              this.lines.pop();\n            } else {\n              // The line is the cursor, scroll down\n              this.ybase++;\n              this.ydisp++;\n            }\n          }\n        }\n      }\n\n      // Reduce max length if needed after adjustments, this is done after as it\n      // would otherwise cut data from the bottom of the buffer.\n      if (newMaxLength < this.lines.maxLength) {\n        // Trim from the top of the buffer and adjust ybase and ydisp.\n        const amountToTrim = this.lines.length - newMaxLength;\n        if (amountToTrim > 0) {\n          this.lines.trimStart(amountToTrim);\n          this.ybase = Math.max(this.ybase - amountToTrim, 0);\n          this.ydisp = Math.max(this.ydisp - amountToTrim, 0);\n          this.savedY = Math.max(this.savedY - amountToTrim, 0);\n        }\n        this.lines.maxLength = newMaxLength;\n      }\n\n      // Make sure that the cursor stays on screen\n      this.x = Math.min(this.x, newCols - 1);\n      this.y = Math.min(this.y, newRows - 1);\n      if (addToY) {\n        this.y += addToY;\n      }\n      this.savedX = Math.min(this.savedX, newCols - 1);\n\n      this.scrollTop = 0;\n    }\n\n    this.scrollBottom = newRows - 1;\n\n    if (this._isReflowEnabled) {\n      this._reflow(newCols, newRows);\n\n      // Trim the end of the line off if cols shrunk\n      if (this._cols > newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n    }\n\n    this._cols = newCols;\n    this._rows = newRows;\n  }\n\n  private get _isReflowEnabled(): boolean {\n    return this._hasScrollback && !this._optionsService.rawOptions.windowsMode;\n  }\n\n  private _reflow(newCols: number, newRows: number): void {\n    if (this._cols === newCols) {\n      return;\n    }\n\n    // Iterate through rows, ignore the last one as it cannot be wrapped\n    if (newCols > this._cols) {\n      this._reflowLarger(newCols, newRows);\n    } else {\n      this._reflowSmaller(newCols, newRows);\n    }\n  }\n\n  private _reflowLarger(newCols: number, newRows: number): void {\n    const toRemove: number[] = reflowLargerGetLinesToRemove(this.lines, this._cols, newCols, this.ybase + this.y, this.getNullCell(DEFAULT_ATTR_DATA));\n    if (toRemove.length > 0) {\n      const newLayoutResult = reflowLargerCreateNewLayout(this.lines, toRemove);\n      reflowLargerApplyNewLayout(this.lines, newLayoutResult.layout);\n      this._reflowLargerAdjustViewport(newCols, newRows, newLayoutResult.countRemoved);\n    }\n  }\n\n  private _reflowLargerAdjustViewport(newCols: number, newRows: number, countRemoved: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Adjust viewport based on number of items removed\n    let viewportAdjustments = countRemoved;\n    while (viewportAdjustments-- > 0) {\n      if (this.ybase === 0) {\n        if (this.y > 0) {\n          this.y--;\n        }\n        if (this.lines.length < newRows) {\n          // Add an extra row at the bottom of the viewport\n          this.lines.push(new BufferLine(newCols, nullCell));\n        }\n      } else {\n        if (this.ydisp === this.ybase) {\n          this.ydisp--;\n        }\n        this.ybase--;\n      }\n    }\n    this.savedY = Math.max(this.savedY - countRemoved, 0);\n  }\n\n  private _reflowSmaller(newCols: number, newRows: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Gather all BufferLines that need to be inserted into the Buffer here so that they can be\n    // batched up and only committed once\n    const toInsert = [];\n    let countToInsert = 0;\n    // Go backwards as many lines may be trimmed and this will avoid considering them\n    for (let y = this.lines.length - 1; y >= 0; y--) {\n      // Check whether this line is a problem\n      let nextLine = this.lines.get(y) as BufferLine;\n      if (!nextLine || !nextLine.isWrapped && nextLine.getTrimmedLength() <= newCols) {\n        continue;\n      }\n\n      // Gather wrapped lines and adjust y to be the starting line\n      const wrappedLines: BufferLine[] = [nextLine];\n      while (nextLine.isWrapped && y > 0) {\n        nextLine = this.lines.get(--y) as BufferLine;\n        wrappedLines.unshift(nextLine);\n      }\n\n      // If these lines contain the cursor don't touch them, the program will handle fixing up\n      // wrapped lines with the cursor\n      const absoluteY = this.ybase + this.y;\n      if (absoluteY >= y && absoluteY < y + wrappedLines.length) {\n        continue;\n      }\n\n      const lastLineLength = wrappedLines[wrappedLines.length - 1].getTrimmedLength();\n      const destLineLengths = reflowSmallerGetNewLineLengths(wrappedLines, this._cols, newCols);\n      const linesToAdd = destLineLengths.length - wrappedLines.length;\n      let trimmedLines: number;\n      if (this.ybase === 0 && this.y !== this.lines.length - 1) {\n        // If the top section of the buffer is not yet filled\n        trimmedLines = Math.max(0, this.y - this.lines.maxLength + linesToAdd);\n      } else {\n        trimmedLines = Math.max(0, this.lines.length - this.lines.maxLength + linesToAdd);\n      }\n\n      // Add the new lines\n      const newLines: BufferLine[] = [];\n      for (let i = 0; i < linesToAdd; i++) {\n        const newLine = this.getBlankLine(DEFAULT_ATTR_DATA, true) as BufferLine;\n        newLines.push(newLine);\n      }\n      if (newLines.length > 0) {\n        toInsert.push({\n          // countToInsert here gets the actual index, taking into account other inserted items.\n          // using this we can iterate through the list forwards\n          start: y + wrappedLines.length + countToInsert,\n          newLines\n        });\n        countToInsert += newLines.length;\n      }\n      wrappedLines.push(...newLines);\n\n      // Copy buffer data to new locations, this needs to happen backwards to do in-place\n      let destLineIndex = destLineLengths.length - 1; // Math.floor(cellsNeeded / newCols);\n      let destCol = destLineLengths[destLineIndex]; // cellsNeeded % newCols;\n      if (destCol === 0) {\n        destLineIndex--;\n        destCol = destLineLengths[destLineIndex];\n      }\n      let srcLineIndex = wrappedLines.length - linesToAdd - 1;\n      let srcCol = lastLineLength;\n      while (srcLineIndex >= 0) {\n        const cellsToCopy = Math.min(srcCol, destCol);\n        if (wrappedLines[destLineIndex] === undefined) {\n          // Sanity check that the line exists, this has been known to fail for an unknown reason\n          // which would stop the reflow from happening if an exception would throw.\n          break;\n        }\n        wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol - cellsToCopy, destCol - cellsToCopy, cellsToCopy, true);\n        destCol -= cellsToCopy;\n        if (destCol === 0) {\n          destLineIndex--;\n          destCol = destLineLengths[destLineIndex];\n        }\n        srcCol -= cellsToCopy;\n        if (srcCol === 0) {\n          srcLineIndex--;\n          const wrappedLinesIndex = Math.max(srcLineIndex, 0);\n          srcCol = getWrappedLineTrimmedLength(wrappedLines, wrappedLinesIndex, this._cols);\n        }\n      }\n\n      // Null out the end of the line ends if a wide character wrapped to the following line\n      for (let i = 0; i < wrappedLines.length; i++) {\n        if (destLineLengths[i] < newCols) {\n          wrappedLines[i].setCell(destLineLengths[i], nullCell);\n        }\n      }\n\n      // Adjust viewport as needed\n      let viewportAdjustments = linesToAdd - trimmedLines;\n      while (viewportAdjustments-- > 0) {\n        if (this.ybase === 0) {\n          if (this.y < newRows - 1) {\n            this.y++;\n            this.lines.pop();\n          } else {\n            this.ybase++;\n            this.ydisp++;\n          }\n        } else {\n          // Ensure ybase does not exceed its maximum value\n          if (this.ybase < Math.min(this.lines.maxLength, this.lines.length + countToInsert) - newRows) {\n            if (this.ybase === this.ydisp) {\n              this.ydisp++;\n            }\n            this.ybase++;\n          }\n        }\n      }\n      this.savedY = Math.min(this.savedY + linesToAdd, this.ybase + newRows - 1);\n    }\n\n    // Rearrange lines in the buffer if there are any insertions, this is done at the end rather\n    // than earlier so that it's a single O(n) pass through the buffer, instead of O(n^2) from many\n    // costly calls to CircularList.splice.\n    if (toInsert.length > 0) {\n      // Record buffer insert events and then play them back backwards so that the indexes are\n      // correct\n      const insertEvents: IInsertEvent[] = [];\n\n      // Record original lines so they don't get overridden when we rearrange the list\n      const originalLines: BufferLine[] = [];\n      for (let i = 0; i < this.lines.length; i++) {\n        originalLines.push(this.lines.get(i) as BufferLine);\n      }\n      const originalLinesLength = this.lines.length;\n\n      let originalLineIndex = originalLinesLength - 1;\n      let nextToInsertIndex = 0;\n      let nextToInsert = toInsert[nextToInsertIndex];\n      this.lines.length = Math.min(this.lines.maxLength, this.lines.length + countToInsert);\n      let countInsertedSoFar = 0;\n      for (let i = Math.min(this.lines.maxLength - 1, originalLinesLength + countToInsert - 1); i >= 0; i--) {\n        if (nextToInsert && nextToInsert.start > originalLineIndex + countInsertedSoFar) {\n          // Insert extra lines here, adjusting i as needed\n          for (let nextI = nextToInsert.newLines.length - 1; nextI >= 0; nextI--) {\n            this.lines.set(i--, nextToInsert.newLines[nextI]);\n          }\n          i++;\n\n          // Create insert events for later\n          insertEvents.push({\n            index: originalLineIndex + 1,\n            amount: nextToInsert.newLines.length\n          });\n\n          countInsertedSoFar += nextToInsert.newLines.length;\n          nextToInsert = toInsert[++nextToInsertIndex];\n        } else {\n          this.lines.set(i, originalLines[originalLineIndex--]);\n        }\n      }\n\n      // Update markers\n      let insertCountEmitted = 0;\n      for (let i = insertEvents.length - 1; i >= 0; i--) {\n        insertEvents[i].index += insertCountEmitted;\n        this.lines.onInsertEmitter.fire(insertEvents[i]);\n        insertCountEmitted += insertEvents[i].amount;\n      }\n      const amountToTrim = Math.max(0, originalLinesLength + countToInsert - this.lines.maxLength);\n      if (amountToTrim > 0) {\n        this.lines.onTrimEmitter.fire(amountToTrim);\n      }\n    }\n  }\n\n  // private _reflowSmallerGetLinesNeeded()\n\n  /**\n   * Translates a string index back to a BufferIndex.\n   * To get the correct buffer position the string must start at `startCol` 0\n   * (default in translateBufferLineToString).\n   * The method also works on wrapped line strings given rows were not trimmed.\n   * The method operates on the CharData string length, there are no\n   * additional content or boundary checks. Therefore the string and the buffer\n   * should not be altered in between.\n   * TODO: respect trim flag after fixing #1685\n   * @param lineIndex line index the string was retrieved from\n   * @param stringIndex index within the string\n   * @param startCol column offset the string was retrieved from\n   */\n  public stringIndexToBufferIndex(lineIndex: number, stringIndex: number, trimRight: boolean = false): BufferIndex {\n    while (stringIndex) {\n      const line = this.lines.get(lineIndex);\n      if (!line) {\n        return [-1, -1];\n      }\n      const length = (trimRight) ? line.getTrimmedLength() : line.length;\n      for (let i = 0; i < length; ++i) {\n        if (line.get(i)[CHAR_DATA_WIDTH_INDEX]) {\n          // empty cells report a string length of 0, but get replaced\n          // with a whitespace in translateToString, thus replace with 1\n          stringIndex -= line.get(i)[CHAR_DATA_CHAR_INDEX].length || 1;\n        }\n        if (stringIndex < 0) {\n          return [lineIndex, i];\n        }\n      }\n      lineIndex++;\n    }\n    return [lineIndex, 0];\n  }\n\n  /**\n   * Translates a buffer line to a string, with optional start and end columns.\n   * Wide characters will count as two columns in the resulting string. This\n   * function is useful for getting the actual text underneath the raw selection\n   * position.\n   * @param line The line being translated.\n   * @param trimRight Whether to trim whitespace to the right.\n   * @param startCol The column to start at.\n   * @param endCol The column to end at.\n   */\n  public translateBufferLineToString(lineIndex: number, trimRight: boolean, startCol: number = 0, endCol?: number): string {\n    const line = this.lines.get(lineIndex);\n    if (!line) {\n      return '';\n    }\n    return line.translateToString(trimRight, startCol, endCol);\n  }\n\n  public getWrappedRangeForLine(y: number): { first: number, last: number } {\n    let first = y;\n    let last = y;\n    // Scan upwards for wrapped lines\n    while (first > 0 && this.lines.get(first)!.isWrapped) {\n      first--;\n    }\n    // Scan downwards for wrapped lines\n    while (last + 1 < this.lines.length && this.lines.get(last + 1)!.isWrapped) {\n      last++;\n    }\n    return { first, last };\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    if (i !== null && i !== undefined) {\n      if (!this.tabs[i]) {\n        i = this.prevStop(i);\n      }\n    } else {\n      this.tabs = {};\n      i = 0;\n    }\n\n    for (; i < this._cols; i += this._optionsService.rawOptions.tabStopWidth) {\n      this.tabs[i] = true;\n    }\n  }\n\n  /**\n   * Move the cursor to the previous tab stop from the given position (default is current).\n   * @param x The position to move the cursor to the previous tab stop.\n   */\n  public prevStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[--x] && x > 0);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Move the cursor one tab stop forward from the given position (default is current).\n   * @param x The position to move the cursor one tab stop forward.\n   */\n  public nextStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[++x] && x < this._cols);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  public clearMarkers(y?: number): void {\n    this._isClearing = true;\n    if (y !== undefined) {\n      for (let i = 0; i < this.markers.length; i++) {\n        if (this.markers[i].line === y) {\n          this.markers[i].dispose();\n          this.markers.splice(i--, 1);\n        }\n      }\n    } else {\n      for (const marker of this.markers) {\n        marker.dispose();\n      }\n      this.markers = [];\n    }\n    this._isClearing = false;\n  }\n\n  public addMarker(y: number): Marker {\n    const marker = new Marker(y);\n    this.markers.push(marker);\n    marker.register(this.lines.onTrim(amount => {\n      marker.line -= amount;\n      // The marker should be disposed when the line is trimmed from the buffer\n      if (marker.line < 0) {\n        marker.dispose();\n      }\n    }));\n    marker.register(this.lines.onInsert(event => {\n      if (marker.line >= event.index) {\n        marker.line += event.amount;\n      }\n    }));\n    marker.register(this.lines.onDelete(event => {\n      // Delete the marker if it's within the range\n      if (marker.line >= event.index && marker.line < event.index + event.amount) {\n        marker.dispose();\n      }\n\n      // Shift the marker if it's after the deleted range\n      if (marker.line > event.index) {\n        marker.line -= event.amount;\n      }\n    }));\n    marker.register(marker.onDispose(() => this._removeMarker(marker)));\n    return marker;\n  }\n\n  private _removeMarker(marker: Marker): void {\n    if (!this._isClearing) {\n      this.markers.splice(this.markers.indexOf(marker), 1);\n    }\n  }\n\n  public iterator(trimRight: boolean, startIndex?: number, endIndex?: number, startOverscan?: number, endOverscan?: number): IBufferStringIterator {\n    return new BufferStringIterator(this, trimRight, startIndex, endIndex, startOverscan, endOverscan);\n  }\n}\n\n/**\n * Iterator to get unwrapped content strings from the buffer.\n * The iterator returns at least the string data between the borders\n * `startIndex` and `endIndex` (exclusive) and will expand the lines\n * by `startOverscan` to the top and by `endOverscan` to the bottom,\n * if no new line was found in between.\n * It will never read/return string data beyond `startIndex - startOverscan`\n * or `endIndex + endOverscan`. Therefore the first and last line might be truncated.\n * It is possible to always get the full string for the first and last line as well\n * by setting the overscan values to the actual buffer length. This not recommended\n * since it might return the whole buffer within a single string in a worst case scenario.\n */\nexport class BufferStringIterator implements IBufferStringIterator {\n  private _current: number;\n\n  constructor (\n    private _buffer: IBuffer,\n    private _trimRight: boolean,\n    private _startIndex: number = 0,\n    private _endIndex: number = _buffer.lines.length,\n    private _startOverscan: number = 0,\n    private _endOverscan: number = 0\n  ) {\n    if (this._startIndex < 0) {\n      this._startIndex = 0;\n    }\n    if (this._endIndex > this._buffer.lines.length) {\n      this._endIndex = this._buffer.lines.length;\n    }\n    this._current = this._startIndex;\n  }\n\n  public hasNext(): boolean {\n    return this._current < this._endIndex;\n  }\n\n  public next(): IBufferStringIteratorResult {\n    const range = this._buffer.getWrappedRangeForLine(this._current);\n    // limit search window to overscan value at both borders\n    if (range.first < this._startIndex - this._startOverscan) {\n      range.first = this._startIndex - this._startOverscan;\n    }\n    if (range.last > this._endIndex + this._endOverscan) {\n      range.last = this._endIndex + this._endOverscan;\n    }\n    // limit to current buffer length\n    range.first = Math.max(range.first, 0);\n    range.last = Math.min(range.last, this._buffer.lines.length);\n    let content = '';\n    for (let i = range.first; i <= range.last; ++i) {\n      content += this._buffer.translateBufferLineToString(i, this._trimRight);\n    }\n    this._current = range.last + 1;\n    return { range, content };\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, IBufferLine, ICellData, IAttributeData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, Content, BgFlags } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * buffer memory layout:\n *\n *   |             uint32_t             |        uint32_t         |        uint32_t         |\n *   |             `content`            |          `FG`           |          `BG`           |\n *   | wcwidth(2) comb(1) codepoint(21) | flags(8) R(8) G(8) B(8) | flags(8) R(8) G(8) B(8) |\n */\n\n\n/** typed array slots taken by one cell */\nconst CELL_SIZE = 3;\n\n/**\n * Cell member indices.\n *\n * Direct access:\n *    `content = data[column * CELL_SIZE + Cell.CONTENT];`\n *    `fg = data[column * CELL_SIZE + Cell.FG];`\n *    `bg = data[column * CELL_SIZE + Cell.BG];`\n */\nconst enum Cell {\n  CONTENT = 0,\n  FG = 1, // currently simply holds all known attrs\n  BG = 2  // currently unused\n}\n\nexport const DEFAULT_ATTR_DATA = Object.freeze(new AttributeData());\n\n/**\n * Typed array based bufferline implementation.\n *\n * There are 2 ways to insert data into the cell buffer:\n * - `setCellFromCodepoint` + `addCodepointToCell`\n *   Use these for data that is already UTF32.\n *   Used during normal input in `InputHandler` for faster buffer access.\n * - `setCell`\n *   This method takes a CellData object and stores the data in the buffer.\n *   Use `CellData.fromCharData` to create the CellData object (e.g. from JS string).\n *\n * To retrieve data from the buffer use either one of the primitive methods\n * (if only one particular value is needed) or `loadCell`. For `loadCell` in a loop\n * memory allocs / GC pressure can be greatly reduced by reusing the CellData object.\n */\nexport class BufferLine implements IBufferLine {\n  protected _data: Uint32Array;\n  protected _combined: {[index: number]: string} = {};\n  protected _extendedAttrs: {[index: number]: ExtendedAttrs} = {};\n  public length: number;\n\n  constructor(cols: number, fillCellData?: ICellData, public isWrapped: boolean = false) {\n    this._data = new Uint32Array(cols * CELL_SIZE);\n    const cell = fillCellData || CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n    for (let i = 0; i < cols; ++i) {\n      this.setCell(i, cell);\n    }\n    this.length = cols;\n  }\n\n  /**\n   * Get cell data CharData.\n   * @deprecated\n   */\n  public get(index: number): CharData {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    const cp = content & Content.CODEPOINT_MASK;\n    return [\n      this._data[index * CELL_SIZE + Cell.FG],\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index]\n        : (cp) ? stringFromCodePoint(cp) : '',\n      content >> Content.WIDTH_SHIFT,\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index].charCodeAt(this._combined[index].length - 1)\n        : cp\n    ];\n  }\n\n  /**\n   * Set cell data from CharData.\n   * @deprecated\n   */\n  public set(index: number, value: CharData): void {\n    this._data[index * CELL_SIZE + Cell.FG] = value[CHAR_DATA_ATTR_INDEX];\n    if (value[CHAR_DATA_CHAR_INDEX].length > 1) {\n      this._combined[index] = value[1];\n      this._data[index * CELL_SIZE + Cell.CONTENT] = index | Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    } else {\n      this._data[index * CELL_SIZE + Cell.CONTENT] = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n\n  /**\n   * primitive getters\n   * use these when only one value is needed, otherwise use `loadCell`\n   */\n  public getWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT;\n  }\n\n  /** Test whether content has width. */\n  public hasWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.WIDTH_MASK;\n  }\n\n  /** Get FG cell component. */\n  public getFg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.FG];\n  }\n\n  /** Get BG cell component. */\n  public getBg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG];\n  }\n\n  /**\n   * Test whether contains any chars.\n   * Basically an empty has no content, but other cells might differ in FG/BG\n   * from real empty cells.\n   * */\n  public hasContent(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK;\n  }\n\n  /**\n   * Get codepoint of the cell.\n   * To be in line with `code` in CharData this either returns\n   * a single UTF32 codepoint or the last codepoint of a combined string.\n   */\n  public getCodePoint(index: number): number {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index].charCodeAt(this._combined[index].length - 1);\n    }\n    return content & Content.CODEPOINT_MASK;\n  }\n\n  /** Test whether the cell contains a combined string. */\n  public isCombined(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.IS_COMBINED_MASK;\n  }\n\n  /** Returns the string content of the cell. */\n  public getString(index: number): string {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index];\n    }\n    if (content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(content & Content.CODEPOINT_MASK);\n    }\n    // return empty string for empty cells\n    return '';\n  }\n\n  /**\n   * Load data at `index` into `cell`. This is used to access cells in a way that's more friendly\n   * to GC as it significantly reduced the amount of new objects/references needed.\n   */\n  public loadCell(index: number, cell: ICellData): ICellData {\n    const startIndex = index * CELL_SIZE;\n    cell.content = this._data[startIndex + Cell.CONTENT];\n    cell.fg = this._data[startIndex + Cell.FG];\n    cell.bg = this._data[startIndex + Cell.BG];\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      cell.combinedData = this._combined[index];\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      cell.extended = this._extendedAttrs[index];\n    }\n    return cell;\n  }\n\n  /**\n   * Set data at `index` to `cell`.\n   */\n  public setCell(index: number, cell: ICellData): void {\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      this._combined[index] = cell.combinedData;\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = cell.extended;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = cell.content;\n    this._data[index * CELL_SIZE + Cell.FG] = cell.fg;\n    this._data[index * CELL_SIZE + Cell.BG] = cell.bg;\n  }\n\n  /**\n   * Set cell data from input handler.\n   * Since the input handler see the incoming chars as UTF32 codepoints,\n   * it gets an optimized access method.\n   */\n  public setCellFromCodePoint(index: number, codePoint: number, width: number, fg: number, bg: number, eAttrs: IExtendedAttrs): void {\n    if (bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = eAttrs;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = codePoint | (width << Content.WIDTH_SHIFT);\n    this._data[index * CELL_SIZE + Cell.FG] = fg;\n    this._data[index * CELL_SIZE + Cell.BG] = bg;\n  }\n\n  /**\n   * Add a codepoint to a cell from input handler.\n   * During input stage combining chars with a width of 0 follow and stack\n   * onto a leading char. Since we already set the attrs\n   * by the previous `setDataFromCodePoint` call, we can omit it here.\n   */\n  public addCodepointToCell(index: number, codePoint: number): void {\n    let content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      // we already have a combined string, simply add\n      this._combined[index] += stringFromCodePoint(codePoint);\n    } else {\n      if (content & Content.CODEPOINT_MASK) {\n        // normal case for combining chars:\n        //  - move current leading char + new one into combined string\n        //  - set combined flag\n        this._combined[index] = stringFromCodePoint(content & Content.CODEPOINT_MASK) + stringFromCodePoint(codePoint);\n        content &= ~Content.CODEPOINT_MASK; // set codepoint in buffer to 0\n        content |= Content.IS_COMBINED_MASK;\n      } else {\n        // should not happen - we actually have no data in the cell yet\n        // simply set the data in the cell buffer with a width of 1\n        content = codePoint | (1 << Content.WIDTH_SHIFT);\n      }\n      this._data[index * CELL_SIZE + Cell.CONTENT] = content;\n    }\n  }\n\n  public insertCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n\n    // handle fullwidth at pos: reset cell one to the left if pos is second cell of a wide char\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = this.length - pos - n - 1; i >= 0; --i) {\n        this.setCell(pos + n + i, this.loadCell(pos + i, cell));\n      }\n      for (let i = 0; i < n; ++i) {\n        this.setCell(pos + i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at line end: reset last cell if it is first cell of a wide char\n    if (this.getWidth(this.length - 1) === 2) {\n      this.setCellFromCodePoint(this.length - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public deleteCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = 0; i < this.length - pos - n; ++i) {\n        this.setCell(pos + i, this.loadCell(pos + n + i, cell));\n      }\n      for (let i = this.length - n; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at pos:\n    // - reset pos-1 if wide char\n    // - reset pos if width==0 (previous second cell of a wide char)\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    if (this.getWidth(pos) === 0 && !this.hasContent(pos)) {\n      this.setCellFromCodePoint(pos, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public replaceCells(start: number, end: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    // handle fullwidth at start: reset cell one to the left if start is second cell of a wide char\n    if (start && this.getWidth(start - 1) === 2) {\n      this.setCellFromCodePoint(start - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    // handle fullwidth at last cell + 1: reset to empty cell if it is second part of a wide char\n    if (end < this.length && this.getWidth(end - 1) === 2) {\n      this.setCellFromCodePoint(end, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    while (start < end  && start < this.length) {\n      this.setCell(start++, fillCellData);\n    }\n  }\n\n  public resize(cols: number, fillCellData: ICellData): void {\n    if (cols === this.length) {\n      return;\n    }\n    if (cols > this.length) {\n      const data = new Uint32Array(cols * CELL_SIZE);\n      if (this.length) {\n        if (cols * CELL_SIZE < this._data.length) {\n          data.set(this._data.subarray(0, cols * CELL_SIZE));\n        } else {\n          data.set(this._data);\n        }\n      }\n      this._data = data;\n      for (let i = this.length; i < cols; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      if (cols) {\n        const data = new Uint32Array(cols * CELL_SIZE);\n        data.set(this._data.subarray(0, cols * CELL_SIZE));\n        this._data = data;\n        // Remove any cut off combined data, FIXME: repeat this for extended attrs\n        const keys = Object.keys(this._combined);\n        for (let i = 0; i < keys.length; i++) {\n          const key = parseInt(keys[i], 10);\n          if (key >= cols) {\n            delete this._combined[key];\n          }\n        }\n      } else {\n        this._data = new Uint32Array(0);\n        this._combined = {};\n      }\n    }\n    this.length = cols;\n  }\n\n  /** fill a line with fillCharData */\n  public fill(fillCellData: ICellData): void {\n    this._combined = {};\n    this._extendedAttrs = {};\n    for (let i = 0; i < this.length; ++i) {\n      this.setCell(i, fillCellData);\n    }\n  }\n\n  /** alter to a full copy of line  */\n  public copyFrom(line: BufferLine): void {\n    if (this.length !== line.length) {\n      this._data = new Uint32Array(line._data);\n    } else {\n      // use high speed copy if lengths are equal\n      this._data.set(line._data);\n    }\n    this.length = line.length;\n    this._combined = {};\n    for (const el in line._combined) {\n      this._combined[el] = line._combined[el];\n    }\n    this._extendedAttrs = {};\n    for (const el in line._extendedAttrs) {\n      this._extendedAttrs[el] = line._extendedAttrs[el];\n    }\n    this.isWrapped = line.isWrapped;\n  }\n\n  /** create a new clone */\n  public clone(): IBufferLine {\n    const newLine = new BufferLine(0);\n    newLine._data = new Uint32Array(this._data);\n    newLine.length = this.length;\n    for (const el in this._combined) {\n      newLine._combined[el] = this._combined[el];\n    }\n    for (const el in this._extendedAttrs) {\n      newLine._extendedAttrs[el] = this._extendedAttrs[el];\n    }\n    newLine.isWrapped = this.isWrapped;\n    return newLine;\n  }\n\n  public getTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public copyCellsFrom(src: BufferLine, srcCol: number, destCol: number, length: number, applyInReverse: boolean): void {\n    const srcData = src._data;\n    if (applyInReverse) {\n      for (let cell = length - 1; cell >= 0; cell--) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n      }\n    } else {\n      for (let cell = 0; cell < length; cell++) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n      }\n    }\n\n    // Move any combined data over as needed, FIXME: repeat for extended attrs\n    const srcCombinedKeys = Object.keys(src._combined);\n    for (let i = 0; i < srcCombinedKeys.length; i++) {\n      const key = parseInt(srcCombinedKeys[i], 10);\n      if (key >= srcCol) {\n        this._combined[key - srcCol + destCol] = src._combined[key];\n      }\n    }\n  }\n\n  public translateToString(trimRight: boolean = false, startCol: number = 0, endCol: number = this.length): string {\n    if (trimRight) {\n      endCol = Math.min(endCol, this.getTrimmedLength());\n    }\n    let result = '';\n    while (startCol < endCol) {\n      const content = this._data[startCol * CELL_SIZE + Cell.CONTENT];\n      const cp = content & Content.CODEPOINT_MASK;\n      result += (content & Content.IS_COMBINED_MASK) ? this._combined[startCol] : (cp) ? stringFromCodePoint(cp) : WHITESPACE_CELL_CHAR;\n      startCol += (content >> Content.WIDTH_SHIFT) || 1; // always advance by 1\n    }\n    return result;\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange } from 'xterm';\n\nexport function getRangeLength(range: IBufferRange, bufferCols: number): number {\n  if (range.start.y > range.end.y) {\n    throw new Error(`Buffer range end (${range.end.x}, ${range.end.y}) cannot be before start (${range.start.x}, ${range.start.y})`);\n  }\n  return bufferCols * (range.end.y - range.start.y) + (range.end.x - range.start.x + 1);\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { BufferLine } from 'common/buffer/BufferLine';\nimport { CircularList } from 'common/CircularList';\nimport { IBufferLine, ICellData } from 'common/Types';\n\nexport interface INewLayoutResult {\n  layout: number[];\n  countRemoved: number;\n}\n\n/**\n * Evaluates and returns indexes to be removed after a reflow larger occurs. Lines will be removed\n * when a wrapped line unwraps.\n * @param lines The buffer lines.\n * @param newCols The columns after resize.\n */\nexport function reflowLargerGetLinesToRemove(lines: CircularList<IBufferLine>, oldCols: number, newCols: number, bufferAbsoluteY: number, nullCell: ICellData): number[] {\n  // Gather all BufferLines that need to be removed from the Buffer here so that they can be\n  // batched up and only committed once\n  const toRemove: number[] = [];\n\n  for (let y = 0; y < lines.length - 1; y++) {\n    // Check if this row is wrapped\n    let i = y;\n    let nextLine = lines.get(++i) as BufferLine;\n    if (!nextLine.isWrapped) {\n      continue;\n    }\n\n    // Check how many lines it's wrapped for\n    const wrappedLines: BufferLine[] = [lines.get(y) as BufferLine];\n    while (i < lines.length && nextLine.isWrapped) {\n      wrappedLines.push(nextLine);\n      nextLine = lines.get(++i) as BufferLine;\n    }\n\n    // If these lines contain the cursor don't touch them, the program will handle fixing up wrapped\n    // lines with the cursor\n    if (bufferAbsoluteY >= y && bufferAbsoluteY < i) {\n      y += wrappedLines.length - 1;\n      continue;\n    }\n\n    // Copy buffer data to new locations\n    let destLineIndex = 0;\n    let destCol = getWrappedLineTrimmedLength(wrappedLines, destLineIndex, oldCols);\n    let srcLineIndex = 1;\n    let srcCol = 0;\n    while (srcLineIndex < wrappedLines.length) {\n      const srcTrimmedTineLength = getWrappedLineTrimmedLength(wrappedLines, srcLineIndex, oldCols);\n      const srcRemainingCells = srcTrimmedTineLength - srcCol;\n      const destRemainingCells = newCols - destCol;\n      const cellsToCopy = Math.min(srcRemainingCells, destRemainingCells);\n\n      wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol, destCol, cellsToCopy, false);\n\n      destCol += cellsToCopy;\n      if (destCol === newCols) {\n        destLineIndex++;\n        destCol = 0;\n      }\n      srcCol += cellsToCopy;\n      if (srcCol === srcTrimmedTineLength) {\n        srcLineIndex++;\n        srcCol = 0;\n      }\n\n      // Make sure the last cell isn't wide, if it is copy it to the current dest\n      if (destCol === 0 && destLineIndex !== 0) {\n        if (wrappedLines[destLineIndex - 1].getWidth(newCols - 1) === 2) {\n          wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[destLineIndex - 1], newCols - 1, destCol++, 1, false);\n          // Null out the end of the last row\n          wrappedLines[destLineIndex - 1].setCell(newCols - 1, nullCell);\n        }\n      }\n    }\n\n    // Clear out remaining cells or fragments could remain;\n    wrappedLines[destLineIndex].replaceCells(destCol, newCols, nullCell);\n\n    // Work backwards and remove any rows at the end that only contain null cells\n    let countToRemove = 0;\n    for (let i = wrappedLines.length - 1; i > 0; i--) {\n      if (i > destLineIndex || wrappedLines[i].getTrimmedLength() === 0) {\n        countToRemove++;\n      } else {\n        break;\n      }\n    }\n\n    if (countToRemove > 0) {\n      toRemove.push(y + wrappedLines.length - countToRemove); // index\n      toRemove.push(countToRemove);\n    }\n\n    y += wrappedLines.length - 1;\n  }\n  return toRemove;\n}\n\n/**\n * Creates and return the new layout for lines given an array of indexes to be removed.\n * @param lines The buffer lines.\n * @param toRemove The indexes to remove.\n */\nexport function reflowLargerCreateNewLayout(lines: CircularList<IBufferLine>, toRemove: number[]): INewLayoutResult {\n  const layout: number[] = [];\n  // First iterate through the list and get the actual indexes to use for rows\n  let nextToRemoveIndex = 0;\n  let nextToRemoveStart = toRemove[nextToRemoveIndex];\n  let countRemovedSoFar = 0;\n  for (let i = 0; i < lines.length; i++) {\n    if (nextToRemoveStart === i) {\n      const countToRemove = toRemove[++nextToRemoveIndex];\n\n      // Tell markers that there was a deletion\n      lines.onDeleteEmitter.fire({\n        index: i - countRemovedSoFar,\n        amount: countToRemove\n      });\n\n      i += countToRemove - 1;\n      countRemovedSoFar += countToRemove;\n      nextToRemoveStart = toRemove[++nextToRemoveIndex];\n    } else {\n      layout.push(i);\n    }\n  }\n  return {\n    layout,\n    countRemoved: countRemovedSoFar\n  };\n}\n\n/**\n * Applies a new layout to the buffer. This essentially does the same as many splice calls but it's\n * done all at once in a single iteration through the list since splice is very expensive.\n * @param lines The buffer lines.\n * @param newLayout The new layout to apply.\n */\nexport function reflowLargerApplyNewLayout(lines: CircularList<IBufferLine>, newLayout: number[]): void {\n  // Record original lines so they don't get overridden when we rearrange the list\n  const newLayoutLines: BufferLine[] = [];\n  for (let i = 0; i < newLayout.length; i++) {\n    newLayoutLines.push(lines.get(newLayout[i]) as BufferLine);\n  }\n\n  // Rearrange the list\n  for (let i = 0; i < newLayoutLines.length; i++) {\n    lines.set(i, newLayoutLines[i]);\n  }\n  lines.length = newLayout.length;\n}\n\n/**\n * Gets the new line lengths for a given wrapped line. The purpose of this function it to pre-\n * compute the wrapping points since wide characters may need to be wrapped onto the following line.\n * This function will return an array of numbers of where each line wraps to, the resulting array\n * will only contain the values `newCols` (when the line does not end with a wide character) and\n * `newCols - 1` (when the line does end with a wide character), except for the last value which\n * will contain the remaining items to fill the line.\n *\n * Calling this with a `newCols` value of `1` will lock up.\n *\n * @param wrappedLines The wrapped lines to evaluate.\n * @param oldCols The columns before resize.\n * @param newCols The columns after resize.\n */\nexport function reflowSmallerGetNewLineLengths(wrappedLines: BufferLine[], oldCols: number, newCols: number): number[] {\n  const newLineLengths: number[] = [];\n  const cellsNeeded = wrappedLines.map((l, i) => getWrappedLineTrimmedLength(wrappedLines, i, oldCols)).reduce((p, c) => p + c);\n\n  // Use srcCol and srcLine to find the new wrapping point, use that to get the cellsAvailable and\n  // linesNeeded\n  let srcCol = 0;\n  let srcLine = 0;\n  let cellsAvailable = 0;\n  while (cellsAvailable < cellsNeeded) {\n    if (cellsNeeded - cellsAvailable < newCols) {\n      // Add the final line and exit the loop\n      newLineLengths.push(cellsNeeded - cellsAvailable);\n      break;\n    }\n    srcCol += newCols;\n    const oldTrimmedLength = getWrappedLineTrimmedLength(wrappedLines, srcLine, oldCols);\n    if (srcCol > oldTrimmedLength) {\n      srcCol -= oldTrimmedLength;\n      srcLine++;\n    }\n    const endsWithWide = wrappedLines[srcLine].getWidth(srcCol - 1) === 2;\n    if (endsWithWide) {\n      srcCol--;\n    }\n    const lineLength = endsWithWide ? newCols - 1 : newCols;\n    newLineLengths.push(lineLength);\n    cellsAvailable += lineLength;\n  }\n\n  return newLineLengths;\n}\n\nexport function getWrappedLineTrimmedLength(lines: BufferLine[], i: number, cols: number): number {\n  // If this is the last row in the wrapped line, get the actual trimmed length\n  if (i === lines.length - 1) {\n    return lines[i].getTrimmedLength();\n  }\n  // Detect whether the following line starts with a wide character and the end of the current line\n  // is null, if so then we can be pretty sure the null character should be excluded from the line\n  // length]\n  const endsInNull = !(lines[i].hasContent(cols - 1)) && lines[i].getWidth(cols - 1) === 1;\n  const followingLineStartsWithWide = lines[i + 1].getWidth(0) === 2;\n  if (endsInNull && followingLineStartsWithWide) {\n    return cols - 1;\n  }\n  return cols;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IAttributeData } from 'common/Types';\nimport { Buffer } from 'common/buffer/Buffer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { Disposable } from 'common/Lifecycle';\n\n/**\n * The BufferSet represents the set of two buffers used by xterm terminals (normal and alt) and\n * provides also utilities for working with them.\n */\nexport class BufferSet extends Disposable implements IBufferSet {\n  private _normal!: Buffer;\n  private _alt!: Buffer;\n  private _activeBuffer!: Buffer;\n\n  private _onBufferActivate = this.register(new EventEmitter<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}>());\n  public get onBufferActivate(): IEvent<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}> { return this._onBufferActivate.event; }\n\n  /**\n   * Create a new BufferSet for the given terminal.\n   * @param _terminal - The terminal the BufferSet will belong to\n   */\n  constructor(\n    private readonly _optionsService: IOptionsService,\n    private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.reset();\n  }\n\n  public reset(): void {\n    this._normal = new Buffer(true, this._optionsService, this._bufferService);\n    this._normal.fillViewportRows();\n\n    // The alt buffer should never have scrollback.\n    // See http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h2-The-Alternate-Screen-Buffer\n    this._alt = new Buffer(false, this._optionsService, this._bufferService);\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n\n    this.setupTabStops();\n  }\n\n  /**\n   * Returns the alt Buffer of the BufferSet\n   */\n  public get alt(): Buffer {\n    return this._alt;\n  }\n\n  /**\n   * Returns the normal Buffer of the BufferSet\n   */\n  public get active(): Buffer {\n    return this._activeBuffer;\n  }\n\n  /**\n   * Returns the currently active Buffer of the BufferSet\n   */\n  public get normal(): Buffer {\n    return this._normal;\n  }\n\n  /**\n   * Sets the normal Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateNormalBuffer(): void {\n    if (this._activeBuffer === this._normal) {\n      return;\n    }\n    this._normal.x = this._alt.x;\n    this._normal.y = this._alt.y;\n    // The alt buffer should always be cleared when we switch to the normal\n    // buffer. This frees up memory since the alt buffer should always be new\n    // when activated.\n    this._alt.clear();\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n  }\n\n  /**\n   * Sets the alt Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateAltBuffer(fillAttr?: IAttributeData): void {\n    if (this._activeBuffer === this._alt) {\n      return;\n    }\n    // Since the alt buffer is always cleared when the normal buffer is\n    // activated, we want to fill it when switching to it.\n    this._alt.fillViewportRows(fillAttr);\n    this._alt.x = this._normal.x;\n    this._alt.y = this._normal.y;\n    this._activeBuffer = this._alt;\n    this._onBufferActivate.fire({\n      activeBuffer: this._alt,\n      inactiveBuffer: this._normal\n    });\n  }\n\n  /**\n   * Resizes both normal and alt buffers, adjusting their data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    this._normal.resize(newCols, newRows);\n    this._alt.resize(newCols, newRows);\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    this._normal.setupTabStops(i);\n    this._alt.setupTabStops(i);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, ICellData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, Content } from 'common/buffer/Constants';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * CellData - represents a single Cell in the terminal buffer.\n */\nexport class CellData extends AttributeData implements ICellData {\n  /** Helper to create CellData from CharData. */\n  public static fromCharData(value: CharData): CellData {\n    const obj = new CellData();\n    obj.setFromCharData(value);\n    return obj;\n  }\n  /** Primitives from terminal buffer. */\n  public content = 0;\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n  public combinedData = '';\n  /** Whether cell contains a combined string. */\n  public isCombined(): number {\n    return this.content & Content.IS_COMBINED_MASK;\n  }\n  /** Width of the cell. */\n  public getWidth(): number {\n    return this.content >> Content.WIDTH_SHIFT;\n  }\n  /** JS string of the content. */\n  public getChars(): string {\n    if (this.content & Content.IS_COMBINED_MASK) {\n      return this.combinedData;\n    }\n    if (this.content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(this.content & Content.CODEPOINT_MASK);\n    }\n    return '';\n  }\n  /**\n   * Codepoint of cell\n   * Note this returns the UTF32 codepoint of single chars,\n   * if content is a combined string it returns the codepoint\n   * of the last char in string to be in line with code in CharData.\n   * */\n  public getCode(): number {\n    return (this.isCombined())\n      ? this.combinedData.charCodeAt(this.combinedData.length - 1)\n      : this.content & Content.CODEPOINT_MASK;\n  }\n  /** Set data from CharData */\n  public setFromCharData(value: CharData): void {\n    this.fg = value[CHAR_DATA_ATTR_INDEX];\n    this.bg = 0;\n    let combined = false;\n    // surrogates and combined strings need special treatment\n    if (value[CHAR_DATA_CHAR_INDEX].length > 2) {\n      combined = true;\n    }\n    else if (value[CHAR_DATA_CHAR_INDEX].length === 2) {\n      const code = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0);\n      // if the 2-char string is a surrogate create single codepoint\n      // everything else is combined\n      if (0xD800 <= code && code <= 0xDBFF) {\n        const second = value[CHAR_DATA_CHAR_INDEX].charCodeAt(1);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          this.content = ((code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n        }\n        else {\n          combined = true;\n        }\n      }\n      else {\n        combined = true;\n      }\n    }\n    else {\n      this.content = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n    if (combined) {\n      this.combinedData = value[CHAR_DATA_CHAR_INDEX];\n      this.content = Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n  /** Get data as CharData. */\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const DEFAULT_COLOR = 256;\nexport const DEFAULT_ATTR = (0 << 18) | (DEFAULT_COLOR << 9) | (256 << 0);\n\nexport const CHAR_DATA_ATTR_INDEX = 0;\nexport const CHAR_DATA_CHAR_INDEX = 1;\nexport const CHAR_DATA_WIDTH_INDEX = 2;\nexport const CHAR_DATA_CODE_INDEX = 3;\n\n/**\n * Null cell - a real empty cell (containing nothing).\n * Note that code should always be 0 for a null cell as\n * several test condition of the buffer line rely on this.\n */\nexport const NULL_CELL_CHAR = '';\nexport const NULL_CELL_WIDTH = 1;\nexport const NULL_CELL_CODE = 0;\n\n/**\n * Whitespace cell.\n * This is meant as a replacement for empty cells when needed\n * during rendering lines to preserve correct aligment.\n */\nexport const WHITESPACE_CELL_CHAR = ' ';\nexport const WHITESPACE_CELL_WIDTH = 1;\nexport const WHITESPACE_CELL_CODE = 32;\n\n/**\n * Bitmasks for accessing data in `content`.\n */\nexport const enum Content {\n  /**\n   * bit 1..21    codepoint, max allowed in UTF32 is 0x10FFFF (21 bits taken)\n   *              read:   `codepoint = content & Content.codepointMask;`\n   *              write:  `content |= codepoint & Content.codepointMask;`\n   *                      shortcut if precondition `codepoint <= 0x10FFFF` is met:\n   *                      `content |= codepoint;`\n   */\n  CODEPOINT_MASK = 0x1FFFFF,\n\n  /**\n   * bit 22       flag indication whether a cell contains combined content\n   *              read:   `isCombined = content & Content.isCombined;`\n   *              set:    `content |= Content.isCombined;`\n   *              clear:  `content &= ~Content.isCombined;`\n   */\n  IS_COMBINED_MASK = 0x200000,  // 1 << 21\n\n  /**\n   * bit 1..22    mask to check whether a cell contains any string data\n   *              we need to check for codepoint and isCombined bits to see\n   *              whether a cell contains anything\n   *              read:   `isEmpty = !(content & Content.hasContent)`\n   */\n  HAS_CONTENT_MASK = 0x3FFFFF,\n\n  /**\n   * bit 23..24   wcwidth value of cell, takes 2 bits (ranges from 0..2)\n   *              read:   `width = (content & Content.widthMask) >> Content.widthShift;`\n   *                      `hasWidth = content & Content.widthMask;`\n   *                      as long as wcwidth is highest value in `content`:\n   *                      `width = content >> Content.widthShift;`\n   *              write:  `content |= (width << Content.widthShift) & Content.widthMask;`\n   *                      shortcut if precondition `0 <= width <= 3` is met:\n   *                      `content |= width << Content.widthShift;`\n   */\n  WIDTH_MASK = 0xC00000,   // 3 << 22\n  WIDTH_SHIFT = 22\n}\n\nexport const enum Attributes {\n  /**\n   * bit 1..8     blue in RGB, color in P256 and P16\n   */\n  BLUE_MASK = 0xFF,\n  BLUE_SHIFT = 0,\n  PCOLOR_MASK = 0xFF,\n  PCOLOR_SHIFT = 0,\n\n  /**\n   * bit 9..16    green in RGB\n   */\n  GREEN_MASK = 0xFF00,\n  GREEN_SHIFT = 8,\n\n  /**\n   * bit 17..24   red in RGB\n   */\n  RED_MASK = 0xFF0000,\n  RED_SHIFT = 16,\n\n  /**\n   * bit 25..26   color mode: DEFAULT (0) | P16 (1) | P256 (2) | RGB (3)\n   */\n  CM_MASK = 0x3000000,\n  CM_DEFAULT = 0,\n  CM_P16 = 0x1000000,\n  CM_P256 = 0x2000000,\n  CM_RGB = 0x3000000,\n\n  /**\n   * bit 1..24  RGB room\n   */\n  RGB_MASK = 0xFFFFFF\n}\n\nexport const enum FgFlags {\n  /**\n   * bit 27..32\n   */\n  INVERSE = 0x4000000,\n  BOLD = 0x8000000,\n  UNDERLINE = 0x10000000,\n  BLINK = 0x20000000,\n  INVISIBLE = 0x40000000,\n  STRIKETHROUGH = 0x80000000,\n}\n\nexport const enum BgFlags {\n  /**\n   * bit 27..32 (upper 3 unused)\n   */\n  ITALIC = 0x4000000,\n  DIM = 0x8000000,\n  HAS_EXTENDED = 0x10000000\n}\n\nexport const enum UnderlineStyle {\n  NONE = 0,\n  SINGLE = 1,\n  DOUBLE = 2,\n  CURLY = 3,\n  DOTTED = 4,\n  DASHED = 5\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IMarker } from 'common/Types';\n\nexport class Marker extends Disposable implements IMarker {\n  private static _nextId = 1;\n\n  private _id: number = Marker._nextId++;\n  public isDisposed: boolean = false;\n\n  public get id(): number { return this._id; }\n\n  private _onDispose = new EventEmitter<void>();\n  public get onDispose(): IEvent<void> { return this._onDispose.event; }\n\n  constructor(\n    public line: number\n  ) {\n    super();\n  }\n\n  public dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this.isDisposed = true;\n    this.line = -1;\n    // Emit before super.dispose such that dispose listeners get a change to react\n    this._onDispose.fire();\n    super.dispose();\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharset } from 'common/Types';\n\n/**\n * The character sets supported by the terminal. These enable several languages\n * to be represented within the terminal with only 8-bit encoding. See ISO 2022\n * for a discussion on character sets. Only VT100 character sets are supported.\n */\nexport const CHARSETS: { [key: string]: ICharset | undefined } = {};\n\n/**\n * The default character set, US.\n */\nexport const DEFAULT_CHARSET: ICharset | undefined = CHARSETS['B'];\n\n/**\n * DEC Special Character and Line Drawing Set.\n * Reference: http://vt100.net/docs/vt102-ug/table5-13.html\n * A lot of curses apps use this if they see TERM=xterm.\n * testing: echo -e '\\e(0a\\e(B'\n * The xterm output sometimes seems to conflict with the\n * reference above. xterm seems in line with the reference\n * when running vttest however.\n * The table below now uses xterm's output from vttest.\n */\nCHARSETS['0'] = {\n  '`': '\\u25c6', // '◆'\n  'a': '\\u2592', // '▒'\n  'b': '\\u2409', // '␉' (HT)\n  'c': '\\u240c', // '␌' (FF)\n  'd': '\\u240d', // '␍' (CR)\n  'e': '\\u240a', // '␊' (LF)\n  'f': '\\u00b0', // '°'\n  'g': '\\u00b1', // '±'\n  'h': '\\u2424', // '␤' (NL)\n  'i': '\\u240b', // '␋' (VT)\n  'j': '\\u2518', // '┘'\n  'k': '\\u2510', // '┐'\n  'l': '\\u250c', // '┌'\n  'm': '\\u2514', // '└'\n  'n': '\\u253c', // '┼'\n  'o': '\\u23ba', // '⎺'\n  'p': '\\u23bb', // '⎻'\n  'q': '\\u2500', // '─'\n  'r': '\\u23bc', // '⎼'\n  's': '\\u23bd', // '⎽'\n  't': '\\u251c', // '├'\n  'u': '\\u2524', // '┤'\n  'v': '\\u2534', // '┴'\n  'w': '\\u252c', // '┬'\n  'x': '\\u2502', // '│'\n  'y': '\\u2264', // '≤'\n  'z': '\\u2265', // '≥'\n  '{': '\\u03c0', // 'π'\n  '|': '\\u2260', // '≠'\n  '}': '\\u00a3', // '£'\n  '~': '\\u00b7'  // '·'\n};\n\n/**\n * British character set\n * ESC (A\n * Reference: http://vt100.net/docs/vt220-rm/table2-5.html\n */\nCHARSETS['A'] = {\n  '#': '£'\n};\n\n/**\n * United States character set\n * ESC (B\n */\nCHARSETS['B'] = undefined;\n\n/**\n * Dutch character set\n * ESC (4\n * Reference: http://vt100.net/docs/vt220-rm/table2-6.html\n */\nCHARSETS['4'] = {\n  '#': '£',\n  '@': '¾',\n  '[': 'ij',\n  '\\\\': '½',\n  ']': '|',\n  '{': '¨',\n  '|': 'f',\n  '}': '¼',\n  '~': '´'\n};\n\n/**\n * Finnish character set\n * ESC (C or ESC (5\n * Reference: http://vt100.net/docs/vt220-rm/table2-7.html\n */\nCHARSETS['C'] =\nCHARSETS['5'] = {\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * French character set\n * ESC (R\n * Reference: http://vt100.net/docs/vt220-rm/table2-8.html\n */\nCHARSETS['R'] = {\n  '#': '£',\n  '@': 'à',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': '§',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': '¨'\n};\n\n/**\n * French Canadian character set\n * ESC (Q\n * Reference: http://vt100.net/docs/vt220-rm/table2-9.html\n */\nCHARSETS['Q'] = {\n  '@': 'à',\n  '[': 'â',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  '`': 'ô',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': 'û'\n};\n\n/**\n * German character set\n * ESC (K\n * Reference: http://vt100.net/docs/vt220-rm/table2-10.html\n */\nCHARSETS['K'] = {\n  '@': '§',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Ü',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'ß'\n};\n\n/**\n * Italian character set\n * ESC (Y\n * Reference: http://vt100.net/docs/vt220-rm/table2-11.html\n */\nCHARSETS['Y'] = {\n  '#': '£',\n  '@': '§',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': 'é',\n  '`': 'ù',\n  '{': 'à',\n  '|': 'ò',\n  '}': 'è',\n  '~': 'ì'\n};\n\n/**\n * Norwegian/Danish character set\n * ESC (E or ESC (6\n * Reference: http://vt100.net/docs/vt220-rm/table2-12.html\n */\nCHARSETS['E'] =\nCHARSETS['6'] = {\n  '@': 'Ä',\n  '[': 'Æ',\n  '\\\\': 'Ø',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'ä',\n  '{': 'æ',\n  '|': 'ø',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Spanish character set\n * ESC (Z\n * Reference: http://vt100.net/docs/vt220-rm/table2-13.html\n */\nCHARSETS['Z'] = {\n  '#': '£',\n  '@': '§',\n  '[': '¡',\n  '\\\\': 'Ñ',\n  ']': '¿',\n  '{': '°',\n  '|': 'ñ',\n  '}': 'ç'\n};\n\n/**\n * Swedish character set\n * ESC (H or ESC (7\n * Reference: http://vt100.net/docs/vt220-rm/table2-14.html\n */\nCHARSETS['H'] =\nCHARSETS['7'] = {\n  '@': 'É',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Swiss character set\n * ESC (=\n * Reference: http://vt100.net/docs/vt220-rm/table2-15.html\n */\nCHARSETS['='] = {\n  '#': 'ù',\n  '@': 'à',\n  '[': 'é',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '_': 'è',\n  '`': 'ô',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'û'\n};\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * C0 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C0 {\n  /** Null (Caret = ^@, C = \\0) */\n  export const NUL = '\\x00';\n  /** Start of Heading (Caret = ^A) */\n  export const SOH = '\\x01';\n  /** Start of Text (Caret = ^B) */\n  export const STX = '\\x02';\n  /** End of Text (Caret = ^C) */\n  export const ETX = '\\x03';\n  /** End of Transmission (Caret = ^D) */\n  export const EOT = '\\x04';\n  /** Enquiry (Caret = ^E) */\n  export const ENQ = '\\x05';\n  /** Acknowledge (Caret = ^F) */\n  export const ACK = '\\x06';\n  /** Bell (Caret = ^G, C = \\a) */\n  export const BEL = '\\x07';\n  /** Backspace (Caret = ^H, C = \\b) */\n  export const BS  = '\\x08';\n  /** Character Tabulation, Horizontal Tabulation (Caret = ^I, C = \\t) */\n  export const HT  = '\\x09';\n  /** Line Feed (Caret = ^J, C = \\n) */\n  export const LF  = '\\x0a';\n  /** Line Tabulation, Vertical Tabulation (Caret = ^K, C = \\v) */\n  export const VT  = '\\x0b';\n  /** Form Feed (Caret = ^L, C = \\f) */\n  export const FF  = '\\x0c';\n  /** Carriage Return (Caret = ^M, C = \\r) */\n  export const CR  = '\\x0d';\n  /** Shift Out (Caret = ^N) */\n  export const SO  = '\\x0e';\n  /** Shift In (Caret = ^O) */\n  export const SI  = '\\x0f';\n  /** Data Link Escape (Caret = ^P) */\n  export const DLE = '\\x10';\n  /** Device Control One (XON) (Caret = ^Q) */\n  export const DC1 = '\\x11';\n  /** Device Control Two (Caret = ^R) */\n  export const DC2 = '\\x12';\n  /** Device Control Three (XOFF) (Caret = ^S) */\n  export const DC3 = '\\x13';\n  /** Device Control Four (Caret = ^T) */\n  export const DC4 = '\\x14';\n  /** Negative Acknowledge (Caret = ^U) */\n  export const NAK = '\\x15';\n  /** Synchronous Idle (Caret = ^V) */\n  export const SYN = '\\x16';\n  /** End of Transmission Block (Caret = ^W) */\n  export const ETB = '\\x17';\n  /** Cancel (Caret = ^X) */\n  export const CAN = '\\x18';\n  /** End of Medium (Caret = ^Y) */\n  export const EM  = '\\x19';\n  /** Substitute (Caret = ^Z) */\n  export const SUB = '\\x1a';\n  /** Escape (Caret = ^[, C = \\e) */\n  export const ESC = '\\x1b';\n  /** File Separator (Caret = ^\\) */\n  export const FS  = '\\x1c';\n  /** Group Separator (Caret = ^]) */\n  export const GS  = '\\x1d';\n  /** Record Separator (Caret = ^^) */\n  export const RS  = '\\x1e';\n  /** Unit Separator (Caret = ^_) */\n  export const US  = '\\x1f';\n  /** Space */\n  export const SP  = '\\x20';\n  /** Delete (Caret = ^?) */\n  export const DEL = '\\x7f';\n}\n\n/**\n * C1 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C1 {\n  /** padding character */\n  export const PAD = '\\x80';\n  /** High Octet Preset */\n  export const HOP = '\\x81';\n  /** Break Permitted Here */\n  export const BPH = '\\x82';\n  /** No Break Here */\n  export const NBH = '\\x83';\n  /** Index */\n  export const IND = '\\x84';\n  /** Next Line */\n  export const NEL = '\\x85';\n  /** Start of Selected Area */\n  export const SSA = '\\x86';\n  /** End of Selected Area */\n  export const ESA = '\\x87';\n  /** Horizontal Tabulation Set */\n  export const HTS = '\\x88';\n  /** Horizontal Tabulation With Justification */\n  export const HTJ = '\\x89';\n  /** Vertical Tabulation Set */\n  export const VTS = '\\x8a';\n  /** Partial Line Down */\n  export const PLD = '\\x8b';\n  /** Partial Line Up */\n  export const PLU = '\\x8c';\n  /** Reverse Index */\n  export const RI = '\\x8d';\n  /** Single-Shift 2 */\n  export const SS2 = '\\x8e';\n  /** Single-Shift 3 */\n  export const SS3 = '\\x8f';\n  /** Device Control String */\n  export const DCS = '\\x90';\n  /** Private Use 1 */\n  export const PU1 = '\\x91';\n  /** Private Use 2 */\n  export const PU2 = '\\x92';\n  /** Set Transmit State */\n  export const STS = '\\x93';\n  /** Destructive backspace, intended to eliminate ambiguity about meaning of BS. */\n  export const CCH = '\\x94';\n  /** Message Waiting */\n  export const MW = '\\x95';\n  /** Start of Protected Area */\n  export const SPA = '\\x96';\n  /** End of Protected Area */\n  export const EPA = '\\x97';\n  /** Start of String */\n  export const SOS = '\\x98';\n  /** Single Graphic Character Introducer */\n  export const SGCI = '\\x99';\n  /** Single Character Introducer */\n  export const SCI = '\\x9a';\n  /** Control Sequence Introducer */\n  export const CSI = '\\x9b';\n  /** String Terminator */\n  export const ST = '\\x9c';\n  /** Operating System Command */\n  export const OSC = '\\x9d';\n  /** Privacy Message */\n  export const PM = '\\x9e';\n  /** Application Program Command */\n  export const APC = '\\x9f';\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IKeyboardEvent, IKeyboardResult, KeyboardResultType } from 'common/Types';\nimport { C0 } from 'common/data/EscapeSequences';\n\n// reg + shift key mappings for digits and special chars\nconst KEYCODE_KEY_MAPPINGS: { [key: number]: [string, string]} = {\n  // digits 0-9\n  48: ['0', ')'],\n  49: ['1', '!'],\n  50: ['2', '@'],\n  51: ['3', '#'],\n  52: ['4', '$'],\n  53: ['5', '%'],\n  54: ['6', '^'],\n  55: ['7', '&'],\n  56: ['8', '*'],\n  57: ['9', '('],\n\n  // special chars\n  186: [';', ':'],\n  187: ['=', '+'],\n  188: [',', '<'],\n  189: ['-', '_'],\n  190: ['.', '>'],\n  191: ['/', '?'],\n  192: ['`', '~'],\n  219: ['[', '{'],\n  220: ['\\\\', '|'],\n  221: [']', '}'],\n  222: ['\\'', '\"']\n};\n\nexport function evaluateKeyboardEvent(\n  ev: IKeyboardEvent,\n  applicationCursorMode: boolean,\n  isMac: boolean,\n  macOptionIsMeta: boolean\n): IKeyboardResult {\n  const result: IKeyboardResult = {\n    type: KeyboardResultType.SEND_KEY,\n    // Whether to cancel event propagation (NOTE: this may not be needed since the event is\n    // canceled at the end of keyDown\n    cancel: false,\n    // The new key even to emit\n    key: undefined\n  };\n  const modifiers = (ev.shiftKey ? 1 : 0) | (ev.altKey ? 2 : 0) | (ev.ctrlKey ? 4 : 0) | (ev.metaKey ? 8 : 0);\n  switch (ev.keyCode) {\n    case 0:\n      if (ev.key === 'UIKeyInputUpArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OA';\n        } else {\n          result.key = C0.ESC + '[A';\n        }\n      }\n      else if (ev.key === 'UIKeyInputLeftArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OD';\n        } else {\n          result.key = C0.ESC + '[D';\n        }\n      }\n      else if (ev.key === 'UIKeyInputRightArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OC';\n        } else {\n          result.key = C0.ESC + '[C';\n        }\n      }\n      else if (ev.key === 'UIKeyInputDownArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OB';\n        } else {\n          result.key = C0.ESC + '[B';\n        }\n      }\n      break;\n    case 8:\n      // backspace\n      if (ev.shiftKey) {\n        result.key = C0.BS; // ^H\n        break;\n      } else if (ev.altKey) {\n        result.key = C0.ESC + C0.DEL; // \\e ^?\n        break;\n      }\n      result.key = C0.DEL; // ^?\n      break;\n    case 9:\n      // tab\n      if (ev.shiftKey) {\n        result.key = C0.ESC + '[Z';\n        break;\n      }\n      result.key = C0.HT;\n      result.cancel = true;\n      break;\n    case 13:\n      // return/enter\n      result.key = ev.altKey ? C0.ESC + C0.CR : C0.CR;\n      result.cancel = true;\n      break;\n    case 27:\n      // escape\n      result.key = C0.ESC;\n      if (ev.altKey) {\n        result.key = C0.ESC + C0.ESC;\n      }\n      result.cancel = true;\n      break;\n    case 37:\n      // left-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'D';\n        // HACK: Make Alt + left-arrow behave like Ctrl + left-arrow: move one word backwards\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3D') {\n          result.key = C0.ESC + (isMac ? 'b' : '[1;5D');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OD';\n      } else {\n        result.key = C0.ESC + '[D';\n      }\n      break;\n    case 39:\n      // right-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'C';\n        // HACK: Make Alt + right-arrow behave like Ctrl + right-arrow: move one word forward\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3C') {\n          result.key = C0.ESC + (isMac ? 'f' : '[1;5C');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OC';\n      } else {\n        result.key = C0.ESC + '[C';\n      }\n      break;\n    case 38:\n      // up-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'A';\n        // HACK: Make Alt + up-arrow behave like Ctrl + up-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3A') {\n          result.key = C0.ESC + '[1;5A';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OA';\n      } else {\n        result.key = C0.ESC + '[A';\n      }\n      break;\n    case 40:\n      // down-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'B';\n        // HACK: Make Alt + down-arrow behave like Ctrl + down-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3B') {\n          result.key = C0.ESC + '[1;5B';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OB';\n      } else {\n        result.key = C0.ESC + '[B';\n      }\n      break;\n    case 45:\n      // insert\n      if (!ev.shiftKey && !ev.ctrlKey) {\n        // <Ctrl> or <Shift> + <Insert> are used to\n        // copy-paste on some systems.\n        result.key = C0.ESC + '[2~';\n      }\n      break;\n    case 46:\n      // delete\n      if (modifiers) {\n        result.key = C0.ESC + '[3;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[3~';\n      }\n      break;\n    case 36:\n      // home\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'H';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OH';\n      } else {\n        result.key = C0.ESC + '[H';\n      }\n      break;\n    case 35:\n      // end\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'F';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OF';\n      } else {\n        result.key = C0.ESC + '[F';\n      }\n      break;\n    case 33:\n      // page up\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_UP;\n      } else {\n        result.key = C0.ESC + '[5~';\n      }\n      break;\n    case 34:\n      // page down\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_DOWN;\n      } else {\n        result.key = C0.ESC + '[6~';\n      }\n      break;\n    case 112:\n      // F1-F12\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'P';\n      } else {\n        result.key = C0.ESC + 'OP';\n      }\n      break;\n    case 113:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'Q';\n      } else {\n        result.key = C0.ESC + 'OQ';\n      }\n      break;\n    case 114:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'R';\n      } else {\n        result.key = C0.ESC + 'OR';\n      }\n      break;\n    case 115:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'S';\n      } else {\n        result.key = C0.ESC + 'OS';\n      }\n      break;\n    case 116:\n      if (modifiers) {\n        result.key = C0.ESC + '[15;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[15~';\n      }\n      break;\n    case 117:\n      if (modifiers) {\n        result.key = C0.ESC + '[17;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[17~';\n      }\n      break;\n    case 118:\n      if (modifiers) {\n        result.key = C0.ESC + '[18;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[18~';\n      }\n      break;\n    case 119:\n      if (modifiers) {\n        result.key = C0.ESC + '[19;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[19~';\n      }\n      break;\n    case 120:\n      if (modifiers) {\n        result.key = C0.ESC + '[20;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[20~';\n      }\n      break;\n    case 121:\n      if (modifiers) {\n        result.key = C0.ESC + '[21;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[21~';\n      }\n      break;\n    case 122:\n      if (modifiers) {\n        result.key = C0.ESC + '[23;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[23~';\n      }\n      break;\n    case 123:\n      if (modifiers) {\n        result.key = C0.ESC + '[24;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[24~';\n      }\n      break;\n    default:\n      // a-z and space\n      if (ev.ctrlKey && !ev.shiftKey && !ev.altKey && !ev.metaKey) {\n        if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          result.key = String.fromCharCode(ev.keyCode - 64);\n        } else if (ev.keyCode === 32) {\n          result.key = C0.NUL;\n        } else if (ev.keyCode >= 51 && ev.keyCode <= 55) {\n          // escape, file sep, group sep, record sep, unit sep\n          result.key = String.fromCharCode(ev.keyCode - 51 + 27);\n        } else if (ev.keyCode === 56) {\n          result.key = C0.DEL;\n        } else if (ev.keyCode === 219) {\n          result.key = C0.ESC;\n        } else if (ev.keyCode === 220) {\n          result.key = C0.FS;\n        } else if (ev.keyCode === 221) {\n          result.key = C0.GS;\n        }\n      } else if ((!isMac || macOptionIsMeta) && ev.altKey && !ev.metaKey) {\n        // On macOS this is a third level shift when !macOptionIsMeta. Use <Esc> instead.\n        const keyMapping = KEYCODE_KEY_MAPPINGS[ev.keyCode];\n        const key = keyMapping?.[!ev.shiftKey ? 0 : 1];\n        if (key) {\n          result.key = C0.ESC + key;\n        } else if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          const keyCode = ev.ctrlKey ? ev.keyCode - 64 : ev.keyCode + 32;\n          result.key = C0.ESC + String.fromCharCode(keyCode);\n        }\n      } else if (isMac && !ev.altKey && !ev.ctrlKey && !ev.shiftKey && ev.metaKey) {\n        if (ev.keyCode === 65) { // cmd + a\n          result.type = KeyboardResultType.SELECT_ALL;\n        }\n      } else if (ev.key && !ev.ctrlKey && !ev.altKey && !ev.metaKey && ev.keyCode >= 48 && ev.key.length === 1) {\n        // Include only keys that that result in a _single_ character; don't include num lock, volume up, etc.\n        result.key = ev.key;\n      } else if (ev.key && ev.ctrlKey) {\n        if (ev.key === '_') { // ^_\n          result.key = C0.US;\n        }\n      }\n      break;\n  }\n\n  return result;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Polyfill - Convert UTF32 codepoint into JS string.\n * Note: The built-in String.fromCodePoint happens to be much slower\n *       due to additional sanity checks. We can avoid them since\n *       we always operate on legal UTF32 (granted by the input decoders)\n *       and use this faster version instead.\n */\nexport function stringFromCodePoint(codePoint: number): string {\n  if (codePoint > 0xFFFF) {\n    codePoint -= 0x10000;\n    return String.fromCharCode((codePoint >> 10) + 0xD800) + String.fromCharCode((codePoint % 0x400) + 0xDC00);\n  }\n  return String.fromCharCode(codePoint);\n}\n\n/**\n * Convert UTF32 char codes into JS string.\n * Basically the same as `stringFromCodePoint` but for multiple codepoints\n * in a loop (which is a lot faster).\n */\nexport function utf32ToString(data: Uint32Array, start: number = 0, end: number = data.length): string {\n  let result = '';\n  for (let i = start; i < end; ++i) {\n    let codepoint = data[i];\n    if (codepoint > 0xFFFF) {\n      // JS strings are encoded as UTF16, thus a non BMP codepoint gets converted into a surrogate pair\n      // conversion rules:\n      //  - subtract 0x10000 from code point, leaving a 20 bit number\n      //  - add high 10 bits to 0xD800  --> first surrogate\n      //  - add low 10 bits to 0xDC00   --> second surrogate\n      codepoint -= 0x10000;\n      result += String.fromCharCode((codepoint >> 10) + 0xD800) + String.fromCharCode((codepoint % 0x400) + 0xDC00);\n    } else {\n      result += String.fromCharCode(codepoint);\n    }\n  }\n  return result;\n}\n\n/**\n * StringToUtf32 - decodes UTF16 sequences into UTF32 codepoints.\n * To keep the decoder in line with JS strings it handles single surrogates as UCS2.\n */\nexport class StringToUtf32 {\n  private _interim: number = 0;\n\n  /**\n   * Clears interim and resets decoder to clean state.\n   */\n  public clear(): void {\n    this._interim = 0;\n  }\n\n  /**\n   * Decode JS string to UTF32 codepoints.\n   * The methods assumes stream input and will store partly transmitted\n   * surrogate pairs and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided input data does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: string, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let startPos = 0;\n\n    // handle leftover surrogate high\n    if (this._interim) {\n      const second = input.charCodeAt(startPos++);\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        target[size++] = (this._interim - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        // illegal codepoint (USC2 handling)\n        target[size++] = this._interim;\n        target[size++] = second;\n      }\n      this._interim = 0;\n    }\n\n    for (let i = startPos; i < length; ++i) {\n      const code = input.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          this._interim = code;\n          return size;\n        }\n        const second = input.charCodeAt(i);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          target[size++] = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          // illegal codepoint (USC2 handling)\n          target[size++] = code;\n          target[size++] = second;\n        }\n        continue;\n      }\n      if (code === 0xFEFF) {\n        // BOM\n        continue;\n      }\n      target[size++] = code;\n    }\n    return size;\n  }\n}\n\n/**\n * Utf8Decoder - decodes UTF8 byte sequences into UTF32 codepoints.\n */\nexport class Utf8ToUtf32 {\n  public interim: Uint8Array = new Uint8Array(3);\n\n  /**\n   * Clears interim bytes and resets decoder to clean state.\n   */\n  public clear(): void {\n    this.interim.fill(0);\n  }\n\n  /**\n   * Decodes UTF8 byte sequences in `input` to UTF32 codepoints in `target`.\n   * The methods assumes stream input and will store partly transmitted bytes\n   * and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided data chunk does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: Uint8Array, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let byte1: number;\n    let byte2: number;\n    let byte3: number;\n    let byte4: number;\n    let codepoint = 0;\n    let startPos = 0;\n\n    // handle leftover bytes\n    if (this.interim[0]) {\n      let discardInterim = false;\n      let cp = this.interim[0];\n      cp &= ((((cp & 0xE0) === 0xC0)) ? 0x1F : (((cp & 0xF0) === 0xE0)) ? 0x0F : 0x07);\n      let pos = 0;\n      let tmp: number;\n      while ((tmp = this.interim[++pos] & 0x3F) && pos < 4) {\n        cp <<= 6;\n        cp |= tmp;\n      }\n      // missing bytes - read ahead from input\n      const type = (((this.interim[0] & 0xE0) === 0xC0)) ? 2 : (((this.interim[0] & 0xF0) === 0xE0)) ? 3 : 4;\n      const missing = type - pos;\n      while (startPos < missing) {\n        if (startPos >= length) {\n          return 0;\n        }\n        tmp = input[startPos++];\n        if ((tmp & 0xC0) !== 0x80) {\n          // wrong continuation, discard interim bytes completely\n          startPos--;\n          discardInterim = true;\n          break;\n        } else {\n          // need to save so we can continue short inputs in next call\n          this.interim[pos++] = tmp;\n          cp <<= 6;\n          cp |= tmp & 0x3F;\n        }\n      }\n      if (!discardInterim) {\n        // final test is type dependent\n        if (type === 2) {\n          if (cp < 0x80) {\n            // wrong starter byte\n            startPos--;\n          } else {\n            target[size++] = cp;\n          }\n        } else if (type === 3) {\n          if (cp < 0x0800 || (cp >= 0xD800 && cp <= 0xDFFF) || cp === 0xFEFF) {\n            // illegal codepoint or BOM\n          } else {\n            target[size++] = cp;\n          }\n        } else {\n          if (cp < 0x010000 || cp > 0x10FFFF) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        }\n      }\n      this.interim.fill(0);\n    }\n\n    // loop through input\n    const fourStop = length - 4;\n    let i = startPos;\n    while (i < length) {\n      /**\n       * ASCII shortcut with loop unrolled to 4 consecutive ASCII chars.\n       * This is a compromise between speed gain for ASCII\n       * and penalty for non ASCII:\n       * For best ASCII performance the char should be stored directly into target,\n       * but even a single attempt to write to target and compare afterwards\n       * penalizes non ASCII really bad (-50%), thus we load the char into byteX first,\n       * which reduces ASCII performance by ~15%.\n       * This trial for ASCII reduces non ASCII performance by ~10% which seems acceptible\n       * compared to the gains.\n       * Note that this optimization only takes place for 4 consecutive ASCII chars,\n       * for any shorter it bails out. Worst case - all 4 bytes being read but\n       * thrown away due to the last being a non ASCII char (-10% performance).\n       */\n      while (i < fourStop\n        && !((byte1 = input[i]) & 0x80)\n        && !((byte2 = input[i + 1]) & 0x80)\n        && !((byte3 = input[i + 2]) & 0x80)\n        && !((byte4 = input[i + 3]) & 0x80))\n      {\n        target[size++] = byte1;\n        target[size++] = byte2;\n        target[size++] = byte3;\n        target[size++] = byte4;\n        i += 4;\n      }\n\n      // reread byte1\n      byte1 = input[i++];\n\n      // 1 byte\n      if (byte1 < 0x80) {\n        target[size++] = byte1;\n\n        // 2 bytes\n      } else if ((byte1 & 0xE0) === 0xC0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x1F) << 6 | (byte2 & 0x3F);\n        if (codepoint < 0x80) {\n          // wrong starter byte\n          i--;\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 3 bytes\n      } else if ((byte1 & 0xF0) === 0xE0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x0F) << 12 | (byte2 & 0x3F) << 6 | (byte3 & 0x3F);\n        if (codepoint < 0x0800 || (codepoint >= 0xD800 && codepoint <= 0xDFFF) || codepoint === 0xFEFF) {\n          // illegal codepoint or BOM, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 4 bytes\n      } else if ((byte1 & 0xF8) === 0xF0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          this.interim[2] = byte3;\n          return size;\n        }\n        byte4 = input[i++];\n        if ((byte4 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x07) << 18 | (byte2 & 0x3F) << 12 | (byte3 & 0x3F) << 6 | (byte4 & 0x3F);\n        if (codepoint < 0x010000 || codepoint > 0x10FFFF) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n      } else {\n        // illegal byte, just skip\n      }\n    }\n    return size;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeVersionProvider } from 'common/services/Services';\nimport { fill } from 'common/TypedArrayUtils';\n\ntype CharWidth = 0 | 1 | 2;\n\nconst BMP_COMBINING = [\n  [0x0300, 0x036F], [0x0483, 0x0486], [0x0488, 0x0489],\n  [0x0591, 0x05BD], [0x05BF, 0x05BF], [0x05C1, 0x05C2],\n  [0x05C4, 0x05C5], [0x05C7, 0x05C7], [0x0600, 0x0603],\n  [0x0610, 0x0615], [0x064B, 0x065E], [0x0670, 0x0670],\n  [0x06D6, 0x06E4], [0x06E7, 0x06E8], [0x06EA, 0x06ED],\n  [0x070F, 0x070F], [0x0711, 0x0711], [0x0730, 0x074A],\n  [0x07A6, 0x07B0], [0x07EB, 0x07F3], [0x0901, 0x0902],\n  [0x093C, 0x093C], [0x0941, 0x0948], [0x094D, 0x094D],\n  [0x0951, 0x0954], [0x0962, 0x0963], [0x0981, 0x0981],\n  [0x09BC, 0x09BC], [0x09C1, 0x09C4], [0x09CD, 0x09CD],\n  [0x09E2, 0x09E3], [0x0A01, 0x0A02], [0x0A3C, 0x0A3C],\n  [0x0A41, 0x0A42], [0x0A47, 0x0A48], [0x0A4B, 0x0A4D],\n  [0x0A70, 0x0A71], [0x0A81, 0x0A82], [0x0ABC, 0x0ABC],\n  [0x0AC1, 0x0AC5], [0x0AC7, 0x0AC8], [0x0ACD, 0x0ACD],\n  [0x0AE2, 0x0AE3], [0x0B01, 0x0B01], [0x0B3C, 0x0B3C],\n  [0x0B3F, 0x0B3F], [0x0B41, 0x0B43], [0x0B4D, 0x0B4D],\n  [0x0B56, 0x0B56], [0x0B82, 0x0B82], [0x0BC0, 0x0BC0],\n  [0x0BCD, 0x0BCD], [0x0C3E, 0x0C40], [0x0C46, 0x0C48],\n  [0x0C4A, 0x0C4D], [0x0C55, 0x0C56], [0x0CBC, 0x0CBC],\n  [0x0CBF, 0x0CBF], [0x0CC6, 0x0CC6], [0x0CCC, 0x0CCD],\n  [0x0CE2, 0x0CE3], [0x0D41, 0x0D43], [0x0D4D, 0x0D4D],\n  [0x0DCA, 0x0DCA], [0x0DD2, 0x0DD4], [0x0DD6, 0x0DD6],\n  [0x0E31, 0x0E31], [0x0E34, 0x0E3A], [0x0E47, 0x0E4E],\n  [0x0EB1, 0x0EB1], [0x0EB4, 0x0EB9], [0x0EBB, 0x0EBC],\n  [0x0EC8, 0x0ECD], [0x0F18, 0x0F19], [0x0F35, 0x0F35],\n  [0x0F37, 0x0F37], [0x0F39, 0x0F39], [0x0F71, 0x0F7E],\n  [0x0F80, 0x0F84], [0x0F86, 0x0F87], [0x0F90, 0x0F97],\n  [0x0F99, 0x0FBC], [0x0FC6, 0x0FC6], [0x102D, 0x1030],\n  [0x1032, 0x1032], [0x1036, 0x1037], [0x1039, 0x1039],\n  [0x1058, 0x1059], [0x1160, 0x11FF], [0x135F, 0x135F],\n  [0x1712, 0x1714], [0x1732, 0x1734], [0x1752, 0x1753],\n  [0x1772, 0x1773], [0x17B4, 0x17B5], [0x17B7, 0x17BD],\n  [0x17C6, 0x17C6], [0x17C9, 0x17D3], [0x17DD, 0x17DD],\n  [0x180B, 0x180D], [0x18A9, 0x18A9], [0x1920, 0x1922],\n  [0x1927, 0x1928], [0x1932, 0x1932], [0x1939, 0x193B],\n  [0x1A17, 0x1A18], [0x1B00, 0x1B03], [0x1B34, 0x1B34],\n  [0x1B36, 0x1B3A], [0x1B3C, 0x1B3C], [0x1B42, 0x1B42],\n  [0x1B6B, 0x1B73], [0x1DC0, 0x1DCA], [0x1DFE, 0x1DFF],\n  [0x200B, 0x200F], [0x202A, 0x202E], [0x2060, 0x2063],\n  [0x206A, 0x206F], [0x20D0, 0x20EF], [0x302A, 0x302F],\n  [0x3099, 0x309A], [0xA806, 0xA806], [0xA80B, 0xA80B],\n  [0xA825, 0xA826], [0xFB1E, 0xFB1E], [0xFE00, 0xFE0F],\n  [0xFE20, 0xFE23], [0xFEFF, 0xFEFF], [0xFFF9, 0xFFFB]\n];\nconst HIGH_COMBINING = [\n  [0x10A01, 0x10A03], [0x10A05, 0x10A06], [0x10A0C, 0x10A0F],\n  [0x10A38, 0x10A3A], [0x10A3F, 0x10A3F], [0x1D167, 0x1D169],\n  [0x1D173, 0x1D182], [0x1D185, 0x1D18B], [0x1D1AA, 0x1D1AD],\n  [0x1D242, 0x1D244], [0xE0001, 0xE0001], [0xE0020, 0xE007F],\n  [0xE0100, 0xE01EF]\n];\n\n// BMP lookup table, lazy initialized during first addon loading\nlet table: Uint8Array;\n\nfunction bisearch(ucs: number, data: number[][]): boolean {\n  let min = 0;\n  let max = data.length - 1;\n  let mid;\n  if (ucs < data[0][0] || ucs > data[max][1]) {\n    return false;\n  }\n  while (max >= min) {\n    mid = (min + max) >> 1;\n    if (ucs > data[mid][1]) {\n      min = mid + 1;\n    } else if (ucs < data[mid][0]) {\n      max = mid - 1;\n    } else {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport class UnicodeV6 implements IUnicodeVersionProvider {\n  public readonly version = '6';\n\n  constructor() {\n    // init lookup table once\n    if (!table) {\n      table = new Uint8Array(65536);\n      fill(table, 1);\n      table[0] = 0;\n      // control chars\n      fill(table, 0, 1, 32);\n      fill(table, 0, 0x7f, 0xa0);\n\n      // apply wide char rules first\n      // wide chars\n      fill(table, 2, 0x1100, 0x1160);\n      table[0x2329] = 2;\n      table[0x232a] = 2;\n      fill(table, 2, 0x2e80, 0xa4d0);\n      table[0x303f] = 1;  // wrongly in last line\n\n      fill(table, 2, 0xac00, 0xd7a4);\n      fill(table, 2, 0xf900, 0xfb00);\n      fill(table, 2, 0xfe10, 0xfe1a);\n      fill(table, 2, 0xfe30, 0xfe70);\n      fill(table, 2, 0xff00, 0xff61);\n      fill(table, 2, 0xffe0, 0xffe7);\n\n      // apply combining last to ensure we overwrite\n      // wrongly wide set chars:\n      //    the original algo evals combining first and falls\n      //    through to wide check so we simply do here the opposite\n      // combining 0\n      for (let r = 0; r < BMP_COMBINING.length; ++r) {\n        fill(table, 0, BMP_COMBINING[r][0], BMP_COMBINING[r][1] + 1);\n      }\n    }\n  }\n\n  public wcwidth(num: number): CharWidth {\n    if (num < 32) return 0;\n    if (num < 127) return 1;\n    if (num < 65536) return table[num] as CharWidth;\n    if (bisearch(num, HIGH_COMBINING)) return 0;\n    if ((num >= 0x20000 && num <= 0x2fffd) || (num >= 0x30000 && num <= 0x3fffd)) return 2;\n    return 1;\n  }\n}\n","\n/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ndeclare const setTimeout: (handler: () => void, timeout?: number) => void;\n\n/**\n * Safety watermark to avoid memory exhaustion and browser engine crash on fast data input.\n * Enable flow control to avoid this limit and make sure that your backend correctly\n * propagates this to the underlying pty. (see docs for further instructions)\n * Since this limit is meant as a safety parachute to prevent browser crashs,\n * it is set to a very high number. Typically xterm.js gets unresponsive with\n * a 100 times lower number (>500 kB).\n */\nconst DISCARD_WATERMARK = 50000000; // ~50 MB\n\n/**\n * The max number of ms to spend on writes before allowing the renderer to\n * catch up with a 0ms setTimeout. A value of < 33 to keep us close to\n * 30fps, and a value of < 16 to try to run at 60fps. Of course, the real FPS\n * depends on the time it takes for the renderer to draw the frame.\n */\nconst WRITE_TIMEOUT_MS = 12;\n\n/**\n * Threshold of max held chunks in the write buffer, that were already processed.\n * This is a tradeoff between extensive write buffer shifts (bad runtime) and high\n * memory consumption by data thats not used anymore.\n */\nconst WRITE_BUFFER_LENGTH_THRESHOLD = 50;\n\n// queueMicrotask polyfill for nodejs < v11\nconst qmt: (cb: () => void) => void = (typeof queueMicrotask === 'undefined')\n  ? (cb: () => void) => { Promise.resolve().then(cb); }\n  : queueMicrotask;\n\n\nexport class WriteBuffer {\n  private _writeBuffer: (string | Uint8Array)[] = [];\n  private _callbacks: ((() => void) | undefined)[] = [];\n  private _pendingData = 0;\n  private _bufferOffset = 0;\n  private _isSyncWriting = false;\n  private _syncCalls = 0;\n\n  constructor(private _action: (data: string | Uint8Array, promiseResult?: boolean) => void | Promise<boolean>) { }\n\n  /**\n   * @deprecated Unreliable, to be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    // stop writeSync recursions with maxSubsequentCalls argument\n    // This is dangerous to use as it will lose the current data chunk\n    // and return immediately.\n    if (maxSubsequentCalls !== undefined && this._syncCalls > maxSubsequentCalls) {\n      // comment next line if a whole loop block should only contain x `writeSync` calls\n      // (total flat vs. deep nested limit)\n      this._syncCalls = 0;\n      return;\n    }\n    // append chunk to buffer\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(undefined);\n\n    // increase recursion counter\n    this._syncCalls++;\n    // exit early if another writeSync loop is active\n    if (this._isSyncWriting) {\n      return;\n    }\n    this._isSyncWriting = true;\n\n    // force sync processing on pending data chunks to avoid in-band data scrambling\n    // does the same as innerWrite but without event loop\n    // we have to do it here as single loop steps to not corrupt loop subject\n    // by another writeSync call triggered from _action\n    let chunk: string | Uint8Array | undefined;\n    while (chunk = this._writeBuffer.shift()) {\n      this._action(chunk);\n      const cb = this._callbacks.shift();\n      if (cb) cb();\n    }\n    // reset to avoid reprocessing of chunks with scheduled innerWrite call\n    // stopping scheduled innerWrite by offset > length condition\n    this._pendingData = 0;\n    this._bufferOffset = 0x7FFFFFFF;\n\n    // allow another writeSync to loop\n    this._isSyncWriting = false;\n    this._syncCalls = 0;\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    if (this._pendingData > DISCARD_WATERMARK) {\n      throw new Error('write data discarded, use flow control to avoid losing data');\n    }\n\n    // schedule chunk processing for next event loop run\n    if (!this._writeBuffer.length) {\n      this._bufferOffset = 0;\n      setTimeout(() => this._innerWrite());\n    }\n\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(callback);\n  }\n\n  /**\n   * Inner write call, that enters the sliced chunk processing by timing.\n   *\n   * `lastTime` indicates, when the last _innerWrite call had started.\n   * It is used to aggregate async handler execution under a timeout constraint\n   * effectively lowering the redrawing needs, schematically:\n   *\n   *   macroTask _innerWrite:\n   *     if (Date.now() - (lastTime | 0) < WRITE_TIMEOUT_MS):\n   *        schedule microTask _innerWrite(lastTime)\n   *     else:\n   *        schedule macroTask _innerWrite(0)\n   *\n   *   overall execution order on task queues:\n   *\n   *   macrotasks:  [...]  -->  _innerWrite(0)  -->  [...]  -->  screenUpdate  -->  [...]\n   *         m  t:                    |\n   *         i  a:                  [...]\n   *         c  s:                    |\n   *         r  k:              while < timeout:\n   *         o  s:                _innerWrite(timeout)\n   *\n   * `promiseResult` depicts the promise resolve value of an async handler.\n   * This value gets carried forward through all saved stack states of the\n   * paused parser for proper continuation.\n   *\n   * Note, for pure sync code `lastTime` and `promiseResult` have no meaning.\n   */\n  protected _innerWrite(lastTime: number = 0, promiseResult: boolean = true): void {\n    const startTime = lastTime || Date.now();\n    while (this._writeBuffer.length > this._bufferOffset) {\n      const data = this._writeBuffer[this._bufferOffset];\n      const result = this._action(data, promiseResult);\n      if (result) {\n        /**\n         * If we get a promise as return value, we re-schedule the continuation\n         * as thenable on the promise and exit right away.\n         *\n         * The exit here means, that we block input processing at the current active chunk,\n         * the exact execution position within the chunk is preserved by the saved\n         * stack content in InputHandler and EscapeSequenceParser.\n         *\n         * Resuming happens automatically from that saved stack state.\n         * Also the resolved promise value is passed along the callstack to\n         * `EscapeSequenceParser.parse` to correctly resume the stopped handler loop.\n         *\n         * Exceptions on async handlers will be logged to console async, but do not interrupt\n         * the input processing (continues with next handler at the current input position).\n         */\n\n        /**\n         * If a promise takes long to resolve, we should schedule continuation behind setTimeout.\n         * This might already be too late, if our .then enters really late (executor + prev thens took very long).\n         * This cannot be solved here for the handler itself (it is the handlers responsibility to slice hard work),\n         * but we can at least schedule a screen update as we gain control.\n         */\n        const continuation: (r: boolean) => void = (r: boolean) => Date.now() - startTime >= WRITE_TIMEOUT_MS\n          ? setTimeout(() => this._innerWrite(0, r))\n          : this._innerWrite(startTime, r);\n\n        /**\n         * Optimization considerations:\n         * The continuation above favors FPS over throughput by eval'ing `startTime` on resolve.\n         * This might schedule too many screen updates with bad throughput drops (in case a slow\n         * resolving handler sliced its work properly behind setTimeout calls). We cannot spot\n         * this condition here, also the renderer has no way to spot nonsense updates either.\n         * FIXME: A proper fix for this would track the FPS at the renderer entry level separately.\n         *\n         * If favoring of FPS shows bad throughtput impact, use the following instead. It favors\n         * throughput by eval'ing `startTime` upfront pulling at least one more chunk into the\n         * current microtask queue (executed before setTimeout).\n         */\n        // const continuation: (r: boolean) => void = Date.now() - startTime >= WRITE_TIMEOUT_MS\n        //   ? r => setTimeout(() => this._innerWrite(0, r))\n        //   : r => this._innerWrite(startTime, r);\n\n        // Handle exceptions synchronously to current band position, idea:\n        // 1. spawn a single microtask which we allow to throw hard\n        // 2. spawn a promise immediately resolving to `true`\n        // (executed on the same queue, thus properly aligned before continuation happens)\n        result.catch(err => {\n          qmt(() => {throw err;});\n          return Promise.resolve(false);\n        }).then(continuation);\n        return;\n      }\n\n      const cb = this._callbacks[this._bufferOffset];\n      if (cb) cb();\n      this._bufferOffset++;\n      this._pendingData -= data.length;\n\n      if (Date.now() - startTime >= WRITE_TIMEOUT_MS) {\n        break;\n      }\n    }\n    if (this._writeBuffer.length > this._bufferOffset) {\n      // Allow renderer to catch up before processing the next batch\n      // trim already processed chunks if we are above threshold\n      if (this._bufferOffset > WRITE_BUFFER_LENGTH_THRESHOLD) {\n        this._writeBuffer = this._writeBuffer.slice(this._bufferOffset);\n        this._callbacks = this._callbacks.slice(this._bufferOffset);\n        this._bufferOffset = 0;\n      }\n      setTimeout(() => this._innerWrite());\n    } else {\n      this._writeBuffer.length = 0;\n      this._callbacks.length = 0;\n      this._pendingData = 0;\n      this._bufferOffset = 0;\n    }\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n\n// 'rgb:' rule - matching: r/g/b | rr/gg/bb | rrr/ggg/bbb | rrrr/gggg/bbbb (hex digits)\nconst RGB_REX = /^([\\da-f]{1})\\/([\\da-f]{1})\\/([\\da-f]{1})$|^([\\da-f]{2})\\/([\\da-f]{2})\\/([\\da-f]{2})$|^([\\da-f]{3})\\/([\\da-f]{3})\\/([\\da-f]{3})$|^([\\da-f]{4})\\/([\\da-f]{4})\\/([\\da-f]{4})$/;\n// '#...' rule - matching any hex digits\nconst HASH_REX = /^[\\da-f]+$/;\n\n/**\n * Parse color spec to RGB values (8 bit per channel).\n * See `man xparsecolor` for details about certain format specifications.\n *\n * Supported formats:\n * - rgb:<red>/<green>/<blue> with <red>, <green>, <blue> in h | hh | hhh | hhhh\n * - #RGB, #RRGGBB, #RRRGGGBBB, #RRRRGGGGBBBB\n *\n * All other formats like rgbi: or device-independent string specifications\n * with float numbering are not supported.\n */\nexport function parseColor(data: string): [number, number, number] | undefined {\n  if (!data) return;\n  // also handle uppercases\n  let low = data.toLowerCase();\n  if (low.indexOf('rgb:') === 0) {\n    // 'rgb:' specifier\n    low = low.slice(4);\n    const m = RGB_REX.exec(low);\n    if (m) {\n      const base = m[1] ? 15 : m[4] ? 255 : m[7] ? 4095 : 65535;\n      return [\n        Math.round(parseInt(m[1] || m[4] || m[7] || m[10], 16) / base * 255),\n        Math.round(parseInt(m[2] || m[5] || m[8] || m[11], 16) / base * 255),\n        Math.round(parseInt(m[3] || m[6] || m[9] || m[12], 16) / base * 255)\n      ];\n    }\n  } else if (low.indexOf('#') === 0) {\n    // '#' specifier\n    low = low.slice(1);\n    if (HASH_REX.exec(low) && [3, 6, 9, 12].includes(low.length)) {\n      const adv = low.length / 3;\n      const result: [number, number, number] = [0, 0, 0];\n      for (let i = 0; i < 3; ++i) {\n        const c = parseInt(low.slice(adv * i, adv * i + adv), 16);\n        result[i] = adv === 1 ? c << 4 : adv === 2 ? c : adv === 3 ? c >> 4 : c >> 8;\n      }\n      return result;\n    }\n  }\n\n  // Named colors are currently not supported due to the large addition to the xterm.js bundle size\n  // they would add. In order to support named colors, we would need some way of optionally loading\n  // additional payloads so startup/download time is not bloated (see #3530).\n}\n\n// pad hex output to requested bit width\nfunction pad(n: number, bits: number): string {\n  const s = n.toString(16);\n  const s2 = s.length < 2 ? '0' + s : s;\n  switch (bits) {\n    case 4:\n      return s[0];\n    case 8:\n      return s2;\n    case 12:\n      return (s2 + s2).slice(0, 3);\n    default:\n      return s2 + s2;\n  }\n}\n\n/**\n * Convert a given color to rgb:../../.. string of `bits` depth.\n */\nexport function toRgbString(color: [number, number, number], bits: number = 16): string {\n  const [r, g, b] = color;\n  return `rgb:${pad(r, bits)}/${pad(g, bits)}/${pad(b, bits)}`;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Internal states of EscapeSequenceParser.\n */\nexport const enum ParserState {\n  GROUND = 0,\n  ESCAPE = 1,\n  ESCAPE_INTERMEDIATE = 2,\n  CSI_ENTRY = 3,\n  CSI_PARAM = 4,\n  CSI_INTERMEDIATE = 5,\n  CSI_IGNORE = 6,\n  SOS_PM_APC_STRING = 7,\n  OSC_STRING = 8,\n  DCS_ENTRY = 9,\n  DCS_PARAM = 10,\n  DCS_IGNORE = 11,\n  DCS_INTERMEDIATE = 12,\n  DCS_PASSTHROUGH = 13\n}\n\n/**\n* Internal actions of EscapeSequenceParser.\n*/\nexport const enum ParserAction {\n  IGNORE = 0,\n  ERROR = 1,\n  PRINT = 2,\n  EXECUTE = 3,\n  OSC_START = 4,\n  OSC_PUT = 5,\n  OSC_END = 6,\n  CSI_DISPATCH = 7,\n  PARAM = 8,\n  COLLECT = 9,\n  ESC_DISPATCH = 10,\n  CLEAR = 11,\n  DCS_HOOK = 12,\n  DCS_PUT = 13,\n  DCS_UNHOOK = 14\n}\n\n/**\n * Internal states of OscParser.\n */\nexport const enum OscState {\n  START = 0,\n  ID = 1,\n  PAYLOAD = 2,\n  ABORT = 3\n}\n\n// payload limit for OSC and DCS\nexport const PAYLOAD_LIMIT = 10000000;\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\nimport { IDcsHandler, IParams, IHandlerCollection, IDcsParser, DcsFallbackHandlerType, ISubParserStackState } from 'common/parser/Types';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { Params } from 'common/parser/Params';\nimport { PAYLOAD_LIMIT } from 'common/parser/Constants';\n\nconst EMPTY_HANDLERS: IDcsHandler[] = [];\n\nexport class DcsParser implements IDcsParser {\n  private _handlers: IHandlerCollection<IDcsHandler> = Object.create(null);\n  private _active: IDcsHandler[] = EMPTY_HANDLERS;\n  private _ident: number = 0;\n  private _handlerFb: DcsFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public registerHandler(ident: number, handler: IDcsHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n\n  public setHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public reset(): void {\n    // force cleanup leftover handlers\n    if (this._active.length) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].unhook(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n\n  public hook(ident: number, params: IParams): void {\n    // always reset leftover handlers\n    this.reset();\n    this._ident = ident;\n    this._active = this._handlers[ident] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'HOOK', params);\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].hook(params);\n      }\n    }\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public unhook(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'UNHOOK', success);\n    } else {\n      let handlerResult: boolean | Promise<boolean> = false;\n      let j = this._active.length - 1;\n      let fallThrough = false;\n      if (this._stack.paused) {\n        j = this._stack.loopPosition - 1;\n        handlerResult = promiseResult;\n        fallThrough = this._stack.fallThrough;\n        this._stack.paused = false;\n      }\n      if (!fallThrough && handlerResult === false) {\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].unhook(success);\n          if (handlerResult === true) {\n            break;\n          } else if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = false;\n            return handlerResult;\n          }\n        }\n        j--;\n      }\n      // cleanup left over handlers (fallThrough for async)\n      for (; j >= 0; j--) {\n        handlerResult = this._active[j].unhook(false);\n        if (handlerResult instanceof Promise) {\n          this._stack.paused = true;\n          this._stack.loopPosition = j;\n          this._stack.fallThrough = true;\n          return handlerResult;\n        }\n      }\n    }\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n}\n\n// predefine empty params as [0] (ZDM)\nconst EMPTY_PARAMS = new Params();\nEMPTY_PARAMS.addParam(0);\n\n/**\n * Convenient class to create a DCS handler from a single callback function.\n * Note: The payload is currently limited to 50 MB (hardcoded).\n */\nexport class DcsHandler implements IDcsHandler {\n  private _data = '';\n  private _params: IParams = EMPTY_PARAMS;\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string, params: IParams) => boolean | Promise<boolean>) { }\n\n  public hook(params: IParams): void {\n    // since we need to preserve params until `unhook`, we have to clone it\n    // (only borrowed from parser and spans multiple parser states)\n    // perf optimization:\n    // clone only, if we have non empty params, otherwise stick with default\n    this._params = (params.length > 1 || params.params[0]) ? params.clone() : EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public unhook(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data, this._params);\n      if (ret instanceof Promise) {\n        // need to hold data and params until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._params = EMPTY_PARAMS;\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._params = EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IOscHandler, IHandlerCollection, CsiHandlerType, OscFallbackHandlerType, IOscParser, EscHandlerType, IDcsParser, DcsFallbackHandlerType, IFunctionIdentifier, ExecuteFallbackHandlerType, CsiFallbackHandlerType, EscFallbackHandlerType, PrintHandlerType, PrintFallbackHandlerType, ExecuteHandlerType, IParserStackState, ParserStackType, ResumableHandlersType } from 'common/parser/Types';\nimport { ParserState, ParserAction } from 'common/parser/Constants';\nimport { Disposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\nimport { fill } from 'common/TypedArrayUtils';\nimport { Params } from 'common/parser/Params';\nimport { OscParser } from 'common/parser/OscParser';\nimport { DcsParser } from 'common/parser/DcsParser';\n\n/**\n * Table values are generated like this:\n *    index:  currentState << TableValue.INDEX_STATE_SHIFT | charCode\n *    value:  action << TableValue.TRANSITION_ACTION_SHIFT | nextState\n */\nconst enum TableAccess {\n  TRANSITION_ACTION_SHIFT = 4,\n  TRANSITION_STATE_MASK = 15,\n  INDEX_STATE_SHIFT = 8\n}\n\n/**\n * Transition table for EscapeSequenceParser.\n */\nexport class TransitionTable {\n  public table: Uint8Array;\n\n  constructor(length: number) {\n    this.table = new Uint8Array(length);\n  }\n\n  /**\n   * Set default transition.\n   * @param action default action\n   * @param next default next state\n   */\n  public setDefault(action: ParserAction, next: ParserState): void {\n    fill(this.table, action << TableAccess.TRANSITION_ACTION_SHIFT | next);\n  }\n\n  /**\n   * Add a transition to the transition table.\n   * @param code input character code\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public add(code: number, state: ParserState, action: ParserAction, next: ParserState): void {\n    this.table[state << TableAccess.INDEX_STATE_SHIFT | code] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n  }\n\n  /**\n   * Add transitions for multiple input character codes.\n   * @param codes input character code array\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public addMany(codes: number[], state: ParserState, action: ParserAction, next: ParserState): void {\n    for (let i = 0; i < codes.length; i++) {\n      this.table[state << TableAccess.INDEX_STATE_SHIFT | codes[i]] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n    }\n  }\n}\n\n\n// Pseudo-character placeholder for printable non-ascii characters (unicode).\nconst NON_ASCII_PRINTABLE = 0xA0;\n\n\n/**\n * VT500 compatible transition table.\n * Taken from https://vt100.net/emu/dec_ansi_parser.\n */\nexport const VT500_TRANSITION_TABLE = (function (): TransitionTable {\n  const table: TransitionTable = new TransitionTable(4095);\n\n  // range macro for byte\n  const BYTE_VALUES = 256;\n  const blueprint = Array.apply(null, Array(BYTE_VALUES)).map((unused: any, i: number) => i);\n  const r = (start: number, end: number): number[] => blueprint.slice(start, end);\n\n  // Default definitions.\n  const PRINTABLES = r(0x20, 0x7f); // 0x20 (SP) included, 0x7F (DEL) excluded\n  const EXECUTABLES = r(0x00, 0x18);\n  EXECUTABLES.push(0x19);\n  EXECUTABLES.push.apply(EXECUTABLES, r(0x1c, 0x20));\n\n  const states: number[] = r(ParserState.GROUND, ParserState.DCS_PASSTHROUGH + 1);\n  let state: any;\n\n  // set default transition\n  table.setDefault(ParserAction.ERROR, ParserState.GROUND);\n  // printables\n  table.addMany(PRINTABLES, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  // global anywhere rules\n  for (state in states) {\n    table.addMany([0x18, 0x1a, 0x99, 0x9a], state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x80, 0x90), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x90, 0x98), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.add(0x9c, state, ParserAction.IGNORE, ParserState.GROUND); // ST as terminator\n    table.add(0x1b, state, ParserAction.CLEAR, ParserState.ESCAPE);  // ESC\n    table.add(0x9d, state, ParserAction.OSC_START, ParserState.OSC_STRING);  // OSC\n    table.addMany([0x98, 0x9e, 0x9f], state, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n    table.add(0x9b, state, ParserAction.CLEAR, ParserState.CSI_ENTRY);  // CSI\n    table.add(0x90, state, ParserAction.CLEAR, ParserState.DCS_ENTRY);  // DCS\n  }\n  // rules for executables and 7f\n  table.addMany(EXECUTABLES, ParserState.GROUND, ParserAction.EXECUTE, ParserState.GROUND);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE, ParserAction.EXECUTE, ParserState.ESCAPE);\n  table.add(0x7f, ParserState.ESCAPE, ParserAction.IGNORE, ParserState.ESCAPE);\n  table.addMany(EXECUTABLES, ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  table.addMany(EXECUTABLES, ParserState.CSI_ENTRY, ParserAction.EXECUTE, ParserState.CSI_ENTRY);\n  table.add(0x7f, ParserState.CSI_ENTRY, ParserAction.IGNORE, ParserState.CSI_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.CSI_PARAM, ParserAction.EXECUTE, ParserState.CSI_PARAM);\n  table.add(0x7f, ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_PARAM);\n  table.addMany(EXECUTABLES, ParserState.CSI_IGNORE, ParserAction.EXECUTE, ParserState.CSI_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.CSI_INTERMEDIATE, ParserAction.EXECUTE, ParserState.CSI_INTERMEDIATE);\n  table.add(0x7f, ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE_INTERMEDIATE, ParserAction.EXECUTE, ParserState.ESCAPE_INTERMEDIATE);\n  table.add(0x7f, ParserState.ESCAPE_INTERMEDIATE, ParserAction.IGNORE, ParserState.ESCAPE_INTERMEDIATE);\n  // osc\n  table.add(0x5d, ParserState.ESCAPE, ParserAction.OSC_START, ParserState.OSC_STRING);\n  table.addMany(PRINTABLES, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(0x7f, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.addMany([0x9c, 0x1b, 0x18, 0x1a, 0x07], ParserState.OSC_STRING, ParserAction.OSC_END, ParserState.GROUND);\n  table.addMany(r(0x1c, 0x20), ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  // sos/pm/apc does nothing\n  table.addMany([0x58, 0x5e, 0x5f], ParserState.ESCAPE, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(PRINTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(EXECUTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.add(0x9c, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.GROUND);\n  table.add(0x7f, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  // csi entries\n  table.add(0x5b, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.CSI_ENTRY);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_ENTRY, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_ENTRY, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_PARAM, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_PARAM, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x20, 0x40), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(0x7f, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_INTERMEDIATE, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_INTERMEDIATE, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_PARAM, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  // esc_intermediate\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE_INTERMEDIATE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x30, 0x7f), ParserState.ESCAPE_INTERMEDIATE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x50), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x51, 0x58), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany([0x59, 0x5a, 0x5c], ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x60, 0x7f), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  // dcs entry\n  table.add(0x50, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.DCS_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.add(0x7f, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_ENTRY, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_PARAM);\n  table.addMany(EXECUTABLES, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x80), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.add(0x7f, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_PARAM, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_PARAM, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.add(0x7f, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_INTERMEDIATE, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_INTERMEDIATE, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_PARAM, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_ENTRY, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(EXECUTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.addMany(PRINTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.add(0x7f, ParserState.DCS_PASSTHROUGH, ParserAction.IGNORE, ParserState.DCS_PASSTHROUGH);\n  table.addMany([0x1b, 0x9c, 0x18, 0x1a], ParserState.DCS_PASSTHROUGH, ParserAction.DCS_UNHOOK, ParserState.GROUND);\n  // special handling of unicode chars\n  table.add(NON_ASCII_PRINTABLE, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  table.add(NON_ASCII_PRINTABLE, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(NON_ASCII_PRINTABLE, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  return table;\n})();\n\n\n/**\n * EscapeSequenceParser.\n * This class implements the ANSI/DEC compatible parser described by\n * Paul Williams (https://vt100.net/emu/dec_ansi_parser).\n *\n * To implement custom ANSI compliant escape sequences it is not needed to\n * alter this parser, instead consider registering a custom handler.\n * For non ANSI compliant sequences change the transition table with\n * the optional `transitions` constructor argument and\n * reimplement the `parse` method.\n *\n * This parser is currently hardcoded to operate in ZDM (Zero Default Mode)\n * as suggested by the original parser, thus empty parameters are set to 0.\n * This this is not in line with the latest ECMA-48 specification\n * (ZDM was part of the early specs and got completely removed later on).\n *\n * Other than the original parser from vt100.net this parser supports\n * sub parameters in digital parameters separated by colons. Empty sub parameters\n * are set to -1 (no ZDM for sub parameters).\n *\n * About prefix and intermediate bytes:\n * This parser follows the assumptions of the vt100.net parser with these restrictions:\n * - only one prefix byte is allowed as first parameter byte, byte range 0x3c .. 0x3f\n * - max. two intermediates are respected, byte range 0x20 .. 0x2f\n * Note that this is not in line with ECMA-48 which does not limit either of those.\n * Furthermore ECMA-48 allows the prefix byte range at any param byte position. Currently\n * there are no known sequences that follow the broader definition of the specification.\n *\n * TODO: implement error recovery hook via error handler return values\n */\nexport class EscapeSequenceParser extends Disposable implements IEscapeSequenceParser {\n  public initialState: number;\n  public currentState: number;\n  public precedingCodepoint: number;\n\n  // buffers over several parse calls\n  protected _params: Params;\n  protected _collect: number;\n\n  // handler lookup containers\n  protected _printHandler: PrintHandlerType;\n  protected _executeHandlers: { [flag: number]: ExecuteHandlerType };\n  protected _csiHandlers: IHandlerCollection<CsiHandlerType>;\n  protected _escHandlers: IHandlerCollection<EscHandlerType>;\n  protected _oscParser: IOscParser;\n  protected _dcsParser: IDcsParser;\n  protected _errorHandler: (state: IParsingState) => IParsingState;\n\n  // fallback handlers\n  protected _printHandlerFb: PrintFallbackHandlerType;\n  protected _executeHandlerFb: ExecuteFallbackHandlerType;\n  protected _csiHandlerFb: CsiFallbackHandlerType;\n  protected _escHandlerFb: EscFallbackHandlerType;\n  protected _errorHandlerFb: (state: IParsingState) => IParsingState;\n\n  // parser stack save for async handler support\n  protected _parseStack: IParserStackState = {\n    state: ParserStackType.NONE,\n    handlers: [],\n    handlerPos: 0,\n    transition: 0,\n    chunkPos: 0\n  };\n\n  constructor(\n    protected readonly _transitions: TransitionTable = VT500_TRANSITION_TABLE\n  ) {\n    super();\n\n    this.initialState = ParserState.GROUND;\n    this.currentState = this.initialState;\n    this._params = new Params(); // defaults to 32 storable params/subparams\n    this._params.addParam(0);    // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n\n    // set default fallback handlers and handler lookup containers\n    this._printHandlerFb = (data, start, end): void => { };\n    this._executeHandlerFb = (code: number): void => { };\n    this._csiHandlerFb = (ident: number, params: IParams): void => { };\n    this._escHandlerFb = (ident: number): void => { };\n    this._errorHandlerFb = (state: IParsingState): IParsingState => state;\n    this._printHandler = this._printHandlerFb;\n    this._executeHandlers = Object.create(null);\n    this._csiHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this._oscParser = new OscParser();\n    this._dcsParser = new DcsParser();\n    this._errorHandler = this._errorHandlerFb;\n\n    // swallow 7bit ST (ESC+\\)\n    this.registerEscHandler({ final: '\\\\' }, () => true);\n  }\n\n  protected _identifier(id: IFunctionIdentifier, finalRange: number[] = [0x40, 0x7e]): number {\n    let res = 0;\n    if (id.prefix) {\n      if (id.prefix.length > 1) {\n        throw new Error('only one byte as prefix supported');\n      }\n      res = id.prefix.charCodeAt(0);\n      if (res && 0x3c > res || res > 0x3f) {\n        throw new Error('prefix must be in range 0x3c .. 0x3f');\n      }\n    }\n    if (id.intermediates) {\n      if (id.intermediates.length > 2) {\n        throw new Error('only two bytes as intermediates are supported');\n      }\n      for (let i = 0; i < id.intermediates.length; ++i) {\n        const intermediate = id.intermediates.charCodeAt(i);\n        if (0x20 > intermediate || intermediate > 0x2f) {\n          throw new Error('intermediate must be in range 0x20 .. 0x2f');\n        }\n        res <<= 8;\n        res |= intermediate;\n      }\n    }\n    if (id.final.length !== 1) {\n      throw new Error('final must be a single byte');\n    }\n    const finalCode = id.final.charCodeAt(0);\n    if (finalRange[0] > finalCode || finalCode > finalRange[1]) {\n      throw new Error(`final must be in range ${finalRange[0]} .. ${finalRange[1]}`);\n    }\n    res <<= 8;\n    res |= finalCode;\n\n    return res;\n  }\n\n  public identToString(ident: number): string {\n    const res: string[] = [];\n    while (ident) {\n      res.push(String.fromCharCode(ident & 0xFF));\n      ident >>= 8;\n    }\n    return res.reverse().join('');\n  }\n\n  public dispose(): void {\n    this._csiHandlers = Object.create(null);\n    this._executeHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this._oscParser.dispose();\n    this._dcsParser.dispose();\n  }\n\n  public setPrintHandler(handler: PrintHandlerType): void {\n    this._printHandler = handler;\n  }\n  public clearPrintHandler(): void {\n    this._printHandler = this._printHandlerFb;\n  }\n\n  public registerEscHandler(id: IFunctionIdentifier, handler: EscHandlerType): IDisposable {\n    const ident = this._identifier(id, [0x30, 0x7e]);\n    if (this._escHandlers[ident] === undefined) {\n      this._escHandlers[ident] = [];\n    }\n    const handlerList = this._escHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearEscHandler(id: IFunctionIdentifier): void {\n    if (this._escHandlers[this._identifier(id, [0x30, 0x7e])]) delete this._escHandlers[this._identifier(id, [0x30, 0x7e])];\n  }\n  public setEscHandlerFallback(handler: EscFallbackHandlerType): void {\n    this._escHandlerFb = handler;\n  }\n\n  public setExecuteHandler(flag: string, handler: ExecuteHandlerType): void {\n    this._executeHandlers[flag.charCodeAt(0)] = handler;\n  }\n  public clearExecuteHandler(flag: string): void {\n    if (this._executeHandlers[flag.charCodeAt(0)]) delete this._executeHandlers[flag.charCodeAt(0)];\n  }\n  public setExecuteHandlerFallback(handler: ExecuteFallbackHandlerType): void {\n    this._executeHandlerFb = handler;\n  }\n\n  public registerCsiHandler(id: IFunctionIdentifier, handler: CsiHandlerType): IDisposable {\n    const ident = this._identifier(id);\n    if (this._csiHandlers[ident] === undefined) {\n      this._csiHandlers[ident] = [];\n    }\n    const handlerList = this._csiHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearCsiHandler(id: IFunctionIdentifier): void {\n    if (this._csiHandlers[this._identifier(id)]) delete this._csiHandlers[this._identifier(id)];\n  }\n  public setCsiHandlerFallback(callback: (ident: number, params: IParams) => void): void {\n    this._csiHandlerFb = callback;\n  }\n\n  public registerDcsHandler(id: IFunctionIdentifier, handler: IDcsHandler): IDisposable {\n    return this._dcsParser.registerHandler(this._identifier(id), handler);\n  }\n  public clearDcsHandler(id: IFunctionIdentifier): void {\n    this._dcsParser.clearHandler(this._identifier(id));\n  }\n  public setDcsHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._dcsParser.setHandlerFallback(handler);\n  }\n\n  public registerOscHandler(ident: number, handler: IOscHandler): IDisposable {\n    return this._oscParser.registerHandler(ident, handler);\n  }\n  public clearOscHandler(ident: number): void {\n    this._oscParser.clearHandler(ident);\n  }\n  public setOscHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._oscParser.setHandlerFallback(handler);\n  }\n\n  public setErrorHandler(callback: (state: IParsingState) => IParsingState): void {\n    this._errorHandler = callback;\n  }\n  public clearErrorHandler(): void {\n    this._errorHandler = this._errorHandlerFb;\n  }\n\n  /**\n   * Reset parser to initial values.\n   *\n   * This can also be used to lift the improper continuation error condition\n   * when dealing with async handlers. Use this only as a last resort to silence\n   * that error when the terminal has no pending data to be processed. Note that\n   * the interrupted async handler might continue its work in the future messing\n   * up the terminal state even further.\n   */\n  public reset(): void {\n    this.currentState = this.initialState;\n    this._oscParser.reset();\n    this._dcsParser.reset();\n    this._params.reset();\n    this._params.addParam(0); // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n    // abort pending continuation from async handler\n    // Here the RESET type indicates, that the next parse call will\n    // ignore any saved stack, instead continues sync with next codepoint from GROUND\n    if (this._parseStack.state !== ParserStackType.NONE) {\n      this._parseStack.state = ParserStackType.RESET;\n      this._parseStack.handlers = []; // also release handlers ref\n    }\n  }\n\n  /**\n   * Async parse support.\n   */\n  protected _preserveStack(\n    state: ParserStackType,\n    handlers: ResumableHandlersType,\n    handlerPos: number,\n    transition: number,\n    chunkPos: number\n  ): void {\n    this._parseStack.state = state;\n    this._parseStack.handlers = handlers;\n    this._parseStack.handlerPos = handlerPos;\n    this._parseStack.transition = transition;\n    this._parseStack.chunkPos = chunkPos;\n  }\n\n  /**\n   * Parse UTF32 codepoints in `data` up to `length`.\n   *\n   * Note: For several actions with high data load the parsing is optimized\n   * by using local read ahead loops with hardcoded conditions to\n   * avoid costly table lookups. Make sure that any change of table values\n   * will be reflected in the loop conditions as well and vice versa.\n   * Affected states/actions:\n   * - GROUND:PRINT\n   * - CSI_PARAM:PARAM\n   * - DCS_PARAM:PARAM\n   * - OSC_STRING:OSC_PUT\n   * - DCS_PASSTHROUGH:DCS_PUT\n   *\n   * Note on asynchronous handler support:\n   * Any handler returning a promise will be treated as asynchronous.\n   * To keep the in-band blocking working for async handlers, `parse` pauses execution,\n   * creates a stack save and returns the promise to the caller.\n   * For proper continuation of the paused state it is important\n   * to await the promise resolving. On resolve the parse must be repeated\n   * with the same chunk of data and the resolved value in `promiseResult`\n   * until no promise is returned.\n   *\n   * Important: With only sync handlers defined, parsing is completely synchronous as well.\n   * As soon as an async handler is involved, synchronous parsing is not possible anymore.\n   *\n   * Boilerplate for proper parsing of multiple chunks with async handlers:\n   *\n   * ```typescript\n   * async function parseMultipleChunks(chunks: Uint32Array[]): Promise<void> {\n   *   for (const chunk of chunks) {\n   *     let result: void | Promise<boolean>;\n   *     let prev: boolean | undefined;\n   *     while (result = parser.parse(chunk, chunk.length, prev)) {\n   *       prev = await result;\n   *     }\n   *   }\n   *   // finished parsing all chunks...\n   * }\n   * ```\n   */\n  public parse(data: Uint32Array, length: number, promiseResult?: boolean): void | Promise<boolean> {\n    let code = 0;\n    let transition = 0;\n    let start = 0;\n    let handlerResult: void | boolean | Promise<boolean>;\n\n    // resume from async handler\n    if (this._parseStack.state) {\n      // allow sync parser reset even in continuation mode\n      // Note: can be used to recover parser from improper continuation error below\n      if (this._parseStack.state === ParserStackType.RESET) {\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1; // continue with next codepoint in GROUND\n      } else {\n        if (promiseResult === undefined || this._parseStack.state === ParserStackType.FAIL) {\n          /**\n           * Reject further parsing on improper continuation after pausing.\n           * This is a really bad condition with screwed up execution order and prolly messed up\n           * terminal state, therefore we exit hard with an exception and reject any further parsing.\n           *\n           * Note: With `Terminal.write` usage this exception should never occur, as the top level\n           * calls are guaranteed to handle async conditions properly. If you ever encounter this\n           * exception in your terminal integration it indicates, that you injected data chunks to\n           * `InputHandler.parse` or `EscapeSequenceParser.parse` synchronously without waiting for\n           * continuation of a running async handler.\n           *\n           * It is possible to get rid of this error by calling `reset`. But dont rely on that,\n           * as the pending async handler still might mess up the terminal later. Instead fix the faulty\n           * async handling, so this error will not be thrown anymore.\n           */\n          this._parseStack.state = ParserStackType.FAIL;\n          throw new Error('improper continuation due to previous async handler, giving up parsing');\n        }\n\n        // we have to resume the old handler loop if:\n        // - return value of the promise was `false`\n        // - handlers are not exhausted yet\n        const handlers = this._parseStack.handlers;\n        let handlerPos = this._parseStack.handlerPos - 1;\n        switch (this._parseStack.state) {\n          case ParserStackType.CSI:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as CsiHandlerType[])[handlerPos](this._params);\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.ESC:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as EscHandlerType[])[handlerPos]();\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.DCS:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n          case ParserStackType.OSC:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n        }\n        // cleanup before continuing with the main sync loop\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1;\n        this.precedingCodepoint = 0;\n        this.currentState = this._parseStack.transition & TableAccess.TRANSITION_STATE_MASK;\n      }\n    }\n\n    // continue with main sync loop\n\n    // process input string\n    for (let i = start; i < length; ++i) {\n      code = data[i];\n\n      // normal transition & action lookup\n      transition = this._transitions.table[this.currentState << TableAccess.INDEX_STATE_SHIFT | (code < 0xa0 ? code : NON_ASCII_PRINTABLE)];\n      switch (transition >> TableAccess.TRANSITION_ACTION_SHIFT) {\n        case ParserAction.PRINT:\n          // read ahead with loop unrolling\n          // Note: 0x20 (SP) is included, 0x7F (DEL) is excluded\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.EXECUTE:\n          if (this._executeHandlers[code]) this._executeHandlers[code]();\n          else this._executeHandlerFb(code);\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.IGNORE:\n          break;\n        case ParserAction.ERROR:\n          const inject: IParsingState = this._errorHandler(\n            {\n              position: i,\n              code,\n              currentState: this.currentState,\n              collect: this._collect,\n              params: this._params,\n              abort: false\n            });\n          if (inject.abort) return;\n          // inject values: currently not implemented\n          break;\n        case ParserAction.CSI_DISPATCH:\n          // Trigger CSI Handler\n          const handlers = this._csiHandlers[this._collect << 8 | code];\n          let j = handlers ? handlers.length - 1 : -1;\n          for (; j >= 0; j--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlers[j](this._params);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.CSI, handlers, j, transition, i);\n              return handlerResult;\n            }\n          }\n          if (j < 0) {\n            this._csiHandlerFb(this._collect << 8 | code, this._params);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.PARAM:\n          // inner loop: digits (0x30 - 0x39) and ; (0x3b) and : (0x3a)\n          do {\n            switch (code) {\n              case 0x3b:\n                this._params.addParam(0);  // ZDM\n                break;\n              case 0x3a:\n                this._params.addSubParam(-1);\n                break;\n              default:  // 0x30 - 0x39\n                this._params.addDigit(code - 48);\n            }\n          } while (++i < length && (code = data[i]) > 0x2f && code < 0x3c);\n          i--;\n          break;\n        case ParserAction.COLLECT:\n          this._collect <<= 8;\n          this._collect |= code;\n          break;\n        case ParserAction.ESC_DISPATCH:\n          const handlersEsc = this._escHandlers[this._collect << 8 | code];\n          let jj = handlersEsc ? handlersEsc.length - 1 : -1;\n          for (; jj >= 0; jj--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlersEsc[jj]();\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.ESC, handlersEsc, jj, transition, i);\n              return handlerResult;\n            }\n          }\n          if (jj < 0) {\n            this._escHandlerFb(this._collect << 8 | code);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.CLEAR:\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          break;\n        case ParserAction.DCS_HOOK:\n          this._dcsParser.hook(this._collect << 8 | code, this._params);\n          break;\n        case ParserAction.DCS_PUT:\n          // inner loop - exit DCS_PUT: 0x18, 0x1a, 0x1b, 0x7f, 0x80 - 0x9f\n          // unhook triggered by: 0x1b, 0x9c (success) and 0x18, 0x1a (abort)\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) === 0x18 || code === 0x1a || code === 0x1b || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._dcsParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.DCS_UNHOOK:\n          handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.DCS, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.OSC_START:\n          this._oscParser.start();\n          break;\n        case ParserAction.OSC_PUT:\n          // inner loop: 0x20 (SP) included, 0x7F (DEL) included\n          for (let j = i + 1; ; j++) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._oscParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.OSC_END:\n          handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.OSC, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n      }\n      this.currentState = transition & TableAccess.TRANSITION_STATE_MASK;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOscHandler, IHandlerCollection, OscFallbackHandlerType, IOscParser, ISubParserStackState } from 'common/parser/Types';\nimport { OscState, PAYLOAD_LIMIT } from 'common/parser/Constants';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { IDisposable } from 'common/Types';\n\nconst EMPTY_HANDLERS: IOscHandler[] = [];\n\nexport class OscParser implements IOscParser {\n  private _state = OscState.START;\n  private _active = EMPTY_HANDLERS;\n  private _id = -1;\n  private _handlers: IHandlerCollection<IOscHandler> = Object.create(null);\n  private _handlerFb: OscFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public registerHandler(ident: number, handler: IOscHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n  public setHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public reset(): void {\n    // force cleanup handlers if payload was already sent\n    if (this._state === OscState.PAYLOAD) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].end(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n\n  private _start(): void {\n    this._active = this._handlers[this._id] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'START');\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].start();\n      }\n    }\n  }\n\n  private _put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public start(): void {\n    // always reset leftover handlers\n    this.reset();\n    this._state = OscState.ID;\n  }\n\n  /**\n   * Put data to current OSC command.\n   * Expects the identifier of the OSC command in the form\n   * OSC id ; payload ST/BEL\n   * Payload chunks are not further processed and get\n   * directly passed to the handlers.\n   */\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._state === OscState.ABORT) {\n      return;\n    }\n    if (this._state === OscState.ID) {\n      while (start < end) {\n        const code = data[start++];\n        if (code === 0x3b) {\n          this._state = OscState.PAYLOAD;\n          this._start();\n          break;\n        }\n        if (code < 0x30 || 0x39 < code) {\n          this._state = OscState.ABORT;\n          return;\n        }\n        if (this._id === -1) {\n          this._id = 0;\n        }\n        this._id = this._id * 10 + code - 48;\n      }\n    }\n    if (this._state === OscState.PAYLOAD && end - start > 0) {\n      this._put(data, start, end);\n    }\n  }\n\n  /**\n   * Indicates end of an OSC command.\n   * Whether the OSC got aborted or finished normally\n   * is indicated by `success`.\n   */\n  public end(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (this._state === OscState.START) {\n      return;\n    }\n    // do nothing if command was faulty\n    if (this._state !== OscState.ABORT) {\n      // if we are still in ID state and get an early end\n      // means that the command has no payload thus we still have\n      // to announce START and send END right after\n      if (this._state === OscState.ID) {\n        this._start();\n      }\n\n      if (!this._active.length) {\n        this._handlerFb(this._id, 'END', success);\n      } else {\n        let handlerResult: boolean | Promise<boolean> = false;\n        let j = this._active.length - 1;\n        let fallThrough = false;\n        if (this._stack.paused) {\n          j = this._stack.loopPosition - 1;\n          handlerResult = promiseResult;\n          fallThrough = this._stack.fallThrough;\n          this._stack.paused = false;\n        }\n        if (!fallThrough && handlerResult === false) {\n          for (; j >= 0; j--) {\n            handlerResult = this._active[j].end(success);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._stack.paused = true;\n              this._stack.loopPosition = j;\n              this._stack.fallThrough = false;\n              return handlerResult;\n            }\n          }\n          j--;\n        }\n        // cleanup left over handlers\n        // we always have to call .end for proper cleanup,\n        // here we use `success` to indicate whether a handler should execute\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].end(false);\n          if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = true;\n            return handlerResult;\n          }\n        }\n      }\n\n    }\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n}\n\n/**\n * Convenient class to allow attaching string based handler functions\n * as OSC handlers.\n */\nexport class OscHandler implements IOscHandler {\n  private _data = '';\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string) => boolean | Promise<boolean>) { }\n\n  public start(): void {\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public end(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data);\n      if (ret instanceof Promise) {\n        // need to hold data until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IParams, ParamsArray } from 'common/parser/Types';\n\n// max value supported for a single param/subparam (clamped to positive int32 range)\nconst MAX_VALUE = 0x7FFFFFFF;\n// max allowed subparams for a single sequence (hardcoded limitation)\nconst MAX_SUBPARAMS = 256;\n\n/**\n * Params storage class.\n * This type is used by the parser to accumulate sequence parameters and sub parameters\n * and transmit them to the input handler actions.\n *\n * NOTES:\n *  - params object for action handlers is borrowed, use `.toArray` or `.clone` to get a copy\n *  - never read beyond `params.length - 1` (likely to contain arbitrary data)\n *  - `.getSubParams` returns a borrowed typed array, use `.getSubParamsAll` for cloned sub params\n *  - hardcoded limitations:\n *    - max. value for a single (sub) param is 2^31 - 1 (greater values are clamped to that)\n *    - max. 256 sub params possible\n *    - negative values are not allowed beside -1 (placeholder for default value)\n *\n * About ZDM (Zero Default Mode):\n * ZDM is not orchestrated by this class. If the parser is in ZDM,\n * it should add 0 for empty params, otherwise -1. This does not apply\n * to subparams, empty subparams should always be added with -1.\n */\nexport class Params implements IParams {\n  // params store and length\n  public params: Int32Array;\n  public length: number;\n\n  // sub params store and length\n  protected _subParams: Int32Array;\n  protected _subParamsLength: number;\n\n  // sub params offsets from param: param idx --> [start, end] offset\n  private _subParamsIdx: Uint16Array;\n  private _rejectDigits: boolean;\n  private _rejectSubDigits: boolean;\n  private _digitIsSub: boolean;\n\n  /**\n   * Create a `Params` type from JS array representation.\n   */\n  public static fromArray(values: ParamsArray): Params {\n    const params = new Params();\n    if (!values.length) {\n      return params;\n    }\n    // skip leading sub params\n    for (let i = (Array.isArray(values[0])) ? 1 : 0; i < values.length; ++i) {\n      const value = values[i];\n      if (Array.isArray(value)) {\n        for (let k = 0; k < value.length; ++k) {\n          params.addSubParam(value[k]);\n        }\n      } else {\n        params.addParam(value);\n      }\n    }\n    return params;\n  }\n\n  /**\n   * @param maxLength max length of storable parameters\n   * @param maxSubParamsLength max length of storable sub parameters\n   */\n  constructor(public maxLength: number = 32, public maxSubParamsLength: number = 32) {\n    if (maxSubParamsLength > MAX_SUBPARAMS) {\n      throw new Error('maxSubParamsLength must not be greater than 256');\n    }\n    this.params = new Int32Array(maxLength);\n    this.length = 0;\n    this._subParams = new Int32Array(maxSubParamsLength);\n    this._subParamsLength = 0;\n    this._subParamsIdx = new Uint16Array(maxLength);\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Clone object.\n   */\n  public clone(): Params {\n    const newParams = new Params(this.maxLength, this.maxSubParamsLength);\n    newParams.params.set(this.params);\n    newParams.length = this.length;\n    newParams._subParams.set(this._subParams);\n    newParams._subParamsLength = this._subParamsLength;\n    newParams._subParamsIdx.set(this._subParamsIdx);\n    newParams._rejectDigits = this._rejectDigits;\n    newParams._rejectSubDigits = this._rejectSubDigits;\n    newParams._digitIsSub = this._digitIsSub;\n    return newParams;\n  }\n\n  /**\n   * Get a JS array representation of the current parameters and sub parameters.\n   * The array is structured as follows:\n   *    sequence: \"1;2:3:4;5::6\"\n   *    array   : [1, 2, [3, 4], 5, [-1, 6]]\n   */\n  public toArray(): ParamsArray {\n    const res: ParamsArray = [];\n    for (let i = 0; i < this.length; ++i) {\n      res.push(this.params[i]);\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        res.push(Array.prototype.slice.call(this._subParams, start, end));\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Reset to initial empty state.\n   */\n  public reset(): void {\n    this.length = 0;\n    this._subParamsLength = 0;\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Add a parameter value.\n   * `Params` only stores up to `maxLength` parameters, any later\n   * parameter will be ignored.\n   * Note: VT devices only stored up to 16 values, xterm seems to\n   * store up to 30.\n   */\n  public addParam(value: number): void {\n    this._digitIsSub = false;\n    if (this.length >= this.maxLength) {\n      this._rejectDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParamsIdx[this.length] = this._subParamsLength << 8 | this._subParamsLength;\n    this.params[this.length++] = value > MAX_VALUE ? MAX_VALUE : value;\n  }\n\n  /**\n   * Add a sub parameter value.\n   * The sub parameter is automatically associated with the last parameter value.\n   * Thus it is not possible to add a subparameter without any parameter added yet.\n   * `Params` only stores up to `subParamsLength` sub parameters, any later\n   * sub parameter will be ignored.\n   */\n  public addSubParam(value: number): void {\n    this._digitIsSub = true;\n    if (!this.length) {\n      return;\n    }\n    if (this._rejectDigits || this._subParamsLength >= this.maxSubParamsLength) {\n      this._rejectSubDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParams[this._subParamsLength++] = value > MAX_VALUE ? MAX_VALUE : value;\n    this._subParamsIdx[this.length - 1]++;\n  }\n\n  /**\n   * Whether parameter at index `idx` has sub parameters.\n   */\n  public hasSubParams(idx: number): boolean {\n    return ((this._subParamsIdx[idx] & 0xFF) - (this._subParamsIdx[idx] >> 8) > 0);\n  }\n\n  /**\n   * Return sub parameters for parameter at index `idx`.\n   * Note: The values are borrowed, thus you need to copy\n   * the values if you need to hold them in nonlocal scope.\n   */\n  public getSubParams(idx: number): Int32Array | null {\n    const start = this._subParamsIdx[idx] >> 8;\n    const end = this._subParamsIdx[idx] & 0xFF;\n    if (end - start > 0) {\n      return this._subParams.subarray(start, end);\n    }\n    return null;\n  }\n\n  /**\n   * Return all sub parameters as {idx: subparams} mapping.\n   * Note: The values are not borrowed.\n   */\n  public getSubParamsAll(): {[idx: number]: Int32Array} {\n    const result: {[idx: number]: Int32Array} = {};\n    for (let i = 0; i < this.length; ++i) {\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        result[i] = this._subParams.slice(start, end);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Add a single digit value to current parameter.\n   * This is used by the parser to account digits on a char by char basis.\n   */\n  public addDigit(value: number): void {\n    let length;\n    if (this._rejectDigits\n      || !(length = this._digitIsSub ? this._subParamsLength : this.length)\n      || (this._digitIsSub && this._rejectSubDigits)\n    ) {\n      return;\n    }\n\n    const store = this._digitIsSub ? this._subParams : this.params;\n    const cur = store[length - 1];\n    store[length - 1] = ~cur ? Math.min(cur * 10 + value, MAX_VALUE) : value;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminalAddon, IDisposable, Terminal } from 'xterm';\n\nexport interface ILoadedAddon {\n  instance: ITerminalAddon;\n  dispose: () => void;\n  isDisposed: boolean;\n}\n\nexport class AddonManager implements IDisposable {\n  protected _addons: ILoadedAddon[] = [];\n\n  constructor() {\n  }\n\n  public dispose(): void {\n    for (let i = this._addons.length - 1; i >= 0; i--) {\n      this._addons[i].instance.dispose();\n    }\n  }\n\n  public loadAddon(terminal: Terminal, instance: ITerminalAddon): void {\n    const loadedAddon: ILoadedAddon = {\n      instance,\n      dispose: instance.dispose,\n      isDisposed: false\n    };\n    this._addons.push(loadedAddon);\n    instance.dispose = () => this._wrappedAddonDispose(loadedAddon);\n    instance.activate(terminal as any);\n  }\n\n  private _wrappedAddonDispose(loadedAddon: ILoadedAddon): void {\n    if (loadedAddon.isDisposed) {\n      // Do nothing if already disposed\n      return;\n    }\n    let index = -1;\n    for (let i = 0; i < this._addons.length; i++) {\n      if (this._addons[i] === loadedAddon) {\n        index = i;\n        break;\n      }\n    }\n    if (index === -1) {\n      throw new Error('Could not dispose an addon that has not been loaded');\n    }\n    loadedAddon.isDisposed = true;\n    loadedAddon.dispose.apply(loadedAddon.instance);\n    this._addons.splice(index, 1);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferLine as IBufferLineApi, IBufferCell as IBufferCellApi } from 'xterm';\nimport { IBuffer } from 'common/buffer/Types';\nimport { BufferLineApiView } from 'common/public/BufferLineApiView';\nimport { CellData } from 'common/buffer/CellData';\n\nexport class BufferApiView implements IBufferApi {\n  constructor(\n    private _buffer: IBuffer,\n    public readonly type: 'normal' | 'alternate'\n  ) { }\n\n  public init(buffer: IBuffer): BufferApiView {\n    this._buffer = buffer;\n    return this;\n  }\n\n  public get cursorY(): number { return this._buffer.y; }\n  public get cursorX(): number { return this._buffer.x; }\n  public get viewportY(): number { return this._buffer.ydisp; }\n  public get baseY(): number { return this._buffer.ybase; }\n  public get length(): number { return this._buffer.lines.length; }\n  public getLine(y: number): IBufferLineApi | undefined {\n    const line = this._buffer.lines.get(y);\n    if (!line) {\n      return undefined;\n    }\n    return new BufferLineApiView(line);\n  }\n  public getNullCell(): IBufferCellApi { return new CellData(); }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferLine, ICellData } from 'common/Types';\nimport { IBufferCell as IBufferCellApi, IBufferLine as IBufferLineApi } from 'xterm';\n\nexport class BufferLineApiView implements IBufferLineApi {\n  constructor(private _line: IBufferLine) { }\n\n  public get isWrapped(): boolean { return this._line.isWrapped; }\n  public get length(): number { return this._line.length; }\n  public getCell(x: number, cell?: IBufferCellApi): IBufferCellApi | undefined {\n    if (x < 0 || x >= this._line.length) {\n      return undefined;\n    }\n\n    if (cell) {\n      this._line.loadCell(x, cell as ICellData);\n      return cell;\n    }\n    return this._line.loadCell(x, new CellData());\n  }\n  public translateToString(trimRight?: boolean, startColumn?: number, endColumn?: number): string {\n    return this._line.translateToString(trimRight, startColumn, endColumn);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferNamespace as IBufferNamespaceApi } from 'xterm';\nimport { BufferApiView } from 'common/public/BufferApiView';\nimport { IEvent, EventEmitter } from 'common/EventEmitter';\nimport { ICoreTerminal } from 'common/Types';\n\nexport class BufferNamespaceApi implements IBufferNamespaceApi {\n  private _normal: BufferApiView;\n  private _alternate: BufferApiView;\n  private _onBufferChange = new EventEmitter<IBufferApi>();\n  public get onBufferChange(): IEvent<IBufferApi> { return this._onBufferChange.event; }\n\n  constructor(private _core: ICoreTerminal) {\n    this._normal = new BufferApiView(this._core.buffers.normal, 'normal');\n    this._alternate = new BufferApiView(this._core.buffers.alt, 'alternate');\n    this._core.buffers.onBufferActivate(() => this._onBufferChange.fire(this.active));\n  }\n  public get active(): IBufferApi {\n    if (this._core.buffers.active === this._core.buffers.normal) { return this.normal; }\n    if (this._core.buffers.active === this._core.buffers.alt) { return this.alternate; }\n    throw new Error('Active buffer is neither normal nor alternate');\n  }\n  public get normal(): IBufferApi {\n    return this._normal.init(this._core.buffers.normal);\n  }\n  public get alternate(): IBufferApi {\n    return this._alternate.init(this._core.buffers.alt);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParams } from 'common/parser/Types';\nimport { IDisposable, IFunctionIdentifier, IParser } from 'xterm';\nimport { ICoreTerminal } from 'common/Types';\n\nexport class ParserApi implements IParser {\n  constructor(private _core: ICoreTerminal) { }\n\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerCsiHandler(id, (params: IParams) => callback(params.toArray()));\n  }\n  public addCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerCsiHandler(id, callback);\n  }\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerDcsHandler(id, (data: string, params: IParams) => callback(data, params.toArray()));\n  }\n  public addDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerDcsHandler(id, callback);\n  }\n  public registerEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerEscHandler(id, handler);\n  }\n  public addEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this.registerEscHandler(id, handler);\n  }\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerOscHandler(ident, callback);\n  }\n  public addOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this.registerOscHandler(ident, callback);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreTerminal } from 'common/Types';\nimport { IUnicodeHandling, IUnicodeVersionProvider } from 'xterm';\n\nexport class UnicodeApi implements IUnicodeHandling {\n  constructor(private _core: ICoreTerminal) { }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._core.unicodeService.register(provider);\n  }\n\n  public get versions(): string[] {\n    return this._core.unicodeService.versions;\n  }\n\n  public get activeVersion(): string {\n    return this._core.unicodeService.activeVersion;\n  }\n\n  public set activeVersion(version: string) {\n    this._core.unicodeService.activeVersion = version;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { BufferSet } from 'common/buffer/BufferSet';\nimport { IBufferSet, IBuffer } from 'common/buffer/Types';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IAttributeData, IBufferLine, ScrollSource } from 'common/Types';\n\nexport const MINIMUM_COLS = 2; // Less than 2 can mess with wide chars\nexport const MINIMUM_ROWS = 1;\n\nexport class BufferService extends Disposable implements IBufferService {\n  public serviceBrand: any;\n\n  public cols: number;\n  public rows: number;\n  public buffers: IBufferSet;\n  /** Whether the user is scrolling (locks the scroll position) */\n  public isUserScrolling: boolean = false;\n\n  private _onResize = new EventEmitter<{ cols: number, rows: number }>();\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._onResize.event; }\n  private _onScroll = new EventEmitter<number>();\n  public get onScroll(): IEvent<number> { return this._onScroll.event; }\n\n  public get buffer(): IBuffer { return this.buffers.active; }\n\n  /** An IBufferline to clone/copy from for new blank lines */\n  private _cachedBlankLine: IBufferLine | undefined;\n\n  constructor(\n    @IOptionsService private _optionsService: IOptionsService\n  ) {\n    super();\n    this.cols = Math.max(_optionsService.rawOptions.cols || 0, MINIMUM_COLS);\n    this.rows = Math.max(_optionsService.rawOptions.rows || 0, MINIMUM_ROWS);\n    this.buffers = new BufferSet(_optionsService, this);\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this.buffers.dispose();\n  }\n\n  public resize(cols: number, rows: number): void {\n    this.cols = cols;\n    this.rows = rows;\n    this.buffers.resize(cols, rows);\n    this.buffers.setupTabStops(this.cols);\n    this._onResize.fire({ cols, rows });\n  }\n\n  public reset(): void {\n    this.buffers.reset();\n    this.isUserScrolling = false;\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    const buffer = this.buffer;\n\n    let newLine: IBufferLine | undefined;\n    newLine = this._cachedBlankLine;\n    if (!newLine || newLine.length !== this.cols || newLine.getFg(0) !== eraseAttr.fg || newLine.getBg(0) !== eraseAttr.bg) {\n      newLine = buffer.getBlankLine(eraseAttr, isWrapped);\n      this._cachedBlankLine = newLine;\n    }\n    newLine.isWrapped = isWrapped;\n\n    const topRow = buffer.ybase + buffer.scrollTop;\n    const bottomRow = buffer.ybase + buffer.scrollBottom;\n\n    if (buffer.scrollTop === 0) {\n      // Determine whether the buffer is going to be trimmed after insertion.\n      const willBufferBeTrimmed = buffer.lines.isFull;\n\n      // Insert the line using the fastest method\n      if (bottomRow === buffer.lines.length - 1) {\n        if (willBufferBeTrimmed) {\n          buffer.lines.recycle().copyFrom(newLine);\n        } else {\n          buffer.lines.push(newLine.clone());\n        }\n      } else {\n        buffer.lines.splice(bottomRow + 1, 0, newLine.clone());\n      }\n\n      // Only adjust ybase and ydisp when the buffer is not trimmed\n      if (!willBufferBeTrimmed) {\n        buffer.ybase++;\n        // Only scroll the ydisp with ybase if the user has not scrolled up\n        if (!this.isUserScrolling) {\n          buffer.ydisp++;\n        }\n      } else {\n        // When the buffer is full and the user has scrolled up, keep the text\n        // stable unless ydisp is right at the top\n        if (this.isUserScrolling) {\n          buffer.ydisp = Math.max(buffer.ydisp - 1, 0);\n        }\n      }\n    } else {\n      // scrollTop is non-zero which means no line will be going to the\n      // scrollback, instead we can just shift them in-place.\n      const scrollRegionHeight = bottomRow - topRow + 1 /* as it's zero-based */;\n      buffer.lines.shiftElements(topRow + 1, scrollRegionHeight - 1, -1);\n      buffer.lines.set(bottomRow, newLine.clone());\n    }\n\n    // Move the viewport to the bottom of the buffer unless the user is\n    // scrolling.\n    if (!this.isUserScrolling) {\n      buffer.ydisp = buffer.ybase;\n    }\n\n    this._onScroll.fire(buffer.ydisp);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    const buffer = this.buffer;\n    if (disp < 0) {\n      if (buffer.ydisp === 0) {\n        return;\n      }\n      this.isUserScrolling = true;\n    } else if (disp + buffer.ydisp >= buffer.ybase) {\n      this.isUserScrolling = false;\n    }\n\n    const oldYdisp = buffer.ydisp;\n    buffer.ydisp = Math.max(Math.min(buffer.ydisp + disp, buffer.ybase), 0);\n\n    // No change occurred, don't trigger scroll/refresh\n    if (oldYdisp === buffer.ydisp) {\n      return;\n    }\n\n    if (!suppressScrollEvent) {\n      this._onScroll.fire(buffer.ydisp);\n    }\n  }\n\n  /**\n   * Scroll the display of the terminal by a number of pages.\n   * @param pageCount The number of pages to scroll (negative scrolls up).\n   */\n  public scrollPages(pageCount: number): void {\n    this.scrollLines(pageCount * (this.rows - 1));\n  }\n\n  /**\n   * Scrolls the display of the terminal to the top.\n   */\n  public scrollToTop(): void {\n    this.scrollLines(-this.buffer.ydisp);\n  }\n\n  /**\n   * Scrolls the display of the terminal to the bottom.\n   */\n  public scrollToBottom(): void {\n    this.scrollLines(this.buffer.ybase - this.buffer.ydisp);\n  }\n\n  public scrollToLine(line: number): void {\n    const scrollAmount = line - this.buffer.ydisp;\n    if (scrollAmount !== 0) {\n      this.scrollLines(scrollAmount);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharsetService } from 'common/services/Services';\nimport { ICharset } from 'common/Types';\n\nexport class CharsetService implements ICharsetService {\n  public serviceBrand: any;\n\n  public charset: ICharset | undefined;\n  public glevel: number = 0;\n\n  private _charsets: (ICharset | undefined)[] = [];\n\n  public reset(): void {\n    this.charset = undefined;\n    this._charsets = [];\n    this.glevel = 0;\n  }\n\n  public setgLevel(g: number): void {\n    this.glevel = g;\n    this.charset = this._charsets[g];\n  }\n\n  public setgCharset(g: number, charset: ICharset | undefined): void {\n    this._charsets[g] = charset;\n    if (this.glevel === g) {\n      this.charset = charset;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, ICoreService, ICoreMouseService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { ICoreMouseProtocol, ICoreMouseEvent, CoreMouseEncoding, CoreMouseEventType, CoreMouseButton, CoreMouseAction } from 'common/Types';\n\n/**\n * Supported default protocols.\n */\nconst DEFAULT_PROTOCOLS: {[key: string]: ICoreMouseProtocol} = {\n  /**\n   * NONE\n   * Events: none\n   * Modifiers: none\n   */\n  NONE: {\n    events: CoreMouseEventType.NONE,\n    restrict: () => false\n  },\n  /**\n   * X10\n   * Events: mousedown\n   * Modifiers: none\n   */\n  X10: {\n    events: CoreMouseEventType.DOWN,\n    restrict: (e: ICoreMouseEvent) => {\n      // no wheel, no move, no up\n      if (e.button === CoreMouseButton.WHEEL || e.action !== CoreMouseAction.DOWN) {\n        return false;\n      }\n      // no modifiers\n      e.ctrl = false;\n      e.alt = false;\n      e.shift = false;\n      return true;\n    }\n  },\n  /**\n   * VT200\n   * Events: mousedown / mouseup / wheel\n   * Modifiers: all\n   */\n  VT200: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move\n      if (e.action === CoreMouseAction.MOVE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * DRAG\n   * Events: mousedown / mouseup / wheel / mousedrag\n   * Modifiers: all\n   */\n  DRAG: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL | CoreMouseEventType.DRAG,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move without button\n      if (e.action === CoreMouseAction.MOVE && e.button === CoreMouseButton.NONE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * ANY\n   * Events: all mouse related events\n   * Modifiers: all\n   */\n  ANY: {\n    events:\n      CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL\n      | CoreMouseEventType.DRAG | CoreMouseEventType.MOVE,\n    restrict: (e: ICoreMouseEvent) => true\n  }\n};\n\nconst enum Modifiers {\n  SHIFT = 4,\n  ALT = 8,\n  CTRL = 16\n}\n\n// helper for default encoders to generate the event code.\nfunction eventCode(e: ICoreMouseEvent, isSGR: boolean): number {\n  let code = (e.ctrl ? Modifiers.CTRL : 0) | (e.shift ? Modifiers.SHIFT : 0) | (e.alt ? Modifiers.ALT : 0);\n  if (e.button === CoreMouseButton.WHEEL) {\n    code |= 64;\n    code |= e.action;\n  } else {\n    code |= e.button & 3;\n    if (e.button & 4) {\n      code |= 64;\n    }\n    if (e.button & 8) {\n      code |= 128;\n    }\n    if (e.action === CoreMouseAction.MOVE) {\n      code |= CoreMouseAction.MOVE;\n    } else if (e.action === CoreMouseAction.UP && !isSGR) {\n      // special case - only SGR can report button on release\n      // all others have to go with NONE\n      code |= CoreMouseButton.NONE;\n    }\n  }\n  return code;\n}\n\nconst S = String.fromCharCode;\n\n/**\n * Supported default encodings.\n */\nconst DEFAULT_ENCODINGS: {[key: string]: CoreMouseEncoding} = {\n  /**\n   * DEFAULT - CSI M Pb Px Py\n   * Single byte encoding for coords and event code.\n   * Can encode values up to 223 (1-based).\n   */\n  DEFAULT: (e: ICoreMouseEvent) => {\n    const params = [eventCode(e, false) + 32, e.col + 32, e.row + 32];\n    // supress mouse report if we exceed addressible range\n    // Note this is handled differently by emulators\n    // - xterm:         sends 0;0 coords instead\n    // - vte, konsole:  no report\n    if (params[0] > 255 || params[1] > 255 || params[2] > 255) {\n      return '';\n    }\n    return `\\x1b[M${S(params[0])}${S(params[1])}${S(params[2])}`;\n  },\n  /**\n   * SGR - CSI < Pb ; Px ; Py M|m\n   * No encoding limitation.\n   * Can report button on release and works with a well formed sequence.\n   */\n  SGR: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.col};${e.row}${final}`;\n  }\n};\n\n/**\n * CoreMouseService\n *\n * Provides mouse tracking reports with different protocols and encodings.\n *  - protocols: NONE (default), X10, VT200, DRAG, ANY\n *  - encodings: DEFAULT, SGR (UTF8, URXVT removed in #2507)\n *\n * Custom protocols/encodings can be added by `addProtocol` / `addEncoding`.\n * To activate a protocol/encoding, set `activeProtocol` / `activeEncoding`.\n * Switching a protocol will send a notification event `onProtocolChange`\n * with a list of needed events to track.\n *\n * The service handles the mouse tracking state and decides whether to send\n * a tracking report to the backend based on protocol and encoding limitations.\n * To send a mouse event call `triggerMouseEvent`.\n */\nexport class CoreMouseService implements ICoreMouseService {\n  private _protocols: {[name: string]: ICoreMouseProtocol} = {};\n  private _encodings: {[name: string]: CoreMouseEncoding} = {};\n  private _activeProtocol: string = '';\n  private _activeEncoding: string = '';\n  private _onProtocolChange = new EventEmitter<CoreMouseEventType>();\n  private _lastEvent: ICoreMouseEvent | null = null;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService\n  ) {\n    // register default protocols and encodings\n    for (const name of Object.keys(DEFAULT_PROTOCOLS)) this.addProtocol(name, DEFAULT_PROTOCOLS[name]);\n    for (const name of Object.keys(DEFAULT_ENCODINGS)) this.addEncoding(name, DEFAULT_ENCODINGS[name]);\n    // call reset to set defaults\n    this.reset();\n  }\n\n  public addProtocol(name: string, protocol: ICoreMouseProtocol): void {\n    this._protocols[name] = protocol;\n  }\n\n  public addEncoding(name: string, encoding: CoreMouseEncoding): void {\n    this._encodings[name] = encoding;\n  }\n\n  public get activeProtocol(): string {\n    return this._activeProtocol;\n  }\n\n  public get areMouseEventsActive(): boolean {\n    return this._protocols[this._activeProtocol].events !== 0;\n  }\n\n  public set activeProtocol(name: string) {\n    if (!this._protocols[name]) {\n      throw new Error(`unknown protocol \"${name}\"`);\n    }\n    this._activeProtocol = name;\n    this._onProtocolChange.fire(this._protocols[name].events);\n  }\n\n  public get activeEncoding(): string {\n    return this._activeEncoding;\n  }\n\n  public set activeEncoding(name: string) {\n    if (!this._encodings[name]) {\n      throw new Error(`unknown encoding \"${name}\"`);\n    }\n    this._activeEncoding = name;\n  }\n\n  public reset(): void {\n    this.activeProtocol = 'NONE';\n    this.activeEncoding = 'DEFAULT';\n    this._lastEvent = null;\n  }\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  public get onProtocolChange(): IEvent<CoreMouseEventType> {\n    return this._onProtocolChange.event;\n  }\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  public triggerMouseEvent(e: ICoreMouseEvent): boolean {\n    // range check for col/row\n    if (e.col < 0 || e.col >= this._bufferService.cols\n        || e.row < 0 || e.row >= this._bufferService.rows) {\n      return false;\n    }\n\n    // filter nonsense combinations of button + action\n    if (e.button === CoreMouseButton.WHEEL && e.action === CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button === CoreMouseButton.NONE && e.action !== CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button !== CoreMouseButton.WHEEL && (e.action === CoreMouseAction.LEFT || e.action === CoreMouseAction.RIGHT)) {\n      return false;\n    }\n\n    // report 1-based coords\n    e.col++;\n    e.row++;\n\n    // debounce move at grid level\n    if (e.action === CoreMouseAction.MOVE && this._lastEvent && this._compareEvents(this._lastEvent, e)) {\n      return false;\n    }\n\n    // apply protocol restrictions\n    if (!this._protocols[this._activeProtocol].restrict(e)) {\n      return false;\n    }\n\n    // encode report and send\n    const report = this._encodings[this._activeEncoding](e);\n    if (report) {\n      // always send DEFAULT as binary data\n      if (this._activeEncoding === 'DEFAULT') {\n        this._coreService.triggerBinaryEvent(report);\n      } else {\n        this._coreService.triggerDataEvent(report, true);\n      }\n    }\n\n    this._lastEvent = e;\n\n    return true;\n  }\n\n  public explainEvents(events: CoreMouseEventType): {[event: string]: boolean} {\n    return {\n      down: !!(events & CoreMouseEventType.DOWN),\n      up: !!(events & CoreMouseEventType.UP),\n      drag: !!(events & CoreMouseEventType.DRAG),\n      move: !!(events & CoreMouseEventType.MOVE),\n      wheel: !!(events & CoreMouseEventType.WHEEL)\n    };\n  }\n\n  private _compareEvents(e1: ICoreMouseEvent, e2: ICoreMouseEvent): boolean {\n    if (e1.col !== e2.col) return false;\n    if (e1.row !== e2.row) return false;\n    if (e1.button !== e2.button) return false;\n    if (e1.action !== e2.action) return false;\n    if (e1.ctrl !== e2.ctrl) return false;\n    if (e1.alt !== e2.alt) return false;\n    if (e1.shift !== e2.shift) return false;\n    return true;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreService, ILogService, IOptionsService, IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IDecPrivateModes, IModes } from 'common/Types';\nimport { clone } from 'common/Clone';\nimport { Disposable } from 'common/Lifecycle';\n\nconst DEFAULT_MODES: IModes = Object.freeze({\n  insertMode: false\n});\n\nconst DEFAULT_DEC_PRIVATE_MODES: IDecPrivateModes = Object.freeze({\n  applicationCursorKeys: false,\n  applicationKeypad: false,\n  bracketedPasteMode: false,\n  origin: false,\n  reverseWraparound: false,\n  sendFocus: false,\n  wraparound: true // defaults: xterm - true, vt100 - false\n});\n\nexport class CoreService extends Disposable implements ICoreService {\n  public serviceBrand: any;\n\n  public isCursorInitialized: boolean = false;\n  public isCursorHidden: boolean = false;\n  public modes: IModes;\n  public decPrivateModes: IDecPrivateModes;\n\n  // Circular dependency, this must be unset or memory will leak after Terminal.dispose\n  private _scrollToBottom: (() => void) | undefined;\n\n  private _onData = this.register(new EventEmitter<string>());\n  public get onData(): IEvent<string> { return this._onData.event; }\n  private _onUserInput = this.register(new EventEmitter<void>());\n  public get onUserInput(): IEvent<void> { return this._onUserInput.event; }\n  private _onBinary = this.register(new EventEmitter<string>());\n  public get onBinary(): IEvent<string> { return this._onBinary.event; }\n\n  constructor(\n    // TODO: Move this into a service\n    scrollToBottom: () => void,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ILogService private readonly _logService: ILogService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._scrollToBottom = scrollToBottom;\n    this.register({ dispose: () => this._scrollToBottom = undefined });\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public reset(): void {\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public triggerDataEvent(data: string, wasUserInput: boolean = false): void {\n    // Prevents all events to pty process if stdin is disabled\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n\n    // Input is being sent to the terminal, the terminal should focus the prompt.\n    const buffer = this._bufferService.buffer;\n    if (buffer.ybase !== buffer.ydisp) {\n      this._scrollToBottom!();\n    }\n\n    // Fire onUserInput so listeners can react as well (eg. clear selection)\n    if (wasUserInput) {\n      this._onUserInput.fire();\n    }\n\n    // Fire onData API\n    this._logService.debug(`sending data \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onData.fire(data);\n  }\n\n  public triggerBinaryEvent(data: string): void {\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n    this._logService.debug(`sending binary \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onBinary.fire(data);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService, IDirtyRowService } from 'common/services/Services';\n\nexport class DirtyRowService implements IDirtyRowService {\n  public serviceBrand: any;\n\n  private _start!: number;\n  private _end!: number;\n\n  public get start(): number { return this._start; }\n  public get end(): number { return this._end; }\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    this.clearRange();\n  }\n\n  public clearRange(): void {\n    this._start = this._bufferService.buffer.y;\n    this._end = this._bufferService.buffer.y;\n  }\n\n  public markDirty(y: number): void {\n    if (y < this._start) {\n      this._start = y;\n    } else if (y > this._end) {\n      this._end = y;\n    }\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    if (y1 > y2) {\n      const temp = y1;\n      y1 = y2;\n      y2 = temp;\n    }\n    if (y1 < this._start) {\n      this._start = y1;\n    }\n    if (y2 > this._end) {\n      this._end = y2;\n    }\n  }\n\n  public markAllDirty(): void {\n    this.markRangeDirty(0, this._bufferService.rows - 1);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInstantiationService, IServiceIdentifier } from 'common/services/Services';\nimport { getServiceDependencies } from 'common/services/ServiceRegistry';\n\nexport class ServiceCollection {\n\n  private _entries = new Map<IServiceIdentifier<any>, any>();\n\n  constructor(...entries: [IServiceIdentifier<any>, any][]) {\n    for (const [id, service] of entries) {\n      this.set(id, service);\n    }\n  }\n\n  public set<T>(id: IServiceIdentifier<T>, instance: T): T {\n    const result = this._entries.get(id);\n    this._entries.set(id, instance);\n    return result;\n  }\n\n  public forEach(callback: (id: IServiceIdentifier<any>, instance: any) => any): void {\n    this._entries.forEach((value, key) => callback(key, value));\n  }\n\n  public has(id: IServiceIdentifier<any>): boolean {\n    return this._entries.has(id);\n  }\n\n  public get<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._entries.get(id);\n  }\n}\n\nexport class InstantiationService implements IInstantiationService {\n  public serviceBrand: undefined;\n\n  private readonly _services: ServiceCollection = new ServiceCollection();\n\n  constructor() {\n    this._services.set(IInstantiationService, this);\n  }\n\n  public setService<T>(id: IServiceIdentifier<T>, instance: T): void {\n    this._services.set(id, instance);\n  }\n\n  public getService<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._services.get(id);\n  }\n\n  public createInstance<T>(ctor: any, ...args: any[]): T {\n    const serviceDependencies = getServiceDependencies(ctor).sort((a, b) => a.index - b.index);\n\n    const serviceArgs: any[] = [];\n    for (const dependency of serviceDependencies) {\n      const service = this._services.get(dependency.id);\n      if (!service) {\n        throw new Error(`[createInstance] ${ctor.name} depends on UNKNOWN service ${dependency.id}.`);\n      }\n      serviceArgs.push(service);\n    }\n\n    const firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : args.length;\n\n    // check for argument mismatches, adjust static args if needed\n    if (args.length !== firstServiceArgPos) {\n      throw new Error(`[createInstance] First service dependency of ${ctor.name} at position ${firstServiceArgPos + 1} conflicts with ${args.length} static arguments`);\n    }\n\n    // now create the instance\n    return new ctor(...[...args, ...serviceArgs]);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILogService, IOptionsService, LogLevelEnum } from 'common/services/Services';\n\ntype LogType = (message?: any, ...optionalParams: any[]) => void;\n\ninterface IConsole {\n  log: LogType;\n  error: LogType;\n  info: LogType;\n  trace: LogType;\n  warn: LogType;\n}\n\n// console is available on both node.js and browser contexts but the common\n// module doesn't depend on them so we need to explicitly declare it.\ndeclare const console: IConsole;\n\nconst optionsKeyToLogLevel: { [key: string]: LogLevelEnum } = {\n  debug: LogLevelEnum.DEBUG,\n  info: LogLevelEnum.INFO,\n  warn: LogLevelEnum.WARN,\n  error: LogLevelEnum.ERROR,\n  off: LogLevelEnum.OFF\n};\n\nconst LOG_PREFIX = 'xterm.js: ';\n\nexport class LogService implements ILogService {\n  public serviceBrand: any;\n\n  public logLevel: LogLevelEnum = LogLevelEnum.OFF;\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    this._updateLogLevel();\n    this._optionsService.onOptionChange(key => {\n      if (key === 'logLevel') {\n        this._updateLogLevel();\n      }\n    });\n  }\n\n  private _updateLogLevel(): void {\n    this.logLevel = optionsKeyToLogLevel[this._optionsService.rawOptions.logLevel];\n  }\n\n  private _evalLazyOptionalParams(optionalParams: any[]): void {\n    for (let i = 0; i < optionalParams.length; i++) {\n      if (typeof optionalParams[i] === 'function') {\n        optionalParams[i] = optionalParams[i]();\n      }\n    }\n  }\n\n  private _log(type: LogType, message: string, optionalParams: any[]): void {\n    this._evalLazyOptionalParams(optionalParams);\n    type.call(console, LOG_PREFIX + message, ...optionalParams);\n  }\n\n  public debug(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.DEBUG) {\n      this._log(console.log, message, optionalParams);\n    }\n  }\n\n  public info(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.INFO) {\n      this._log(console.info, message, optionalParams);\n    }\n  }\n\n  public warn(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.WARN) {\n      this._log(console.warn, message, optionalParams);\n    }\n  }\n\n  public error(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.ERROR) {\n      this._log(console.error, message, optionalParams);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService, ITerminalOptions, FontWeight } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { isMac } from 'common/Platform';\n\n// Source: https://freesound.org/people/altemark/sounds/45759/\n// This sound is released under the Creative Commons Attribution 3.0 Unported\n// (CC BY 3.0) license. It was created by 'altemark'. No modifications have been\n// made, apart from the conversion to base64.\nexport const DEFAULT_BELL_SOUND = 'data:audio/mp3;base64,SUQzBAAAAAAAI1RTU0UAAAAPAAADTGF2ZjU4LjMyLjEwNAAAAAAAAAAAAAAA//tQxAADB8AhSmxhIIEVCSiJrDCQBTcu3UrAIwUdkRgQbFAZC1CQEwTJ9mjRvBA4UOLD8nKVOWfh+UlK3z/177OXrfOdKl7pyn3Xf//WreyTRUoAWgBgkOAGbZHBgG1OF6zM82DWbZaUmMBptgQhGjsyYqc9ae9XFz280948NMBWInljyzsNRFLPWdnZGWrddDsjK1unuSrVN9jJsK8KuQtQCtMBjCEtImISdNKJOopIpBFpNSMbIHCSRpRR5iakjTiyzLhchUUBwCgyKiweBv/7UsQbg8isVNoMPMjAAAA0gAAABEVFGmgqK////9bP/6XCykxBTUUzLjEwMKqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq';\n\nexport const DEFAULT_OPTIONS: Readonly<ITerminalOptions> = {\n  cols: 80,\n  rows: 24,\n  cursorBlink: false,\n  cursorStyle: 'block',\n  cursorWidth: 1,\n  customGlyphs: true,\n  bellSound: DEFAULT_BELL_SOUND,\n  bellStyle: 'none',\n  drawBoldTextInBrightColors: true,\n  fastScrollModifier: 'alt',\n  fastScrollSensitivity: 5,\n  fontFamily: 'courier-new, courier, monospace',\n  fontSize: 15,\n  fontWeight: 'normal',\n  fontWeightBold: 'bold',\n  lineHeight: 1.0,\n  linkTooltipHoverDuration: 500,\n  letterSpacing: 0,\n  logLevel: 'info',\n  scrollback: 1000,\n  scrollSensitivity: 1,\n  screenReaderMode: false,\n  macOptionIsMeta: false,\n  macOptionClickForcesSelection: false,\n  minimumContrastRatio: 1,\n  disableStdin: false,\n  allowProposedApi: true,\n  allowTransparency: false,\n  tabStopWidth: 8,\n  theme: {},\n  rightClickSelectsWord: isMac,\n  rendererType: 'canvas',\n  windowOptions: {},\n  windowsMode: false,\n  wordSeparator: ' ()[]{}\\',\"`',\n  altClickMovesCursor: true,\n  convertEol: false,\n  termName: 'xterm',\n  cancelEvents: false\n};\n\nconst FONT_WEIGHT_OPTIONS: Extract<FontWeight, string>[] = ['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900'];\n\nexport class OptionsService implements IOptionsService {\n  public serviceBrand: any;\n\n  public readonly rawOptions: ITerminalOptions;\n  public options: ITerminalOptions;\n\n  private _onOptionChange = new EventEmitter<string>();\n  public get onOptionChange(): IEvent<string> { return this._onOptionChange.event; }\n\n  constructor(options: Partial<ITerminalOptions>) {\n    // set the default value of each option\n    const defaultOptions = { ...DEFAULT_OPTIONS };\n    for (const key in options) {\n      if (key in defaultOptions) {\n        try {\n          const newValue = options[key];\n          defaultOptions[key] = this._sanitizeAndValidateOption(key, newValue);\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    }\n\n    // set up getters and setters for each option\n    this.rawOptions = defaultOptions;\n    this.options = { ... defaultOptions };\n    this._setupOptions();\n  }\n\n  private _setupOptions(): void {\n    const getter = (propName: string): any => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n      return this.rawOptions[propName];\n    };\n\n    const setter = (propName: string, value: any): void => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n\n      value = this._sanitizeAndValidateOption(propName, value);\n      // Don't fire an option change event if they didn't change\n      if (this.rawOptions[propName] !== value) {\n        this.rawOptions[propName] = value;\n        this._onOptionChange.fire(propName);\n      }\n    };\n\n    for (const propName in this.rawOptions) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this.options, propName, desc);\n    }\n  }\n\n  public setOption(key: string, value: any): void {\n    this.options[key] = value;\n  }\n\n  private _sanitizeAndValidateOption(key: string, value: any): any {\n    switch (key) {\n      case 'bellStyle':\n      case 'cursorStyle':\n      case 'rendererType':\n      case 'wordSeparator':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        break;\n      case 'fontWeight':\n      case 'fontWeightBold':\n        if (typeof value === 'number' && 1 <= value && value <= 1000) {\n          // already valid numeric value\n          break;\n        }\n        value = FONT_WEIGHT_OPTIONS.includes(value) ? value : DEFAULT_OPTIONS[key];\n        break;\n      case 'cursorWidth':\n        value = Math.floor(value);\n        // Fall through for bounds check\n      case 'lineHeight':\n      case 'tabStopWidth':\n        if (value < 1) {\n          throw new Error(`${key} cannot be less than 1, value: ${value}`);\n        }\n        break;\n      case 'minimumContrastRatio':\n        value = Math.max(1, Math.min(21, Math.round(value * 10) / 10));\n        break;\n      case 'scrollback':\n        value = Math.min(value, 4294967295);\n        if (value < 0) {\n          throw new Error(`${key} cannot be less than 0, value: ${value}`);\n        }\n        break;\n      case 'fastScrollSensitivity':\n      case 'scrollSensitivity':\n        if (value <= 0) {\n          throw new Error(`${key} cannot be less than or equal to 0, value: ${value}`);\n        }\n      case 'rows':\n      case 'cols':\n        if (!value && value !== 0) {\n          throw new Error(`${key} must be numeric, value: ${value}`);\n        }\n        break;\n    }\n    return value;\n  }\n\n  public getOption(key: string): any {\n    return this.options[key];\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IServiceIdentifier } from 'common/services/Services';\n\nconst DI_TARGET = 'di$target';\nconst DI_DEPENDENCIES = 'di$dependencies';\n\nexport const serviceRegistry: Map<string, IServiceIdentifier<any>> = new Map();\n\nexport function getServiceDependencies(ctor: any): { id: IServiceIdentifier<any>, index: number, optional: boolean }[] {\n  return ctor[DI_DEPENDENCIES] || [];\n}\n\nexport function createDecorator<T>(id: string): IServiceIdentifier<T> {\n  if (serviceRegistry.has(id)) {\n    return serviceRegistry.get(id)!;\n  }\n\n  const decorator: any = function (target: Function, key: string, index: number): any {\n    if (arguments.length !== 3) {\n      throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n    }\n\n    storeServiceDependency(decorator, target, index);\n  };\n\n  decorator.toString = () => id;\n\n  serviceRegistry.set(id, decorator);\n  return decorator;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number): void {\n  if ((target as any)[DI_TARGET] === target) {\n    (target as any)[DI_DEPENDENCIES].push({ id, index });\n  } else {\n    (target as any)[DI_DEPENDENCIES] = [{ id, index }];\n    (target as any)[DI_TARGET] = target;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IDecPrivateModes, ICoreMouseEvent, CoreMouseEncoding, ICoreMouseProtocol, CoreMouseEventType, ICharset, IWindowOptions, IModes, IAttributeData, ScrollSource } from 'common/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\n\nexport const IBufferService = createDecorator<IBufferService>('BufferService');\nexport interface IBufferService {\n  serviceBrand: undefined;\n\n  readonly cols: number;\n  readonly rows: number;\n  readonly buffer: IBuffer;\n  readonly buffers: IBufferSet;\n  isUserScrolling: boolean;\n  onResize: IEvent<{ cols: number, rows: number }>;\n  onScroll: IEvent<number>;\n  scroll(eraseAttr: IAttributeData, isWrapped?: boolean): void;\n  scrollToBottom(): void;\n  scrollToTop(): void;\n  scrollToLine(line: number): void;\n  scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void;\n  scrollPages(pageCount: number): void;\n  resize(cols: number, rows: number): void;\n  reset(): void;\n}\n\nexport const ICoreMouseService = createDecorator<ICoreMouseService>('CoreMouseService');\nexport interface ICoreMouseService {\n  activeProtocol: string;\n  activeEncoding: string;\n  areMouseEventsActive: boolean;\n  addProtocol(name: string, protocol: ICoreMouseProtocol): void;\n  addEncoding(name: string, encoding: CoreMouseEncoding): void;\n  reset(): void;\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  triggerMouseEvent(event: ICoreMouseEvent): boolean;\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  onProtocolChange: IEvent<CoreMouseEventType>;\n\n  /**\n   * Human readable version of mouse events.\n   */\n  explainEvents(events: CoreMouseEventType): { [event: string]: boolean };\n}\n\nexport const ICoreService = createDecorator<ICoreService>('CoreService');\nexport interface ICoreService {\n  serviceBrand: undefined;\n\n  /**\n   * Initially the cursor will not be visible until the first time the terminal\n   * is focused.\n   */\n  isCursorInitialized: boolean;\n  isCursorHidden: boolean;\n\n  readonly modes: IModes;\n  readonly decPrivateModes: IDecPrivateModes;\n\n  readonly onData: IEvent<string>;\n  readonly onUserInput: IEvent<void>;\n  readonly onBinary: IEvent<string>;\n\n  reset(): void;\n\n  /**\n   * Triggers the onData event in the public API.\n   * @param data The data that is being emitted.\n   * @param wasFromUser Whether the data originated from the user (as opposed to\n   * resulting from parsing incoming data). When true this will also:\n   * - Scroll to the bottom of the buffer.s\n   * - Fire the `onUserInput` event (so selection can be cleared).\n   */\n  triggerDataEvent(data: string, wasUserInput?: boolean): void;\n\n  /**\n   * Triggers the onBinary event in the public API.\n   * @param data The data that is being emitted.\n   */\n  triggerBinaryEvent(data: string): void;\n}\n\nexport const ICharsetService = createDecorator<ICharsetService>('CharsetService');\nexport interface ICharsetService {\n  serviceBrand: undefined;\n\n  charset: ICharset | undefined;\n  readonly glevel: number;\n\n  reset(): void;\n\n  /**\n   * Set the G level of the terminal.\n   * @param g\n   */\n  setgLevel(g: number): void;\n\n  /**\n   * Set the charset for the given G level of the terminal.\n   * @param g\n   * @param charset\n   */\n  setgCharset(g: number, charset: ICharset | undefined): void;\n}\n\nexport const IDirtyRowService = createDecorator<IDirtyRowService>('DirtyRowService');\nexport interface IDirtyRowService {\n  serviceBrand: undefined;\n\n  readonly start: number;\n  readonly end: number;\n\n  clearRange(): void;\n  markDirty(y: number): void;\n  markRangeDirty(y1: number, y2: number): void;\n  markAllDirty(): void;\n}\n\nexport interface IServiceIdentifier<T> {\n  (...args: any[]): void;\n  type: T;\n}\n\nexport interface IBrandedService {\n  serviceBrand: undefined;\n}\n\ntype GetLeadingNonServiceArgs<Args> =\n  Args extends [...IBrandedService[]] ? []\n    : Args extends [infer A1, ...IBrandedService[]] ? [A1]\n      : Args extends [infer A1, infer A2, ...IBrandedService[]] ? [A1, A2]\n        : Args extends [infer A1, infer A2, infer A3, ...IBrandedService[]] ? [A1, A2, A3]\n          : Args extends [infer A1, infer A2, infer A3, infer A4, ...IBrandedService[]] ? [A1, A2, A3, A4]\n            : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, ...IBrandedService[]] ? [A1, A2, A3, A4, A5]\n              : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6]\n                : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7]\n                  : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, infer A8, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7, A8]\n                    : never;\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('InstantiationService');\nexport interface IInstantiationService {\n  serviceBrand: undefined;\n\n  setService<T>(id: IServiceIdentifier<T>, instance: T): void;\n  getService<T>(id: IServiceIdentifier<T>): T | undefined;\n  createInstance<Ctor extends new (...args: any[]) => any, R extends InstanceType<Ctor>>(t: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n}\n\nexport enum LogLevelEnum {\n  DEBUG = 0,\n  INFO = 1,\n  WARN = 2,\n  ERROR = 3,\n  OFF = 4\n}\n\nexport const ILogService = createDecorator<ILogService>('LogService');\nexport interface ILogService {\n  serviceBrand: undefined;\n\n  logLevel: LogLevelEnum;\n\n  debug(message: any, ...optionalParams: any[]): void;\n  info(message: any, ...optionalParams: any[]): void;\n  warn(message: any, ...optionalParams: any[]): void;\n  error(message: any, ...optionalParams: any[]): void;\n}\n\nexport const IOptionsService = createDecorator<IOptionsService>('OptionsService');\nexport interface IOptionsService {\n  serviceBrand: undefined;\n\n  /**\n   * Read only access to the raw options object, this is an internal-only fast path for accessing\n   * single options without any validation as we trust TypeScript to enforce correct usage\n   * internally.\n   */\n  readonly rawOptions: Readonly<ITerminalOptions>;\n  readonly options: ITerminalOptions;\n\n  readonly onOptionChange: IEvent<string>;\n\n  setOption<T>(key: string, value: T): void;\n  getOption<T>(key: string): T | undefined;\n}\n\nexport type FontWeight = 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | number;\nexport type LogLevel = 'debug' | 'info' | 'warn' | 'error' | 'off';\n\nexport type RendererType = 'dom' | 'canvas';\n\nexport interface ITerminalOptions {\n  allowProposedApi: boolean;\n  allowTransparency: boolean;\n  altClickMovesCursor: boolean;\n  bellSound: string;\n  bellStyle: 'none' | 'sound' /* | 'visual' | 'both' */;\n  cols: number;\n  convertEol: boolean;\n  cursorBlink: boolean;\n  cursorStyle: 'block' | 'underline' | 'bar';\n  cursorWidth: number;\n  customGlyphs: boolean;\n  disableStdin: boolean;\n  drawBoldTextInBrightColors: boolean;\n  fastScrollModifier: 'alt' | 'ctrl' | 'shift' | undefined;\n  fastScrollSensitivity: number;\n  fontSize: number;\n  fontFamily: string;\n  fontWeight: FontWeight;\n  fontWeightBold: FontWeight;\n  letterSpacing: number;\n  lineHeight: number;\n  linkTooltipHoverDuration: number;\n  logLevel: LogLevel;\n  macOptionIsMeta: boolean;\n  macOptionClickForcesSelection: boolean;\n  minimumContrastRatio: number;\n  rendererType: RendererType;\n  rightClickSelectsWord: boolean;\n  rows: number;\n  screenReaderMode: boolean;\n  scrollback: number;\n  scrollSensitivity: number;\n  tabStopWidth: number;\n  theme: ITheme;\n  windowsMode: boolean;\n  windowOptions: IWindowOptions;\n  wordSeparator: string;\n\n  [key: string]: any;\n  cancelEvents: boolean;\n  termName: string;\n}\n\nexport interface ITheme {\n  foreground?: string;\n  background?: string;\n  cursor?: string;\n  cursorAccent?: string;\n  selection?: string;\n  black?: string;\n  red?: string;\n  green?: string;\n  yellow?: string;\n  blue?: string;\n  magenta?: string;\n  cyan?: string;\n  white?: string;\n  brightBlack?: string;\n  brightRed?: string;\n  brightGreen?: string;\n  brightYellow?: string;\n  brightBlue?: string;\n  brightMagenta?: string;\n  brightCyan?: string;\n  brightWhite?: string;\n}\n\nexport const IUnicodeService = createDecorator<IUnicodeService>('UnicodeService');\nexport interface IUnicodeService {\n  serviceBrand: undefined;\n  /** Register an Unicode version provider. */\n  register(provider: IUnicodeVersionProvider): void;\n  /** Registered Unicode versions. */\n  readonly versions: string[];\n  /** Currently active version. */\n  activeVersion: string;\n  /** Event triggered, when activate version changed. */\n  readonly onChange: IEvent<string>;\n\n  /**\n   * Unicode version dependent\n   */\n  wcwidth(codepoint: number): number;\n  getStringCellWidth(s: string): number;\n}\n\nexport interface IUnicodeVersionProvider {\n  readonly version: string;\n  wcwidth(ucs: number): 0 | 1 | 2;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeService, IUnicodeVersionProvider } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { UnicodeV6 } from 'common/input/UnicodeV6';\n\n\nexport class UnicodeService implements IUnicodeService {\n  public serviceBrand: any;\n\n  private _providers: {[key: string]: IUnicodeVersionProvider} = Object.create(null);\n  private _active: string = '';\n  private _activeProvider: IUnicodeVersionProvider;\n  private _onChange = new EventEmitter<string>();\n  public get onChange(): IEvent<string> { return this._onChange.event; }\n\n  constructor() {\n    const defaultProvider = new UnicodeV6();\n    this.register(defaultProvider);\n    this._active = defaultProvider.version;\n    this._activeProvider = defaultProvider;\n  }\n\n  public get versions(): string[] {\n    return Object.keys(this._providers);\n  }\n\n  public get activeVersion(): string {\n    return this._active;\n  }\n\n  public set activeVersion(version: string) {\n    if (!this._providers[version]) {\n      throw new Error(`unknown Unicode version \"${version}\"`);\n    }\n    this._active = version;\n    this._activeProvider = this._providers[version];\n    this._onChange.fire(version);\n  }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._providers[provider.version] = provider;\n  }\n\n  /**\n   * Unicode version dependent interface.\n   */\n  public wcwidth(num: number): number {\n    return this._activeProvider.wcwidth(num);\n  }\n\n  public getStringCellWidth(s: string): number {\n    let result = 0;\n    const length = s.length;\n    for (let i = 0; i < length; ++i) {\n      let code = s.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          // this should not happen with strings retrieved from\n          // Buffer.translateToString as it converts from UTF-32\n          // and therefore always should contain the second part\n          // for any other string we still have to handle it somehow:\n          // simply treat the lonely surrogate first as a single char (UCS-2 behavior)\n          return result + this.wcwidth(code);\n        }\n        const second = s.charCodeAt(i);\n        // convert surrogate pair to high codepoint only for valid second part (UTF-16)\n        // otherwise treat them independently (UCS-2 behavior)\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          code = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          result += this.wcwidth(second);\n        }\n      }\n      result += this.wcwidth(code);\n    }\n    return result;\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(4389);\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"FitAddon\"] = factory();\n\telse\n\t\troot[\"FitAddon\"] = factory();\n})(self, function() {\nreturn ","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal, ITerminalAddon } from 'xterm';\n\ninterface ITerminalDimensions {\n  /**\n   * The number of rows in the terminal.\n   */\n  rows: number;\n\n  /**\n   * The number of columns in the terminal.\n   */\n  cols: number;\n}\n\nconst MINIMUM_COLS = 2;\nconst MINIMUM_ROWS = 1;\n\nexport class FitAddon implements ITerminalAddon {\n  private _terminal: Terminal | undefined;\n\n  constructor() {}\n\n  public activate(terminal: Terminal): void {\n    this._terminal = terminal;\n  }\n\n  public dispose(): void {}\n\n  public fit(): void {\n    const dims = this.proposeDimensions();\n    if (!dims || !this._terminal) {\n      return;\n    }\n\n    // TODO: Remove reliance on private API\n    const core = (this._terminal as any)._core;\n\n    // Force a full render\n    if (this._terminal.rows !== dims.rows || this._terminal.cols !== dims.cols) {\n      core._renderService.clear();\n      this._terminal.resize(dims.cols, dims.rows);\n    }\n  }\n\n  public proposeDimensions(): ITerminalDimensions | undefined {\n    if (!this._terminal) {\n      return undefined;\n    }\n\n    if (!this._terminal.element || !this._terminal.element.parentElement) {\n      return undefined;\n    }\n\n    // TODO: Remove reliance on private API\n    const core = (this._terminal as any)._core;\n\n    if (core._renderService.dimensions.actualCellWidth === 0 || core._renderService.dimensions.actualCellHeight === 0) {\n      return undefined;\n    }\n\n    const parentElementStyle = window.getComputedStyle(this._terminal.element.parentElement);\n    const parentElementHeight = parseInt(parentElementStyle.getPropertyValue('height'));\n    const parentElementWidth = Math.max(0, parseInt(parentElementStyle.getPropertyValue('width')));\n    const elementStyle = window.getComputedStyle(this._terminal.element);\n    const elementPadding = {\n      top: parseInt(elementStyle.getPropertyValue('padding-top')),\n      bottom: parseInt(elementStyle.getPropertyValue('padding-bottom')),\n      right: parseInt(elementStyle.getPropertyValue('padding-right')),\n      left: parseInt(elementStyle.getPropertyValue('padding-left'))\n    };\n    const elementPaddingVer = elementPadding.top + elementPadding.bottom;\n    const elementPaddingHor = elementPadding.right + elementPadding.left;\n    const availableHeight = parentElementHeight - elementPaddingVer;\n    const availableWidth = parentElementWidth - elementPaddingHor - core.viewport.scrollBarWidth;\n    const geometry = {\n      cols: Math.max(MINIMUM_COLS, Math.floor(availableWidth / core._renderService.dimensions.actualCellWidth)),\n      rows: Math.max(MINIMUM_ROWS, Math.floor(availableHeight / core._renderService.dimensions.actualCellHeight))\n    };\n    return geometry;\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(775);\n"],"names":["$c4874ee0dde31fc5$var$NEWLINE","$c4874ee0dde31fc5$var$baseTheme","foreground","background","selection","black","brightBlack","red","brightRed","green","brightGreen","yellow","brightYellow","blue","brightBlue","magenta","brightMagenta","cyan","brightCyan","white","brightWhite","$c4874ee0dde31fc5$export$b81977eba3969224","$aD10K","LitElement","createRenderRoot","this","connectedCallback","super","terminal","$9NYKQ","Terminal","fontFamily","fontSize","lineHeight","theme","cursorBlink","rendererType","fitAddon","$82lk5","FitAddon","loadAddon","window","addEventListener","fit","open","term","$cud2N","Client","connect","then","url","writeln","runCommand","prompt","onAny","res","processEvents","$fvkUK","CommandObserver","commandList","commands","command","onData","e","console","log","getSelection","_core","buffer","x","write","length","substr","String","fromCharCode","onKey","key","event","join","closestCommands","filter","c","startsWith","newCommand","shift","clearLine","lastCommand","sendCommand","message","includes","type","value","replaceAll","writeResponse","text","JSON","stringify","error","render","html","css","parentElement","customElements","define","root","factory","exports","module","amd","a","i","self","o1","r1","s1","a1","l","h","u","f","e4","t4","_terminal","_renderService","call","_liveRegionLineCount","_charsToConsume","_charsToAnnounce","_accessibilityTreeRoot","document","createElement","classList","add","tabIndex","_rowContainer","setAttribute","_rowElements","rows","_createAccessibilityTreeNode","appendChild","_topBoundaryFocusListener","_onBoundaryFocus","_bottomBoundaryFocusListener","_refreshRowsDimensions","_renderRowsDebouncer","TimeBasedDebouncer","_renderRows","bind","_refreshRows","_liveRegion","element","Error","insertAdjacentElement","register","onResize","_onResize","onRender","start","end","onScroll","onA11yChar","char","_onChar","onLineFeed","onA11yTab","spaceCount","_onTab","_onKey","onBlur","_clearLiveRegion","onDimensionsChange","_screenDprMonitor","ScreenDprMonitor","setListener","addDisposableDomListener","n1","prototype","dispose","removeElementFromParent","position","boundaryElement","target","beforeBoundaryElement","getAttribute","lines","relatedTarget","topBoundaryElement","bottomBoundaryElement","pop","removeChild","removeEventListener","newElement","unshift","push","scrollLines","focus","preventDefault","stopImmediatePropagation","children","_refreshRowDimensions","t","MAX_ROWS_TO_READ","textContent","Strings","tooMuchOutput","isMac","parentNode","setTimeout","keyChar","refresh","setSize","toString","lineData","translateBufferLineToString","ydisp","posInSet","innerText","_announceCharacters","dimensions","actualCellHeight","style","height","Disposable","t2","AccessibilityManager","prepareTextForTerminal","replace","bracketTextForPaste","bracketedPasteMode","paste","textarea","coreService","decPrivateModes","triggerDataEvent","moveTextAreaUnderMouseCursor","ev","screenElement","pos","getBoundingClientRect","left","clientX","top","clientY","width","zIndex","t5","r2","i2","copyHandler","selectionService","clipboardData","setData","selectionText","handlePasteEvent","stopPropagation","getData","n2","o2","rightClickHandler","shouldSelectWord","rightClickSelect","select","channels","i3","rgb","rgba","toPaddedHex","s","contrastRatio","l1","l2","t6","toCss","r","g","b","e7","toRgba","color","blend","bg","fg","fgR","fgG","fgB","bgR","bgG","bgB","Math","round","isOpaque","ensureContrastRatio","ratio","result","toColor","opaque","rgbaColor","toChannels","opacity","n","toColorRGB","parseInt","slice","e8","relativeLuminance2","rs","gs","bs","pow","relativeLuminance","t7","reduceLuminance","bgRgba","fgRgba","cr","max","ceil","increaseLuminance","min","e9","bgL","fgL","t8","i4","s2","a2","r4","_color","_rgba","clear","setCss","getCss","setColor","getColor","ColorContrastCache","n4","r5","o4","DEFAULT_FOREGROUND","DEFAULT_BACKGROUND","DEFAULT_CURSOR","DEFAULT_CURSOR_ACCENT","DEFAULT_SELECTION","t9","DEFAULT_ANSI_COLORS","Object","freeze","colors","v","u1","e12","allowTransparency","canvas","ctx","getContext","_ctx","globalCompositeOperation","_litmusColor","createLinearGradient","_contrastCache","cursor","cursorAccent","selectionTransparent","selectionOpaque","ansi","contrastCache","_updateRestoreColors","onOptionsChange","setTheme","_parseColor","restoreColor","slot","_restoreColors","i5","fallback","fillStyle","warn","fillRect","data","getImageData","o","substring","split","map","component","Number","alpha","e13","ColorManager","t10","arguments","elements","t11","node","handler","options","disposed","o5","r6","s4","a4","e17","_bufferService","_logService","_unicodeService","_linkMatchers","_nextLinkMatcherId","_onShowLinkUnderline","EventEmitter","_onHideLinkUnderline","_onLinkTooltip","_rowsToLinkify","defineProperty","attachToDom","mouseZoneManager","_element","_mouseZoneManager","linkifyRows","clearAll","_rowsTimeoutId","clearTimeout","_linkifyRows","Linkifier","_timeBeforeLatency","absoluteRowIndexStart","absoluteRowIndexEnd","overscanLineLimit","cols","iterator","hasNext","next","_doLinkifyRow","range","first","content","debug","registerLinkMatcher","regex","matcher","id","matchIndex","validationCallback","hoverTooltipCallback","tooltipCallback","hoverLeaveCallback","leaveCallback","willLinkActivate","priority","_addLinkMatcherToList","splice","deregisterLinkMatcher","matcherId","rowIndex","match","rex","RegExp","source","flags","stringIndex","uri","indexOf","lastIndex","bufferIndex","stringIndexToBufferIndex","line","get","attr","getFg","isValid","_addLink","exec","y","getStringCellWidth","x1","y1","floor","x2","y2","MouseZone","newWindow","opener","location","href","fire","_createLinkHoverEvent","remove","i6","n5","IBufferService","ILogService","IUnicodeService","t12","c2","clickCallback","hoverCallback","a6","r7","c3","e22","t16","_linkProviders","_linkCacheDisposables","_isMouseOut","_activeLine","getDisposeArrayDisposable","n6","_currentLink","registerLinkProvider","linkProvider","providerIndex","mouseService","renderService","_mouseService","_clearCurrentLink","_onMouseMove","_onClick","_lastMouseEvent","_positionFromMouseEvent","composedPath","contains","_lastBufferCell","_onHover","_askForLink","_linkAtPosition","link","useLineCache","_activeProviderReplies","r8","forEach","reply","linkWithState","Map","linkProvided","s6","_checkLinkProviderResult","provideLinks","links","linksWithState","set","size","_removeIntersectingLinks","replies","occupiedCells","Set","providerReply","startX","endX","has","index","hasLinkBefore","j","linkAtPosition","find","_handleNewLink","currentLink","activate","startRow","endRow","_linkLeave","undefined","disposeArray","state","decorations","underline","pointerCursor","isHovered","_linkHover","defineProperties","toggle","_fireUnderlineEvent","onRenderedBufferChange","hover","showEvent","scrollOffset","_createLinkUnderlineEvent","leave","sameLine","wrappedFromLeft","wrappedToRight","coords","getCoords","o6","s5","Linkifier2","t14","promptLabel","a7","r12","e29","t20","_screenElement","_selectionService","_optionsService","_zones","_areZonesActive","_lastHoverCoords","_initialSelectionLength","_onMouseDown","_mouseMoveListener","_mouseLeaveListener","_onMouseLeave","_clickListener","n7","_deactivate","zone","_activate","_currentZone","pageX","pageY","_findZoneEventAt","_tooltipTimeout","_onTooltip","rawOptions","linkTooltipHoverDuration","_getSelectionLength","currentSelectionLength","o7","s7","IMouseService","ISelectionService","IOptionsService","MouseZoneManager","t18","r13","e31","_renderCallback","_animationFrame","cancelAnimationFrame","rowStart","rowEnd","rowCount","_rowCount","_rowStart","_rowEnd","requestAnimationFrame","_innerRefresh","t21","RenderDebouncer","e34","t24","apply","_currentDevicePixelRatio","devicePixelRatio","listener","_listener","clearListener","_outerListener","_updateDpr","_resolutionMediaMatchList","removeListener","matchMedia","addListener","r14","t22","o8","r15","s8","a8","l3","_","d","p","m","S","C","w","L","E","k","M","A","R","O","T","D","B","I","e37","t27","browser","Browser","_keyDownHandled","_keyPressHandled","_unprocessedDeadKey","_onCursorMove","_onRender","_onSelectionChange","_onTitleChange","_onBell","_onFocus","_onBlur","_onA11yCharEmitter","_onA11yTabEmitter","_setup","linkifier","_instantiationService","createInstance","linkifier2","decorationService","DecorationService","_inputHandler","onRequestBell","bell","onRequestRefreshRows","onRequestSendFocus","_reportFocus","onRequestReset","reset","onRequestWindowsOptionsReport","_reportWindowsOptions","onColor","_handleColorEvent","forwardEvent","onCursorMove","onTitleChange","_afterResize","n8","_colorManager","req","acc","ident","C0","ESC","toRgbString","BEL","setColors","viewport","onThemeChange","_isDisposed","_customKeyEventHandler","buffers","active","preventScroll","_updateOptions","_charSizeService","measure","setRenderer","_createRenderer","syncScrollArea","optionsService","screenReaderMode","_accessibilityManager","setupTabStops","_setTheme","_onTextAreaFocus","sendFocus","updateCursorStyle","_showCursor","blur","_onTextAreaBlur","_syncTextArea","isCursorInViewport","_compositionHelper","isComposing","cursorY","ybase","bufferLine","cursorX","cellHeight","getWidth","cellWidth","actualCellWidth","cursorTop","cursorLeft","_initGlobal","_bindKeys","hasSelection","pasteHandlerWrapper","isFirefox","button","rightClickSelectsWord","isLinux","_keyUp","_keyDown","_keyPress","compositionstart","compositionupdate","compositionend","_inputEvent","updateCompositionElements","_queueLinkification","parent","isConnected","_document","ownerDocument","dir","fragment","createDocumentFragment","_viewportElement","_viewportScrollArea","_helperContainer","coreBrowserService","CoreBrowserService","setService","ICoreBrowserService","CharSizeService","ICharSizeService","_theme","onOptionChange","_characterJoinerService","CharacterJoinerService","ICharacterJoinerService","renderer","RenderService","IRenderService","resize","_compositionView","CompositionHelper","_soundService","SoundService","ISoundService","MouseService","Viewport","amount","onRequestSyncScrollBar","onFocus","SelectionService","onRequestScrollLines","suppressScrollEvent","onSelectionChange","onRequestRedraw","onSelectionChanged","columnSelectMode","onLinuxMouseSelection","_onScroll","onMouseDown","coreMouseService","areMouseEventsActive","disable","enable","bindMouse","Renderer","DomRenderer","e39","el","sendEvent","but","action","getRawByteCoords","overrideType","buttons","deltaY","triggerMouseEvent","col","row","ctrl","ctrlKey","alt","altKey","shiftKey","requestedEvents","mouseup","wheel","mousedrag","mousemove","eventListeners","cancel","onProtocolChange","events","logLevel","explainEvents","passive","activeProtocol","shouldForceSelection","hasScrollback","getLinesScrolled","sequence","applicationCursorKeys","abs","onWheel","onTouchStart","onTouchMove","refreshRows","shouldColumnSelect","isCursorInitialized","disp","attachCustomKeyEventHandler","customKeyEventHandler","registerCharacterJoiner","joinerId","deregisterCharacterJoiner","deregister","markers","addMarker","cursorYOffset","normal","registerDecoration","decorationOptions","column","setSelection","getSelectionPosition","startColumn","selectionStart","endColumn","selectionEnd","clearSelection","selectAll","selectLines","keydown","scrollToBottom","evaluateKeyboardEvent","macOptionIsMeta","scrollCount","_isThirdLevelShift","ETX","CR","domEvent","thirdLevelKey","metaKey","isWindows","getModifierState","keyCode","charCode","which","inputType","composed","_soundBell","playBellSound","hasValidSize","clearMarkers","getBlankLine","DEFAULT_ATTR_DATA","clearTextureAtlas","WindowsOptionsReportType","GET_WIN_SIZE_PIXELS","canvasWidth","scaledCanvasWidth","toFixed","canvasHeight","scaledCanvasHeight","GET_CELL_SIZE_PIXELS","scaledCellWidth","scaledCellHeight","force","cancelEvents","_visualBell","bellStyle","CoreTerminal","t25","r17","e42","_debounceThresholdMS","_lastRefreshMs","_additionalRefreshRequested","_refreshTimeoutID","refreshRequestTime","Date","now","elapsed","waitPeriodBeforeTrailingRefresh","t31","a9","r18","l4","h2","e45","t34","_scrollLines","_scrollArea","scrollBarWidth","_currentRowHeight","_currentScaledCellHeight","_lastRecordedBufferLength","_lastRecordedViewportHeight","_lastRecordedBufferHeight","_lastTouchY","_lastScrollTop","_lastHadScrollBar","_wheelPartialScroll","_refreshAnimationFrame","_ignoreNextScrollEvent","offsetWidth","_activeBuffer","onBufferActivate","activeBuffer","_renderDimensions","n10","backgroundColor","_refresh","immediate","offsetHeight","newBufferHeight","scrollTop","scrollback","elementStyle","getComputedStyle","elementPadding","paddingLeft","paddingRight","offsetParent","diff","_bubbleScroll","scrollPosFromTop","cancelable","_getPixelsScrolled","_applyScrollModifier","deltaMode","WheelEvent","DOM_DELTA_LINE","DOM_DELTA_PAGE","DOM_DELTA_PIXEL","modifier","fastScrollModifier","fastScrollSensitivity","scrollSensitivity","touches","o10","s10","t32","o11","r19","s11","a10","e47","_textarea","_coreService","_isComposing","_isSendingComposition","_compositionPosition","_dataAlreadySent","_finalizeComposition","_handleAnyTextareaChanges","waitForPropagation","input","oldValue","dontRecurse","compositionViewBounds","i12","n11","ICoreService","t35","getCoordsRelativeToElement","rect","t36","r20","colCount","hasValidCharSize","isSelection","i13","r21","moveToRequestedRow","startY","targetY","bufferService","applicationCursor","wrappedRowsForRow","repeat","wrappedRows","direction","verticalDirection","isWrapped","currentRow","lineWraps","startCol","endCol","forward","currentCol","bufferStr","mod","count","str","rpt","t37","moveToCellSequence","targetX","rowDifference","currX","n14","r25","o13","s15","a13","CONSTRUCTOR_ONLY_OPTIONS","e55","_addonManager","AddonManager","_publicOptions","i17","getter","propName","setter","_checkReadonlyOptions","desc","_checkProposedApi","allowProposedApi","onBell","onBinary","_parser","ParserApi","UnicodeApi","_buffer","BufferNamespaceApi","mouseTrackingMode","applicationCursorKeysMode","applicationKeypadMode","applicationKeypad","insertMode","modes","originMode","origin","reverseWraparoundMode","reverseWraparound","sendFocusMode","wraparoundMode","wraparound","columns","_verifyIntegers","registerMarker","_verifyPositiveIntegers","scrollPages","pageCount","scrollToTop","scrollToLine","callback","writeUtf8","getOption","setOption","addon","values","Infinity","isNaN","t41","i18","r27","n15","o14","s16","a14","c5","l6","h5","u3","e58","_container","_alpha","_colors","_rendererId","_scaledCharWidth","_scaledCharHeight","_scaledCellWidth","_scaledCellHeight","_scaledCharLeft","_scaledCharTop","_currentGlyphIdentifier","chars","code","bold","dim","italic","_canvas","_initCanvas","_charAtlas","throwIfFalsy","_clearAll","onOptionsChanged","onGridChanged","colorSet","_refreshCharAtlas","_setTransparency","oldCanvas","cloneNode","replaceChild","acquireCharAtlas","warmUp","scaledCharWidth","scaledCharHeight","scaledCharLeft","scaledCharTop","_fillCells","_fillMiddleLineAtCells","cellOffset","_fillBottomLineAtCells","_fillLeftLineAtCell","_strokeRectAtCell","lineWidth","strokeRect","clearRect","_clearCells","_fillCharTrueColor","cell","font","_getFont","textBaseline","TEXT_BASELINE","_clipRow","drawSuccess","customGlyphs","tryDrawCustomChar","getChars","fillText","_drawChars","contrastColor","_getContrastColor","isFgRGB","isBgRGB","_drawUncachedChars","isInverse","isBgDefault","INVERTED_DEFAULT_COLOR","getBgColor","isFgDefault","getFgColor","DEFAULT_COLOR","drawBoldTextInBrightColors","isBold","WHITESPACE_CELL_CHAR","getCode","WHITESPACE_CELL_CODE","isDim","isItalic","draw","fgOverride","save","AttributeData","globalAlpha","DIM_OPACITY","restore","beginPath","clip","fontWeightBold","fontWeight","minimumContrastRatio","adjustedColor","fgColor","fgColorMode","getFgColorMode","bgColor","bgColorMode","getBgColorMode","temp","temp2","_resolveBackgroundRgba","_resolveForegroundRgba","inverse","t42","BaseRenderLayer","a15","r28","l7","h6","BLINK_INTERVAL","e61","t45","container","rendererId","_onRequestRedraw","_coreBrowserService","_cell","CellData","_state","isFocused","_cursorRenderers","bar","_renderBarCursor","block","_renderBlockCursor","_renderUnderlineCursor","n16","_cursorBlinkStateManager","_clearCursor","restartBlinkAnimation","pause","resume","CursorBlinkStateManager","_render","isPaused","triggeredByAnimationFrame","isCursorHidden","viewportRelativeCursorY","loadCell","cursorStyle","_renderBlurCursor","isCursorVisible","cursorWidth","strokeStyle","o15","s17","CursorRenderLayer","t43","e62","_restartInterval","_blinkStartTimeout","_blinkInterval","clearInterval","_animationTimeRestarted","timeToStart","u4","time","setInterval","wt","r29","t46","blockElementDefinitions","patternCharacterDefinitions","boxDrawingDefinitions","i20","n17","o16","s18","a16","c6","l8","h7","u5","f2","_1","d1","p1","v1","g1","m1","S1","xp","yp","P","H","F","W","U","q","N","z","K","G","V","X","Y","Z","J","$","Q","ee","te","re","ie","ne","oe","se","ae","ce","le","he","ue","fe","_e","de","pe","ve","ge","ye","me","Se","Ce","be","we","Le","Ee","xe","ke","Me","Ae","Re","Oe","Te","De","Be","Pe","Ie","He","Fe","je","We","Ue","qe","Ne","ze","Ke","Ge","Ve","Xe","Ye","Ze","Je","$e","Qe","et","tt","rt","it","nt","ot","st","at","ct","lt","ht","ut","ft","_t","dt","pt","vt","yt","charDefinition","yOffset","mt","patternSet","cachedPatterns","Ct","bt","o17","s19","a17","tmpCanvas","tmpCtx","imageData","ImageData","r30","Et","parseFloat","putImageData","pattern","createPattern","boxDrawingDefinition","entries","instructions","e66","instruction","e65","args","stroke","closePath","xOffset","clamp","svgToCanvasInstructionMap","bezierCurveTo","lineTo","moveTo","Mt","translateArgs","i21","n18","xt","cache","r31","Reflect","decorate","onShowLinkUnderline","onHideLinkUnderline","s20","__param","r32","e72","t50","is256Color","LinkRenderLayer","instantiationService","nextRendererId","_renderLayers","TextRenderLayer","_2","_id","SelectionRenderLayer","_devicePixelRatio","_updateDimensions","removeTerminalFromCache","onDevicePixelRatioChange","t53","e75","onCharSizeChanged","_runOperation","operation","renderRows","letterSpacing","IInstantiationService","_clearState","t54","e79","_didStateChange","viewportEndRow","t56","viewportCappedStartRow","viewportCappedEndRow","viewportStartRow","_areCoordinatesEqual","coord1","coord2","_characterWidth","_characterFont","_characterOverlapCache","_workCell","GridCache","t57","c10","r35","l12","terminalFont","u7","e82","_forEachCell","firstRow","lastRow","getJoinedCharacters","isJoined","lastCharX","JoinedCellData","translateToString","_isOverlapping","getCodePoint","NULL_CELL_CODE","_drawBackground","nextFillStyle","isBgPalette","prevFillStyle","_drawForeground","isInvisible","isUnderline","isStrikethrough","beginFrame","t59","hasOwnProperty","measureText","overlaps","_didWarmUp","_doWarmUp","o21","s23","f4","BaseCharAtlas","charAtlasCache","generateConfig","entry","ownedBy","configEquals","atlas","e86","t62","DynamicCharAtlas","newConfig","config","newEntry","e87","clonedColors","concat","i26","isLegacyEdge","CHAR_ATLAS_CELL_SPACING","e89","t65","TEXTURE_WIDTH","TEXTURE_HEIGHT","TypeError","constructor","i27","glyph","create","_config","_drawToCacheCount","NoneCharAtlas","_glyphsWaitingOnBitmap","_bitmapCommitTimeout","_bitmap","s24","_cacheCanvas","l13","r38","h9","_tmpCtx","_width","_height","_cacheMap","LRUMap","prealloc","capacity","_cacheCtx","n24","t66","_canCache","getGlyphCacheKey","cacheValue","_drawFromCache","peek","_drawToCache","_toCoordinateX","_toCoordinateY","cacheX","cacheY","drawImage","_getColorFromAnsiIndex","idx","_getBackgroundColor","_getForegroundColor","a22","fontStyle","isEmpty","o22","offset","inBitmap","_addGlyphToBitmap","isSafari","_generateBitmap","createImageBitmap","bitmap","_map","_head","_tail","_unlinkNode","prev","_appendNode","tail","_nodePool","nodePool","e92","head","peekValue","BG_CLASS_PREFIX","FOCUS_CLASS","_linkifier","t68","_terminalClass","h10","t70","e95","_refreshRowElements","_selectionContainer","_injectCss","_rowFactory","DomRendererRowFactory","_onLinkHover","_onLinkLeave","_linkifier2","a23","TERMINAL_CLASS_PREFIX","_themeStyleElement","_dimensionsStyleElement","n25","overflow","styles","_terminalSelector","BOLD_CLASS","ITALIC_CLASS","CURSOR_STYLE_BLOCK_CLASS","CURSOR_CLASS","CURSOR_BLINK_CLASS","CURSOR_STYLE_BAR_CLASS","CURSOR_STYLE_UNDERLINE_CLASS","FG_CLASS_PREFIX","c12","_createSelectionElement","middleRowsCount","colStart","colEnd","cursorAbsoluteY","_setCellUnderline","span","textDecoration","enumerable","configurable","n26","DIM_CLASS","t71","UNDERLINE_CLASS","STRIKETHROUGH_CLASS","o24","r41","s26","h11","f6","isCursorRow","joinedRanges","charElement","display","_applyMinimumContrast","_addStyle","padStart","isSelectAllActive","selectionStartLength","e98","t72","SelectionModel","areSelectionValuesReversed","startPlusLength","_onCharSizeChange","_measureStrategy","DomMeasureStrategy","n27","t73","o25","r42","a25","e101","_parentElement","_result","_measureElement","i30","e102","geometry","combinedData","firstCell","isCombined","t74","a26","r43","c14","l15","h12","setFromCharData","t76","getAsCharData","_characterJoiners","_nextCharacterJoinerId","joiner","e105","rangeStartColumn","currentStringIndex","getTrimmedLength","rangeAttrBG","_getJoinedRanges","lineStr","ranges","rangeStartStringIndex","rangeAttrFG","getBg","startIndex","endIndex","joinerRanges","_mergeRanges","_stringRangesToCellRanges","allJoinedRanges","currentRangeStarted","currentRange","currentRangeIndex","getString","newRange","inRange","getRootNode","activeElement","hasFocus","_decorations","t77","Decoration","e111","n29","t79","marker","isDisposed","onDispose","decoration","_queueRefresh","shouldRecreate","_onDispose","_marker","anchor","o27","s29","e112","t80","a27","_createElement","append","_refreshStyle","right","t81","r45","s30","e114","_renderer","_isPaused","_needsFullRefresh","_isNextRenderRedrawOnly","_needsSelectionRefresh","_canvasWidth","_canvasHeight","_selectionState","_onDimensionsChange","l16","r46","f8","_onRefreshRequest","t84","_renderDebouncer","_fullRefresh","a29","onCharSizeChange","IntersectionObserver","_onIntersectionChange","threshold","observe","disconnect","isIntersecting","intersectionRatio","isRedrawOnly","_fireOnCanvasResize","changeOptions","e117","NON_BREAKING_SPACE_CHAR","_dragScrollAmount","_enabled","c15","r47","h13","u11","_mouseDownTimeStamp","_oldHasSelection","_oldSelectionStart","_oldSelectionEnd","_onLinuxMouseSelection","_onRedrawRequest","_onRequestScrollLines","l17","_mouseUpListener","onUserInput","_trimListener","_onBufferActivate","_activeSelectionMode","_onMouseUp","_onTrim","_model","_removeMouseDownListeners","t88","finalSelectionStart","finalSelectionEnd","lineText","startRowEndCol","e122","ALL_NON_BREAKING_SPACE_REGEX","isLinuxMouseSelection","_isClickInSelection","_getMouseBufferCoords","_areCoordsInSelection","_selectWordAtCursor","getRangeLength","_selectWordAt","v2","_getMouseEventScrollAmount","terminalHeight","macOptionClickForcesSelection","timeStamp","_onIncrementalClick","detail","_onSingleClick","_onDoubleClick","_onTripleClick","_addMouseDownListeners","_dragScrollIntervalTimer","_dragScroll","hasWidth","_selectLineAt","_selectToWordAt","coordinates","_fireEventIfSelectionChanged","_fireOnSelectionChange","_convertViewportColToCharacterIndex","charIndex","_getWordAt","allowWhitespaceOnlySelection","followWrappedLinesBelow","leftLongCharOffset","charAt","leftWideCharCount","rightWideCharCount","_isCharWordSeparator","rightLongCharOffset","charOffset","trim","previousBufferLine","nextBufferLine","nextLineWordPosition","wordPosition","wordSeparator","getWrappedRangeForLine","o30","s32","f9","createDecorator","p2","t86","IDecorationService","_audioContext","audioContextCtor","AudioContext","webkitAudioContext","n33","audioContext","createBufferSource","decodeAudioData","_base64ToArrayBuffer","_removeMimeType","bellSound","e125","binaryString","base64","Uint8Array","len","charCodeAt","bytes","dataURI","destination","onDeleteEmitter","onInsertEmitter","onTrimEmitter","_array","_maxLength","_startIndex","_length","o31","t89","s33","r49","i37","n34","e127","Array","newMaxLength","_getCyclicIndex","newArray","newLength","recycle","deleteCount","items","countToTrim","trimStart","shiftElements","expandListBy","val","depth","isArray","clone","clonedObject","e130","t93","_onBinary","_onData","_onLineFeed","r50","InstantiationService","OptionsService","t94","BufferService","LogService","CoreMouseService","ICoreMouseService","_dirtyRowService","DirtyRowService","IDirtyRowService","unicodeService","UnicodeService","_charsetService","CharsetService","InputHandler","markRangeDirty","scrollBottom","_writeBuffer","WriteBuffer","promiseResult","e131","_onScrollApi","_windowsMode","writeSync","LogLevelEnum","WARN","hasWriteSyncWarnHappened","MINIMUM_COLS","MINIMUM_ROWS","eraseAttr","scroll","registerEscHandler","registerDcsHandler","registerCsiHandler","registerOscHandler","windowsMode","_enableWindowsMode","updateWindowsModeWrappedState","final","_listeners","e132","_event","_disposed","t92","e133","t96","e134","arg2","queue","from","e137","t98","MAX_PARSEBUFFER_LENGTH","i38","paramToWindowOption","opts","setWinLines","restoreWin","minimizeWin","setWinPosition","t97","setWinSizePixels","o32","s34","r52","raiseWin","c16","l18","lowerWin","f10","refreshWin","d4","p3","setWinSizeChars","maximizeWin","S2","C1","fullscreenWin","getWinState","getWinPosition","getWinSizePixels","getScreenSizePixels","getCellSizePixels","getWinSizeChars","getScreenSizeChars","getIconTitle","getWinTitle","pushTitle","popTitle","_data","Uint32Array","hook","params","unhook","subarray","e138","EscapeSequenceParser","_coreMouseService","_stringDecoder","StringToUtf32","_utf8Decoder","Utf8ToUtf32","_windowTitle","_iconName","_windowTitleStack","_iconNameStack","_curAttrData","r53","_eraseAttrDataInternal","_onRequestBell","_onRequestRefreshRows","_parseBuffer","_onRequestReset","_onRequestSendFocus","_onRequestSyncScrollBar","_onRequestWindowsOptionsReport","_onA11yChar","_onA11yTab","_4","_onColor","_parseStack","paused","cursorStartX","cursorStartY","decodedLength","_specialColors","setCsiHandlerFallback","identifier","identToString","toArray","setEscHandlerFallback","setExecuteHandlerFallback","setOscHandlerFallback","setDcsHandlerFallback","payload","setPrintHandler","insertChars","intermediates","scrollLeft","scrollRight","cursorDown","cursorForward","cursorBackward","cursorNextLine","cursorPrecedingLine","cursorCharAbsolute","cursorPosition","cursorForwardTab","eraseInDisplay","prefix","eraseInLine","insertLines","deleteLines","scrollDown","eraseChars","cursorBackwardTab","deleteChars","charPosAbsolute","scrollUp","hPositionRelative","repeatPrecedingCharacter","sendDeviceAttributesPrimary","sendDeviceAttributesSecondary","linePosAbsolute","hVPosition","tabClear","setMode","vPositionRelative","resetMode","resetModePrivate","charAttributes","deviceStatus","deviceStatusPrivate","softReset","setCursorStyle","setScrollRegion","saveCursor","windowOptions","restoreCursor","insertColumns","deleteColumns","setExecuteHandler","lineFeed","VT","carriageReturn","BS","backspace","LF","tab","SO","shiftOut","SI","shiftIn","IND","NEL","nextLine","HTS","tabSet","OscHandler","setIconName","setTitle","setOrReportIndexedColor","setOrReportFgColor","setOrReportBgColor","setOrReportCursorColor","restoreIndexedColor","restoreFgColor","restoreBgColor","restoreCursorColor","reverseIndex","keypadApplicationMode","keypadNumericMode","fullReset","setgLevel","selectDefaultCharset","flag","selectCharset","CHARSETS","screenAlignmentPattern","setErrorHandler","a31","t99","_preserveStack","_logSlowResolvingAsync","Promise","race","catch","err","parse","DEBUG","wasPaused","clearRange","e141","decode","print","chWidth","curAttr","markDirty","bufferRow","setCellFromCodePoint","wcwidth","charset","ch","stringFromCodePoint","extended","_eraseAttrData","insertCells","getNullCell","NULL_CELL_WIDTH","addCodepointToCell","precedingCodepoint","hasContent","DcsHandler","e142","convertEol","_restrictCursor","nextStop","originalX","maxCol","_setCursor","_moveCursor","cursorUp","diffToTop","diffToBottom","param","tabs","prevStop","_eraseInBufferLine","clearWrap","replaceCells","_resetBufferLine","scrollBackSize","scrollBottomAbsolute","deleteCells","_is","termName","setModePrivate","setgCharset","DEFAULT_CHARSET","activeEncoding","activateAltBuffer","activateNormalBuffer","_updateAttrColor","c1","mode","cSpace","advance","getSubParams","accu","underlineColor","_processUnderline","underlineStyle","updateExtended","hasSubParams","_extractColor","savedX","savedY","savedCurAttrData","savedCharset","isBlinking","bottom","second","_savedCharset","slots","parseColor","_setOrReportSpecialColor","collectAndFlag","level","fill","markAllDirty","_disposables","t101","unregister","e144","disposables","array","isNode","navigator","userAgent","platform","r54","test","isIpad","isIphone","fillFallback","e145","t102","r55","lastChar","CHAR_DATA_CODE_INDEX","e146","ExtendedAttrs","fromColorRGB","newObj","t104","e148","isBlink","isFgPalette","isAttributeDefault","hasExtendedAttrs","getUnderlineColor","getUnderlineColorMode","isUnderlineColorRGB","isUnderlineColorPalette","isUnderlineColorDefault","getUnderlineStyle","MAX_BUFFER_SIZE","e149","_hasScrollback","t105","r57","i39","_nullCell","fromCharData","NULL_CELL_CHAR","_whitespaceCell","WHITESPACE_CELL_WIDTH","_isClearing","_cols","_rows","CircularList","_getCorrectBufferLength","s35","getWhitespaceCell","BufferLine","maxLength","h15","relativeY","e151","correctBufferLength","fillViewportRows","fillAttr","newCols","nullCell","newRows","addToY","amountToTrim","_isReflowEnabled","_reflow","_reflowSmaller","_reflowLarger","reflowLargerGetLinesToRemove","reflowLargerCreateNewLayout","reflowLargerApplyNewLayout","layout","_reflowLargerAdjustViewport","countRemoved","wrappedLines","n36","absoluteY","destLineLengths","reflowSmallerGetNewLineLengths","linesToAdd","newLines","newLine","toInsert","countToInsert","a32","destLineIndex","srcLineIndex","srcCol","copyCellsFrom","cellsToCopy","destCol","wrappedLinesIndex","getWrappedLineTrimmedLength","setCell","viewportAdjustments","originalLines","originalLinesLength","originalLineIndex","nextToInsertIndex","nextToInsert","nextI","insertEvents","countInsertedSoFar","insertCountEmitted","lineIndex","trimRight","CHAR_DATA_WIDTH_INDEX","CHAR_DATA_CHAR_INDEX","last","tabStopWidth","Marker","onTrim","onInsert","onDelete","e152","_removeMarker","startOverscan","BufferStringIterator","Buffer","_trimRight","_endOverscan","_endIndex","_startOverscan","_current","e153","_combined","_extendedAttrs","t106","i40","r58","n37","o34","s36","e155","CHAR_DATA_ATTR_INDEX","eAttrs","codePoint","fillCellData","keys","copyFrom","applyInReverse","srcCombinedKeys","cp","e156","t107","e157","t108","r59","bufferAbsoluteY","toRemove","srcTrimmedTineLength","countToRemove","nextToRemoveIndex","countRemovedSoFar","nextToRemoveStart","newLayout","newLayoutLines","oldCols","newLineLengths","cellsNeeded","reduce","cellsAvailable","oldTrimmedLength","srcLine","lineLength","e160","t111","i41","t110","BufferSet","_normal","inactiveBuffer","t112","_alt","e163","t114","obj","i42","t113","r61","e164","t115","DEFAULT_ATTR","_nextId","r62","t116","NUL","SOH","STX","EOT","ACK","HT","DLE","DC1","DC2","DC3","NAK","SYN","ETB","CAN","EM","SUB","SP","DEL","PAD","HOP","BPH","NBH","HTJ","VTS","PLU","SS2","SS3","PU1","PU2","STS","CCH","MW","SPA","EPA","ENQ","SOS","SGCI","SCI","CSI","ST","OSC","FF","KEYCODE_KEY_MAPPINGS","FS","GS","RS","US","SSA","ESA","PLD","RI","DCS","applicationCursorMode","e167","t118","r63","modifiers","keyMapping","codepoint","_interim","t119","startPos","utf32ToString","r64","e169","interim","byte3","tmp","missing","discardInterim","i44","e170","fourStop","byte2","byte4","byte1","table","BMP_COMBINING","e171","t120","r65","UnicodeV6","i45","n39","version","ucs","mid","num","HIGH_COMBINING","queueMicrotask","resolve","cb","_action","_callbacks","_pendingData","_bufferOffset","_isSyncWriting","e173","_syncCalls","maxSubsequentCalls","e174","chunk","t121","e175","_innerWrite","lastTime","startTime","qmt","HASH_REX","pad","toLowerCase","low","i46","base","e177","t122","n40","adv","bits","PAYLOAD_LIMIT","_handlers","_active","EMPTY_HANDLERS","_ident","_handlerFb","_stack","loopPosition","fallThrough","registerHandler","handlerList","e178","t123","r68","handlerIndex","clearHandler","setHandlerFallback","e179","e180","put","handlerResult","success","DcsParser","EMPTY_PARAMS","Params","addParam","_handler","_params","_hitLimit","ret","n41","e181","e184","t125","i49","setPrototypeOf","__proto__","setDefault","codes","TransitionTable","NON_ASCII_PRINTABLE","VT500_TRANSITION_TABLE","blueprint","t124","EXECUTABLES","r69","a34","c18","PRINTABLES","states","addMany","e185","r70","t126","e186","_transitions","handlers","handlerPos","transition","chunkPos","initialState","currentState","_collect","_printHandlerFb","_executeHandlerFb","_csiHandlerFb","_escHandlerFb","_errorHandlerFb","_printHandler","_executeHandlers","f12","_csiHandlers","_escHandlers","_oscParser","OscParser","_dcsParser","_errorHandler","_identifier","finalRange","intermediate","n42","r71","e187","finalCode","reverse","clearPrintHandler","clearEscHandler","clearExecuteHandler","e188","clearCsiHandler","clearDcsHandler","e189","clearOscHandler","clearErrorHandler","collect","abort","addSubParam","addDigit","handlersEsc","jj","o35","t127","i50","r72","e192","_start","_put","e191","MAX_VALUE","e193","maxSubParamsLength","n43","Int32Array","_subParams","_subParamsLength","_subParamsIdx","Uint16Array","_rejectDigits","_rejectSubDigits","_digitIsSub","fromArray","newParams","e196","getSubParamsAll","store","cur","_addons","loadedAddon","instance","_wrappedAddonDispose","e197","t129","init","e198","t130","BufferApiView","e200","getLine","BufferLineApiView","_line","getCell","e201","t131","_onBufferChange","_alternate","e202","t132","e204","alternate","addCsiHandler","addDcsHandler","e205","t133","addEscHandler","e207","addOscHandler","e206","e208","provider","versions","activeVersion","__decorate","isUserScrolling","s38","t134","r77","e213","r78","_cachedBlankLine","bottomRow","willBufferBeTrimmed","isFull","scrollRegionHeight","oldYdisp","scrollAmount","glevel","_charsets","e215","NONE","restrict","e216","t137","r79","i53","X10","ANY","n45","isSGR","o37","DEFAULT","SGR","eventCode","_protocols","_encodings","c19","_activeProtocol","_activeEncoding","_onProtocolChange","_lastEvent","addProtocol","l21","addEncoding","DEFAULT_ENCODINGS","protocol","name","encoding","e217","a36","_compareEvents","triggerBinaryEvent","report","up","drag","move","e1","e2","DEFAULT_MODES","DEFAULT_DEC_PRIVATE_MODES","_onUserInput","_scrollToBottom","a37","r80","e220","t140","wasUserInput","disableStdin","e221","CoreService","t138","_end","n47","t141","e224","_entries","i55","service","s41","ServiceCollection","t142","_services","getService","ctor","e226","getServiceDependencies","dependency","s42","e227","serviceDependencies","firstServiceArgPos","serviceArgs","t143","INFO","ERROR","off","OFF","n49","_updateLogLevel","_evalLazyOptionalParams","optionalParams","t144","r83","a39","s43","e230","e231","_log","o41","DEFAULT_BELL_SOUND","i57","e232","t145","r84","i58","__assign","assign","DEFAULT_OPTIONS","n50","o42","altClickMovesCursor","_sanitizeAndValidateOption","defaultOptions","_setupOptions","_onOptionChange","e233","e234","r85","i59","s44","serviceRegistry","storeServiceDependency","decorator","di$target","t146","e236","r86","ICharsetService","_providers","_onChange","_activeProvider","e237","t147","r87","n51","e238","__webpack_module_cache__","cachedModule","moduleId","o43","t1","e3","dims","proposeDimensions","core","parentElementStyle","parentElementHeight","getPropertyValue","parentElementWidth","availableHeight","availableWidth","__webpack_require__","__webpack_modules__"],"version":3,"file":"view-shell.0774c3e6.js.map"}