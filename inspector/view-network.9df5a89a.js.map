{"mappings":"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","sources":["views/view-network.js","inspector/NetworkObserver.js"],"sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n \nimport { html, css, classMap, LitElement } from 'lit'\n\nimport { NetworkObserver } from '../inspector/NetworkObserver'\n\nexport class ViewNetwork extends LitElement {\n  static styles = css`\n    :host{\n        background:white;\n        display:flex;\n        width:100%;\n        height:100%;\n        overflow-y:auto;\n    }\n    main{\n        height: 100%;\n        max-height: 100%;\n        overflow-y: auto;\n        flex-grow:1;\n    }\n    table{\n        width:100%;\n        padding: 40px;\n        border-spacing: 10px 40px;\n    }\n    aside{\n        height: 100%;\n        max-width:50%;\n        flex-grow:1;\n        display:flex;\n        flex-direction: column;\n        padding:20px;\n        transition: all 0.2s ease;\n        contain: strict;\n        border: solid 5px blue;\n        background: white;\n        color: black;\n\n        position: absolute;\n        width: 50vw;\n   \n        z-index: 20;\n        right: -100vw;\n        height: 90vh;\n        top: 0;\n        bottom: 0;\n        margin: auto;\n        padding: 20px;\n        border-radius: 20px;\n    }\n    aside.active{\n        right: 2vw;\n    }\n    aside section{\n        display: flex;\n        flex-direction: column;\n    }\n    aside > *{\n        margin-top:5px;\n    \n    }\n\n    aside ul{\n        display: flex;\n        flex-direction: row;\n        flex-wrap: wrap;\n        padding: 0;\n        max-width: 30vw;\n        justify-content: space-between;\n    }\n    aside ul >*{\n        flex-grow:1;\n    }\n\n    .requestList{\n        list-style: none;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-content: center;\n        padding: 20px;\n        position: relative;\n    }\n    .requestList li{\n        margin: 2px;\n        transition: all 0.2s;\n        cursor: pointer;\n        border-radius: 30px;\n        display: flex;\n        justify-content: space-between;\n        overflow: hidden;\n    }\n    .requestList li.active{\n        background:blue;\n    }\n    .requestList li.error{\n        background:deeppink;\n    }\n    .requestList li.active *{\n        color:white;\n    }\n    .requestList li span{\n        padding: 10px;\n    }\n    .requestList li .status{\n        flex:1;\n        overflow: hidden;\n    }\n    .requestList li .host{\n        flex:2;\n        flex-shrink: 3;\n        overflow: hidden;\n        flex-grow: 5;\n    }\n    .requestList li .path{\n        flex:4;\n    }\n    .requestList li .initator{\n        flex:3;\n        overflow: hidden;\n    }\n\n    \n    `\n\n  static properties = {\n    filter: { type: String }\n  }\n\n  connectedCallback () {\n    super.connectedCallback()\n    NetworkObserver.onAny(() => { this.onRequest() })\n    NetworkObserver.start();\n  }\n\n  onRequest () {\n    this.requestUpdate()\n  }\n\n  openDetail (event, packet) {\n    event.preventDefault()\n    if (packet == this.detail) {\n      return\n    }\n    this.detail = packet\n    this.requestUpdate()\n  }\n\n  closeDetail () {\n    this.detail = undefined\n    this.requestUpdate()\n  }\n\n  requestRow (packet) {\n    const me = this\n    return html`\n            <li @click=\"${(e) => { me.openDetail(e, packet) }}\" class=\"${(this.detail == packet) ? 'active' : ''} ${packet.response.status != '200' ? 'error' : ''}\">\n                <span class=\"status\"> ${packet.response.status}</span>\n                <span class=\"host\"> ${packet.request.url.host}</span>\n                <span class=\"path\"> ${packet.request.url.pathname}</span>\n                <span class=\"initator\"> ${packet.request.initiator}</span>\n            </li>\n        `\n  }\n\n  renderDetail (p) {\n    let packet = p\n    if (packet == undefined) {\n      packet = {\n        response: {\n          status: '',\n          headers: {\n            'Conent-Type': 'text/plain'\n          },\n          body: ''\n        },\n        request: {\n          url: '',\n          initator: '',\n          headers: []\n        }\n      }\n    }\n    const classes = { active: packet == undefined }\n    const contentType = packet.response.headers['Content-Type']\n\n    return html`\n         <aside class=\"${p == undefined ? '' : 'active'}\">\n             <button @click=\"${() => this.closeDetail()}\">close</button>\n             <hr>\n            <section>\n                <p>Status: ${packet.response.status}</p>\n                <p>URL: ${packet.request.url}</p>\n                <p>From: ${packet.request.initiator}</p>\n            </section>\n            <hr>\n            <section>\n                <p>Request headers:</p>\n                <pre>${packet.request.headers.map(r => r + '\\n')}</pre>\n            </section>\n            <section>\n                <p>Response headers:</p>\n                <pre>${Object.keys(packet.response.headers).map(key => {\n                    return key + ':' + packet.response.headers[key] + '\\n'\n                })}</pre>\n            </section>\n            <section>\n                <p>Body: </p>\n                <a href=\"data:${contentType};base64,${this.utf8_to_b64(packet.response.body)}\" target=\"_blank\">Inspect ↗️</a>\n                ${this.renderBody(contentType, packet.response.body)}\n            </section>\n         </aside>\n        `\n  }\n\n  utf8_to_b64 (str) {\n    return window.btoa(unescape(encodeURIComponent(str)))\n  }\n\n  renderBody (type, body) {\n    return html`\n        <iframe src=\"data:${type};base64,${this.utf8_to_b64(body)}\"></iframe>\n        `\n  }\n\n  render () {\n    let extra = ''\n    // We only keep 50 requests, so if the detail-request was already removed\n    // from the list, render it at the top\n    if (this.detail && !NetworkObserver.requests.includes(this.detail)) {\n      extra = this.requestRow(this.detail)\n    }\n    return html`\n        <main>\n            <ul class=\"requestList\">\n                ${extra}\n                ${NetworkObserver.requests.map((r) => this.requestRow(r))}\n            </ul>\n        </main>\n        ${this.renderDetail(this.detail)}\n    `\n  }\n}\ncustomElements.define('view-network', ViewNetwork)\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport { Client } from './client'\nimport { GenericDispatcher } from './genericdispatcher'\n\nconst MAX_REQUEST_COUNT = 50\nclass _NetworkObserver extends GenericDispatcher {\n  constructor () {\n    super()\n    Client.on('network', (r) => this.onIncomingRequest(r))\n    this.counter = 0\n    this.requests = []\n  }\n\n  onIncomingRequest (networkRequest) {\n    const { request, response } = networkRequest\n    request.url = new URL(request.url)\n    this.counter++\n    this.requests.push({ id: this.counter, request, response })\n    if (this.requests.length > MAX_REQUEST_COUNT) {\n      this.requests.shift()\n    }\n    this.emit({ type: 'update', list: this.requests })\n  }\n\n  get (id) {\n    return this.requests[id]\n  }\n  start() {\n    console.log('Start network Recording');\n    Client.sendCommand('fetch_network');\n  }\n}\n\nexport const NetworkObserver = new _NetworkObserver()\n"],"names":["$f93b2daf7896fc9e$export$e57de79808915858","$aD10K","LitElement","css","filter","type","String","connectedCallback","super","$bXM9a","NetworkObserver","onAny","this","onRequest","start","requestUpdate","openDetail","event","packet","preventDefault","detail","closeDetail","undefined","requestRow","me","html","e","response","status","request","url","host","pathname","initiator","renderDetail","p","headers","body","initator","contentType","map","r","Object","keys","key","utf8_to_b64","renderBody","str","window","btoa","unescape","encodeURIComponent","render","extra","requests","includes","customElements","define","$8b5a8d5b46817dcd$var$_NetworkObserver","$vbrOd","GenericDispatcher","$cud2N","Client","on","onIncomingRequest","counter","networkRequest","URL","push","id","length","shift","emit","list","get","console","log","sendCommand","$8b5a8d5b46817dcd$export$9e4a2c29ef0a7cf7"],"version":3,"file":"view-network.9df5a89a.js.map"}